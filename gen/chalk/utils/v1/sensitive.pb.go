// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/utils/v1/sensitive.proto

package utilsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_chalk_utils_v1_sensitive_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         80411,
		Name:          "chalk.utils.v1.sensitive",
		Tag:           "varint,80411,opt,name=sensitive",
		Filename:      "chalk/utils/v1/sensitive.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Indicate that the field value should not be printed out when using debug
	// formats, e.g. when the field contains sensitive credentials.
	// Used instead of google.protobuf.FieldOptions.debug_redact because
	// vcpkg hasn't upgraded to a newer version of protos.
	//
	// optional bool sensitive = 80411;
	E_Sensitive = &file_chalk_utils_v1_sensitive_proto_extTypes[0]
)

var File_chalk_utils_v1_sensitive_proto protoreflect.FileDescriptor

const file_chalk_utils_v1_sensitive_proto_rawDesc = "" +
	"\n" +
	"\x1echalk/utils/v1/sensitive.proto\x12\x0echalk.utils.v1\x1a google/protobuf/descriptor.proto:@\n" +
	"\tsensitive\x12\x1d.google.protobuf.FieldOptions\x18\x9b\xf4\x04 \x01(\bR\tsensitive\x88\x01\x01B\xb7\x01\n" +
	"\x12com.chalk.utils.v1B\x0eSensitiveProtoP\x01Z7github.com/chalk-ai/chalk-go/gen/chalk/utils/v1;utilsv1\xa2\x02\x03CUX\xaa\x02\x0eChalk.Utils.V1\xca\x02\x0eChalk\\Utils\\V1\xe2\x02\x1aChalk\\Utils\\V1\\GPBMetadata\xea\x02\x10Chalk::Utils::V1b\x06proto3"

var file_chalk_utils_v1_sensitive_proto_goTypes = []any{
	(*descriptorpb.FieldOptions)(nil), // 0: google.protobuf.FieldOptions
}
var file_chalk_utils_v1_sensitive_proto_depIdxs = []int32{
	0, // 0: chalk.utils.v1.sensitive:extendee -> google.protobuf.FieldOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chalk_utils_v1_sensitive_proto_init() }
func file_chalk_utils_v1_sensitive_proto_init() {
	if File_chalk_utils_v1_sensitive_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_utils_v1_sensitive_proto_rawDesc), len(file_chalk_utils_v1_sensitive_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_chalk_utils_v1_sensitive_proto_goTypes,
		DependencyIndexes: file_chalk_utils_v1_sensitive_proto_depIdxs,
		ExtensionInfos:    file_chalk_utils_v1_sensitive_proto_extTypes,
	}.Build()
	File_chalk_utils_v1_sensitive_proto = out.File
	file_chalk_utils_v1_sensitive_proto_goTypes = nil
	file_chalk_utils_v1_sensitive_proto_depIdxs = nil
}
