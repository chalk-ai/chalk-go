// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/utils/v1/encoding.proto

package utilsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StringEncoding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapping       map[int32]string       `protobuf:"bytes,1,rep,name=mapping,proto3" json:"mapping,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringEncoding) Reset() {
	*x = StringEncoding{}
	mi := &file_chalk_utils_v1_encoding_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringEncoding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringEncoding) ProtoMessage() {}

func (x *StringEncoding) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_utils_v1_encoding_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringEncoding.ProtoReflect.Descriptor instead.
func (*StringEncoding) Descriptor() ([]byte, []int) {
	return file_chalk_utils_v1_encoding_proto_rawDescGZIP(), []int{0}
}

func (x *StringEncoding) GetMapping() map[int32]string {
	if x != nil {
		return x.Mapping
	}
	return nil
}

var file_chalk_utils_v1_encoding_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*StringEncoding)(nil),
		Field:         80412,
		Name:          "chalk.utils.v1.encoding",
		Tag:           "bytes,80412,opt,name=encoding",
		Filename:      "chalk/utils/v1/encoding.proto",
	},
}

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional chalk.utils.v1.StringEncoding encoding = 80412;
	E_Encoding = &file_chalk_utils_v1_encoding_proto_extTypes[0]
)

var File_chalk_utils_v1_encoding_proto protoreflect.FileDescriptor

const file_chalk_utils_v1_encoding_proto_rawDesc = "" +
	"\n" +
	"\x1dchalk/utils/v1/encoding.proto\x12\x0echalk.utils.v1\x1a google/protobuf/descriptor.proto\"\x93\x01\n" +
	"\x0eStringEncoding\x12E\n" +
	"\amapping\x18\x01 \x03(\v2+.chalk.utils.v1.StringEncoding.MappingEntryR\amapping\x1a:\n" +
	"\fMappingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:]\n" +
	"\bencoding\x12\x1c.google.protobuf.EnumOptions\x18\x9c\xf4\x04 \x01(\v2\x1e.chalk.utils.v1.StringEncodingR\bencoding\x88\x01\x01B\xb6\x01\n" +
	"\x12com.chalk.utils.v1B\rEncodingProtoP\x01Z7github.com/chalk-ai/chalk-go/gen/chalk/utils/v1;utilsv1\xa2\x02\x03CUX\xaa\x02\x0eChalk.Utils.V1\xca\x02\x0eChalk\\Utils\\V1\xe2\x02\x1aChalk\\Utils\\V1\\GPBMetadata\xea\x02\x10Chalk::Utils::V1b\x06proto3"

var (
	file_chalk_utils_v1_encoding_proto_rawDescOnce sync.Once
	file_chalk_utils_v1_encoding_proto_rawDescData []byte
)

func file_chalk_utils_v1_encoding_proto_rawDescGZIP() []byte {
	file_chalk_utils_v1_encoding_proto_rawDescOnce.Do(func() {
		file_chalk_utils_v1_encoding_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_utils_v1_encoding_proto_rawDesc), len(file_chalk_utils_v1_encoding_proto_rawDesc)))
	})
	return file_chalk_utils_v1_encoding_proto_rawDescData
}

var file_chalk_utils_v1_encoding_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_utils_v1_encoding_proto_goTypes = []any{
	(*StringEncoding)(nil),           // 0: chalk.utils.v1.StringEncoding
	nil,                              // 1: chalk.utils.v1.StringEncoding.MappingEntry
	(*descriptorpb.EnumOptions)(nil), // 2: google.protobuf.EnumOptions
}
var file_chalk_utils_v1_encoding_proto_depIdxs = []int32{
	1, // 0: chalk.utils.v1.StringEncoding.mapping:type_name -> chalk.utils.v1.StringEncoding.MappingEntry
	2, // 1: chalk.utils.v1.encoding:extendee -> google.protobuf.EnumOptions
	0, // 2: chalk.utils.v1.encoding:type_name -> chalk.utils.v1.StringEncoding
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	2, // [2:3] is the sub-list for extension type_name
	1, // [1:2] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chalk_utils_v1_encoding_proto_init() }
func file_chalk_utils_v1_encoding_proto_init() {
	if File_chalk_utils_v1_encoding_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_utils_v1_encoding_proto_rawDesc), len(file_chalk_utils_v1_encoding_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_chalk_utils_v1_encoding_proto_goTypes,
		DependencyIndexes: file_chalk_utils_v1_encoding_proto_depIdxs,
		MessageInfos:      file_chalk_utils_v1_encoding_proto_msgTypes,
		ExtensionInfos:    file_chalk_utils_v1_encoding_proto_extTypes,
	}.Build()
	File_chalk_utils_v1_encoding_proto = out.File
	file_chalk_utils_v1_encoding_proto_goTypes = nil
	file_chalk_utils_v1_encoding_proto_depIdxs = nil
}
