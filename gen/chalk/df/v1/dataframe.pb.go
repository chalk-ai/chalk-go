// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/df/v1/dataframe.proto

package dfv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/expression/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataframeCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *v1.ExprCall `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *DataframeCall) Reset() {
	*x = DataframeCall{}
	mi := &file_chalk_df_v1_dataframe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataframeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataframeCall) ProtoMessage() {}

func (x *DataframeCall) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_df_v1_dataframe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataframeCall.ProtoReflect.Descriptor instead.
func (*DataframeCall) Descriptor() ([]byte, []int) {
	return file_chalk_df_v1_dataframe_proto_rawDescGZIP(), []int{0}
}

func (x *DataframeCall) GetCall() *v1.ExprCall {
	if x != nil {
		return x.Call
	}
	return nil
}

type DataFramePlanV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*DataframeCall `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *DataFramePlanV1) Reset() {
	*x = DataFramePlanV1{}
	mi := &file_chalk_df_v1_dataframe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataFramePlanV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFramePlanV1) ProtoMessage() {}

func (x *DataFramePlanV1) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_df_v1_dataframe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFramePlanV1.ProtoReflect.Descriptor instead.
func (*DataFramePlanV1) Descriptor() ([]byte, []int) {
	return file_chalk_df_v1_dataframe_proto_rawDescGZIP(), []int{1}
}

func (x *DataFramePlanV1) GetCalls() []*DataframeCall {
	if x != nil {
		return x.Calls
	}
	return nil
}

var File_chalk_df_v1_dataframe_proto protoreflect.FileDescriptor

var file_chalk_df_v1_dataframe_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x64, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x64, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x42, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x22, 0x43, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x56, 0x31, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x64,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x42, 0xa2, 0x01, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x64, 0x66, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x44,
	0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x64, 0x66, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x66,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x44, 0x58, 0xaa, 0x02, 0x0b, 0x43, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x44, 0x66, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x44,
	0x66, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x44, 0x66, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x44, 0x66, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_df_v1_dataframe_proto_rawDescOnce sync.Once
	file_chalk_df_v1_dataframe_proto_rawDescData = file_chalk_df_v1_dataframe_proto_rawDesc
)

func file_chalk_df_v1_dataframe_proto_rawDescGZIP() []byte {
	file_chalk_df_v1_dataframe_proto_rawDescOnce.Do(func() {
		file_chalk_df_v1_dataframe_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_df_v1_dataframe_proto_rawDescData)
	})
	return file_chalk_df_v1_dataframe_proto_rawDescData
}

var file_chalk_df_v1_dataframe_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_df_v1_dataframe_proto_goTypes = []any{
	(*DataframeCall)(nil),   // 0: chalk.df.v1.DataframeCall
	(*DataFramePlanV1)(nil), // 1: chalk.df.v1.DataFramePlanV1
	(*v1.ExprCall)(nil),     // 2: chalk.expression.v1.ExprCall
}
var file_chalk_df_v1_dataframe_proto_depIdxs = []int32{
	2, // 0: chalk.df.v1.DataframeCall.call:type_name -> chalk.expression.v1.ExprCall
	0, // 1: chalk.df.v1.DataFramePlanV1.calls:type_name -> chalk.df.v1.DataframeCall
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_df_v1_dataframe_proto_init() }
func file_chalk_df_v1_dataframe_proto_init() {
	if File_chalk_df_v1_dataframe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_df_v1_dataframe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_df_v1_dataframe_proto_goTypes,
		DependencyIndexes: file_chalk_df_v1_dataframe_proto_depIdxs,
		MessageInfos:      file_chalk_df_v1_dataframe_proto_msgTypes,
	}.Build()
	File_chalk_df_v1_dataframe_proto = out.File
	file_chalk_df_v1_dataframe_proto_rawDesc = nil
	file_chalk_df_v1_dataframe_proto_goTypes = nil
	file_chalk_df_v1_dataframe_proto_depIdxs = nil
}
