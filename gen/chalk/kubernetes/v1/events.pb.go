// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/kubernetes/v1/events.proto

package kubernetesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChalkKubernetesEventSeries struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Count            int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	LastObservedTime int64                  `protobuf:"varint,2,opt,name=last_observed_time,json=lastObservedTime,proto3" json:"last_observed_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChalkKubernetesEventSeries) Reset() {
	*x = ChalkKubernetesEventSeries{}
	mi := &file_chalk_kubernetes_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalkKubernetesEventSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalkKubernetesEventSeries) ProtoMessage() {}

func (x *ChalkKubernetesEventSeries) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_kubernetes_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalkKubernetesEventSeries.ProtoReflect.Descriptor instead.
func (*ChalkKubernetesEventSeries) Descriptor() ([]byte, []int) {
	return file_chalk_kubernetes_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *ChalkKubernetesEventSeries) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ChalkKubernetesEventSeries) GetLastObservedTime() int64 {
	if x != nil {
		return x.LastObservedTime
	}
	return 0
}

type ChalkKubernetesEvent struct {
	state               protoimpl.MessageState      `protogen:"open.v1"`
	Type                string                      `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Reason              string                      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Action              string                      `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	ReportingController string                      `protobuf:"bytes,4,opt,name=reporting_controller,json=reportingController,proto3" json:"reporting_controller,omitempty"`
	EventTime           int64                       `protobuf:"varint,5,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	Note                *string                     `protobuf:"bytes,6,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Series              *ChalkKubernetesEventSeries `protobuf:"bytes,7,opt,name=series,proto3,oneof" json:"series,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChalkKubernetesEvent) Reset() {
	*x = ChalkKubernetesEvent{}
	mi := &file_chalk_kubernetes_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalkKubernetesEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalkKubernetesEvent) ProtoMessage() {}

func (x *ChalkKubernetesEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_kubernetes_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalkKubernetesEvent.ProtoReflect.Descriptor instead.
func (*ChalkKubernetesEvent) Descriptor() ([]byte, []int) {
	return file_chalk_kubernetes_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *ChalkKubernetesEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChalkKubernetesEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ChalkKubernetesEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ChalkKubernetesEvent) GetReportingController() string {
	if x != nil {
		return x.ReportingController
	}
	return ""
}

func (x *ChalkKubernetesEvent) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *ChalkKubernetesEvent) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *ChalkKubernetesEvent) GetSeries() *ChalkKubernetesEventSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

var File_chalk_kubernetes_v1_events_proto protoreflect.FileDescriptor

const file_chalk_kubernetes_v1_events_proto_rawDesc = "" +
	"\n" +
	" chalk/kubernetes/v1/events.proto\x12\x13chalk.kubernetes.v1\"`\n" +
	"\x1aChalkKubernetesEventSeries\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12,\n" +
	"\x12last_observed_time\x18\x02 \x01(\x03R\x10lastObservedTime\"\xa7\x02\n" +
	"\x14ChalkKubernetesEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x121\n" +
	"\x14reporting_controller\x18\x04 \x01(\tR\x13reportingController\x12\x1d\n" +
	"\n" +
	"event_time\x18\x05 \x01(\x03R\teventTime\x12\x17\n" +
	"\x04note\x18\x06 \x01(\tH\x00R\x04note\x88\x01\x01\x12L\n" +
	"\x06series\x18\a \x01(\v2/.chalk.kubernetes.v1.ChalkKubernetesEventSeriesH\x01R\x06series\x88\x01\x01B\a\n" +
	"\x05_noteB\t\n" +
	"\a_seriesB\xd7\x01\n" +
	"\x17com.chalk.kubernetes.v1B\vEventsProtoP\x01ZAgithub.com/chalk-ai/chalk-go/gen/chalk/kubernetes/v1;kubernetesv1\xa2\x02\x03CKX\xaa\x02\x13Chalk.Kubernetes.V1\xca\x02\x13Chalk\\Kubernetes\\V1\xe2\x02\x1fChalk\\Kubernetes\\V1\\GPBMetadata\xea\x02\x15Chalk::Kubernetes::V1b\x06proto3"

var (
	file_chalk_kubernetes_v1_events_proto_rawDescOnce sync.Once
	file_chalk_kubernetes_v1_events_proto_rawDescData []byte
)

func file_chalk_kubernetes_v1_events_proto_rawDescGZIP() []byte {
	file_chalk_kubernetes_v1_events_proto_rawDescOnce.Do(func() {
		file_chalk_kubernetes_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_kubernetes_v1_events_proto_rawDesc), len(file_chalk_kubernetes_v1_events_proto_rawDesc)))
	})
	return file_chalk_kubernetes_v1_events_proto_rawDescData
}

var file_chalk_kubernetes_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_kubernetes_v1_events_proto_goTypes = []any{
	(*ChalkKubernetesEventSeries)(nil), // 0: chalk.kubernetes.v1.ChalkKubernetesEventSeries
	(*ChalkKubernetesEvent)(nil),       // 1: chalk.kubernetes.v1.ChalkKubernetesEvent
}
var file_chalk_kubernetes_v1_events_proto_depIdxs = []int32{
	0, // 0: chalk.kubernetes.v1.ChalkKubernetesEvent.series:type_name -> chalk.kubernetes.v1.ChalkKubernetesEventSeries
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chalk_kubernetes_v1_events_proto_init() }
func file_chalk_kubernetes_v1_events_proto_init() {
	if File_chalk_kubernetes_v1_events_proto != nil {
		return
	}
	file_chalk_kubernetes_v1_events_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_kubernetes_v1_events_proto_rawDesc), len(file_chalk_kubernetes_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_kubernetes_v1_events_proto_goTypes,
		DependencyIndexes: file_chalk_kubernetes_v1_events_proto_depIdxs,
		MessageInfos:      file_chalk_kubernetes_v1_events_proto_msgTypes,
	}.Build()
	File_chalk_kubernetes_v1_events_proto = out.File
	file_chalk_kubernetes_v1_events_proto_goTypes = nil
	file_chalk_kubernetes_v1_events_proto_depIdxs = nil
}
