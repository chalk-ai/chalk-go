// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/engine/v1/plan_server.proto

package enginev1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPlanRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OnlineQueryRequest *v1.OnlineQueryRequest `protobuf:"bytes,1,opt,name=online_query_request,json=onlineQueryRequest,proto3" json:"online_query_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetPlanRequest) Reset() {
	*x = GetPlanRequest{}
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanRequest) ProtoMessage() {}

func (x *GetPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanRequest.ProtoReflect.Descriptor instead.
func (*GetPlanRequest) Descriptor() ([]byte, []int) {
	return file_chalk_engine_v1_plan_server_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlanRequest) GetOnlineQueryRequest() *v1.OnlineQueryRequest {
	if x != nil {
		return x.OnlineQueryRequest
	}
	return nil
}

type GetPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *Plan                  `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlanResponse) Reset() {
	*x = GetPlanResponse{}
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanResponse) ProtoMessage() {}

func (x *GetPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanResponse.ProtoReflect.Descriptor instead.
func (*GetPlanResponse) Descriptor() ([]byte, []int) {
	return file_chalk_engine_v1_plan_server_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanResponse) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type ExecuteQueryRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OnlineQueryRequest *v1.OnlineQueryRequest `protobuf:"bytes,1,opt,name=online_query_request,json=onlineQueryRequest,proto3" json:"online_query_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_engine_v1_plan_server_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteQueryRequest) GetOnlineQueryRequest() *v1.OnlineQueryRequest {
	if x != nil {
		return x.OnlineQueryRequest
	}
	return nil
}

type ExecuteQueryResponse struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	OnlineQueryResponse *v1.OnlineQueryResponse `protobuf:"bytes,1,opt,name=online_query_response,json=onlineQueryResponse,proto3" json:"online_query_response,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExecuteQueryResponse) Reset() {
	*x = ExecuteQueryResponse{}
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponse) ProtoMessage() {}

func (x *ExecuteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_engine_v1_plan_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_engine_v1_plan_server_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteQueryResponse) GetOnlineQueryResponse() *v1.OnlineQueryResponse {
	if x != nil {
		return x.OnlineQueryResponse
	}
	return nil
}

var File_chalk_engine_v1_plan_server_proto protoreflect.FileDescriptor

const file_chalk_engine_v1_plan_server_proto_rawDesc = "" +
	"\n" +
	"!chalk/engine/v1/plan_server.proto\x12\x0fchalk.engine.v1\x1a\"chalk/common/v1/online_query.proto\x1a\x1achalk/engine/v1/plan.proto\"g\n" +
	"\x0eGetPlanRequest\x12U\n" +
	"\x14online_query_request\x18\x01 \x01(\v2#.chalk.common.v1.OnlineQueryRequestR\x12onlineQueryRequest\"<\n" +
	"\x0fGetPlanResponse\x12)\n" +
	"\x04plan\x18\x01 \x01(\v2\x15.chalk.engine.v1.PlanR\x04plan\"l\n" +
	"\x13ExecuteQueryRequest\x12U\n" +
	"\x14online_query_request\x18\x01 \x01(\v2#.chalk.common.v1.OnlineQueryRequestR\x12onlineQueryRequest\"p\n" +
	"\x14ExecuteQueryResponse\x12X\n" +
	"\x15online_query_response\x18\x01 \x01(\v2$.chalk.common.v1.OnlineQueryResponseR\x13onlineQueryResponse2\xbc\x01\n" +
	"\vPlanService\x12N\n" +
	"\aGetPlan\x12\x1f.chalk.engine.v1.GetPlanRequest\x1a .chalk.engine.v1.GetPlanResponse\"\x00\x12]\n" +
	"\fExecuteQuery\x12$.chalk.engine.v1.ExecuteQueryRequest\x1a%.chalk.engine.v1.ExecuteQueryResponse\"\x00B\xbf\x01\n" +
	"\x13com.chalk.engine.v1B\x0fPlanServerProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/engine/v1;enginev1\xa2\x02\x03CEX\xaa\x02\x0fChalk.Engine.V1\xca\x02\x0fChalk\\Engine\\V1\xe2\x02\x1bChalk\\Engine\\V1\\GPBMetadata\xea\x02\x11Chalk::Engine::V1b\x06proto3"

var (
	file_chalk_engine_v1_plan_server_proto_rawDescOnce sync.Once
	file_chalk_engine_v1_plan_server_proto_rawDescData []byte
)

func file_chalk_engine_v1_plan_server_proto_rawDescGZIP() []byte {
	file_chalk_engine_v1_plan_server_proto_rawDescOnce.Do(func() {
		file_chalk_engine_v1_plan_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_engine_v1_plan_server_proto_rawDesc), len(file_chalk_engine_v1_plan_server_proto_rawDesc)))
	})
	return file_chalk_engine_v1_plan_server_proto_rawDescData
}

var file_chalk_engine_v1_plan_server_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chalk_engine_v1_plan_server_proto_goTypes = []any{
	(*GetPlanRequest)(nil),         // 0: chalk.engine.v1.GetPlanRequest
	(*GetPlanResponse)(nil),        // 1: chalk.engine.v1.GetPlanResponse
	(*ExecuteQueryRequest)(nil),    // 2: chalk.engine.v1.ExecuteQueryRequest
	(*ExecuteQueryResponse)(nil),   // 3: chalk.engine.v1.ExecuteQueryResponse
	(*v1.OnlineQueryRequest)(nil),  // 4: chalk.common.v1.OnlineQueryRequest
	(*Plan)(nil),                   // 5: chalk.engine.v1.Plan
	(*v1.OnlineQueryResponse)(nil), // 6: chalk.common.v1.OnlineQueryResponse
}
var file_chalk_engine_v1_plan_server_proto_depIdxs = []int32{
	4, // 0: chalk.engine.v1.GetPlanRequest.online_query_request:type_name -> chalk.common.v1.OnlineQueryRequest
	5, // 1: chalk.engine.v1.GetPlanResponse.plan:type_name -> chalk.engine.v1.Plan
	4, // 2: chalk.engine.v1.ExecuteQueryRequest.online_query_request:type_name -> chalk.common.v1.OnlineQueryRequest
	6, // 3: chalk.engine.v1.ExecuteQueryResponse.online_query_response:type_name -> chalk.common.v1.OnlineQueryResponse
	0, // 4: chalk.engine.v1.PlanService.GetPlan:input_type -> chalk.engine.v1.GetPlanRequest
	2, // 5: chalk.engine.v1.PlanService.ExecuteQuery:input_type -> chalk.engine.v1.ExecuteQueryRequest
	1, // 6: chalk.engine.v1.PlanService.GetPlan:output_type -> chalk.engine.v1.GetPlanResponse
	3, // 7: chalk.engine.v1.PlanService.ExecuteQuery:output_type -> chalk.engine.v1.ExecuteQueryResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chalk_engine_v1_plan_server_proto_init() }
func file_chalk_engine_v1_plan_server_proto_init() {
	if File_chalk_engine_v1_plan_server_proto != nil {
		return
	}
	file_chalk_engine_v1_plan_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_engine_v1_plan_server_proto_rawDesc), len(file_chalk_engine_v1_plan_server_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_engine_v1_plan_server_proto_goTypes,
		DependencyIndexes: file_chalk_engine_v1_plan_server_proto_depIdxs,
		MessageInfos:      file_chalk_engine_v1_plan_server_proto_msgTypes,
	}.Build()
	File_chalk_engine_v1_plan_server_proto = out.File
	file_chalk_engine_v1_plan_server_proto_goTypes = nil
	file_chalk_engine_v1_plan_server_proto_depIdxs = nil
}
