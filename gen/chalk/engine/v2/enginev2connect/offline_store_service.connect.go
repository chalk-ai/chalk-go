// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: chalk/engine/v2/offline_store_service.proto

package enginev2connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v2 "github.com/chalk-ai/chalk-go/gen/chalk/engine/v2"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// OfflineStoreServiceName is the fully-qualified name of the OfflineStoreService service.
	OfflineStoreServiceName = "chalk.engine.v2.OfflineStoreService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// OfflineStoreServiceGetQueryLogEntriesProcedure is the fully-qualified name of the
	// OfflineStoreService's GetQueryLogEntries RPC.
	OfflineStoreServiceGetQueryLogEntriesProcedure = "/chalk.engine.v2.OfflineStoreService/GetQueryLogEntries"
	// OfflineStoreServiceGetQueryValuesProcedure is the fully-qualified name of the
	// OfflineStoreService's GetQueryValues RPC.
	OfflineStoreServiceGetQueryValuesProcedure = "/chalk.engine.v2.OfflineStoreService/GetQueryValues"
	// OfflineStoreServiceGetFeatureValuesTimeSeriesChartProcedure is the fully-qualified name of the
	// OfflineStoreService's GetFeatureValuesTimeSeriesChart RPC.
	OfflineStoreServiceGetFeatureValuesTimeSeriesChartProcedure = "/chalk.engine.v2.OfflineStoreService/GetFeatureValuesTimeSeriesChart"
	// OfflineStoreServiceGetFeatureValuesProcedure is the fully-qualified name of the
	// OfflineStoreService's GetFeatureValues RPC.
	OfflineStoreServiceGetFeatureValuesProcedure = "/chalk.engine.v2.OfflineStoreService/GetFeatureValues"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	offlineStoreServiceServiceDescriptor                               = v2.File_chalk_engine_v2_offline_store_service_proto.Services().ByName("OfflineStoreService")
	offlineStoreServiceGetQueryLogEntriesMethodDescriptor              = offlineStoreServiceServiceDescriptor.Methods().ByName("GetQueryLogEntries")
	offlineStoreServiceGetQueryValuesMethodDescriptor                  = offlineStoreServiceServiceDescriptor.Methods().ByName("GetQueryValues")
	offlineStoreServiceGetFeatureValuesTimeSeriesChartMethodDescriptor = offlineStoreServiceServiceDescriptor.Methods().ByName("GetFeatureValuesTimeSeriesChart")
	offlineStoreServiceGetFeatureValuesMethodDescriptor                = offlineStoreServiceServiceDescriptor.Methods().ByName("GetFeatureValues")
)

// OfflineStoreServiceClient is a client for the chalk.engine.v2.OfflineStoreService service.
type OfflineStoreServiceClient interface {
	GetQueryLogEntries(context.Context, *connect.Request[v2.GetQueryLogEntriesRequest]) (*connect.Response[v2.GetQueryLogEntriesResponse], error)
	GetQueryValues(context.Context, *connect.Request[v2.GetQueryValuesRequest]) (*connect.Response[v2.GetQueryValuesResponse], error)
	GetFeatureValuesTimeSeriesChart(context.Context, *connect.Request[v2.GetFeatureValuesTimeSeriesChartRequest]) (*connect.Response[v2.GetFeatureValuesTimeSeriesChartResponse], error)
	GetFeatureValues(context.Context, *connect.Request[v2.GetFeatureValuesRequest]) (*connect.Response[v2.GetFeatureValuesResponse], error)
}

// NewOfflineStoreServiceClient constructs a client for the chalk.engine.v2.OfflineStoreService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewOfflineStoreServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) OfflineStoreServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &offlineStoreServiceClient{
		getQueryLogEntries: connect.NewClient[v2.GetQueryLogEntriesRequest, v2.GetQueryLogEntriesResponse](
			httpClient,
			baseURL+OfflineStoreServiceGetQueryLogEntriesProcedure,
			connect.WithSchema(offlineStoreServiceGetQueryLogEntriesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getQueryValues: connect.NewClient[v2.GetQueryValuesRequest, v2.GetQueryValuesResponse](
			httpClient,
			baseURL+OfflineStoreServiceGetQueryValuesProcedure,
			connect.WithSchema(offlineStoreServiceGetQueryValuesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getFeatureValuesTimeSeriesChart: connect.NewClient[v2.GetFeatureValuesTimeSeriesChartRequest, v2.GetFeatureValuesTimeSeriesChartResponse](
			httpClient,
			baseURL+OfflineStoreServiceGetFeatureValuesTimeSeriesChartProcedure,
			connect.WithSchema(offlineStoreServiceGetFeatureValuesTimeSeriesChartMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getFeatureValues: connect.NewClient[v2.GetFeatureValuesRequest, v2.GetFeatureValuesResponse](
			httpClient,
			baseURL+OfflineStoreServiceGetFeatureValuesProcedure,
			connect.WithSchema(offlineStoreServiceGetFeatureValuesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// offlineStoreServiceClient implements OfflineStoreServiceClient.
type offlineStoreServiceClient struct {
	getQueryLogEntries              *connect.Client[v2.GetQueryLogEntriesRequest, v2.GetQueryLogEntriesResponse]
	getQueryValues                  *connect.Client[v2.GetQueryValuesRequest, v2.GetQueryValuesResponse]
	getFeatureValuesTimeSeriesChart *connect.Client[v2.GetFeatureValuesTimeSeriesChartRequest, v2.GetFeatureValuesTimeSeriesChartResponse]
	getFeatureValues                *connect.Client[v2.GetFeatureValuesRequest, v2.GetFeatureValuesResponse]
}

// GetQueryLogEntries calls chalk.engine.v2.OfflineStoreService.GetQueryLogEntries.
func (c *offlineStoreServiceClient) GetQueryLogEntries(ctx context.Context, req *connect.Request[v2.GetQueryLogEntriesRequest]) (*connect.Response[v2.GetQueryLogEntriesResponse], error) {
	return c.getQueryLogEntries.CallUnary(ctx, req)
}

// GetQueryValues calls chalk.engine.v2.OfflineStoreService.GetQueryValues.
func (c *offlineStoreServiceClient) GetQueryValues(ctx context.Context, req *connect.Request[v2.GetQueryValuesRequest]) (*connect.Response[v2.GetQueryValuesResponse], error) {
	return c.getQueryValues.CallUnary(ctx, req)
}

// GetFeatureValuesTimeSeriesChart calls
// chalk.engine.v2.OfflineStoreService.GetFeatureValuesTimeSeriesChart.
func (c *offlineStoreServiceClient) GetFeatureValuesTimeSeriesChart(ctx context.Context, req *connect.Request[v2.GetFeatureValuesTimeSeriesChartRequest]) (*connect.Response[v2.GetFeatureValuesTimeSeriesChartResponse], error) {
	return c.getFeatureValuesTimeSeriesChart.CallUnary(ctx, req)
}

// GetFeatureValues calls chalk.engine.v2.OfflineStoreService.GetFeatureValues.
func (c *offlineStoreServiceClient) GetFeatureValues(ctx context.Context, req *connect.Request[v2.GetFeatureValuesRequest]) (*connect.Response[v2.GetFeatureValuesResponse], error) {
	return c.getFeatureValues.CallUnary(ctx, req)
}

// OfflineStoreServiceHandler is an implementation of the chalk.engine.v2.OfflineStoreService
// service.
type OfflineStoreServiceHandler interface {
	GetQueryLogEntries(context.Context, *connect.Request[v2.GetQueryLogEntriesRequest]) (*connect.Response[v2.GetQueryLogEntriesResponse], error)
	GetQueryValues(context.Context, *connect.Request[v2.GetQueryValuesRequest]) (*connect.Response[v2.GetQueryValuesResponse], error)
	GetFeatureValuesTimeSeriesChart(context.Context, *connect.Request[v2.GetFeatureValuesTimeSeriesChartRequest]) (*connect.Response[v2.GetFeatureValuesTimeSeriesChartResponse], error)
	GetFeatureValues(context.Context, *connect.Request[v2.GetFeatureValuesRequest]) (*connect.Response[v2.GetFeatureValuesResponse], error)
}

// NewOfflineStoreServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewOfflineStoreServiceHandler(svc OfflineStoreServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	offlineStoreServiceGetQueryLogEntriesHandler := connect.NewUnaryHandler(
		OfflineStoreServiceGetQueryLogEntriesProcedure,
		svc.GetQueryLogEntries,
		connect.WithSchema(offlineStoreServiceGetQueryLogEntriesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	offlineStoreServiceGetQueryValuesHandler := connect.NewUnaryHandler(
		OfflineStoreServiceGetQueryValuesProcedure,
		svc.GetQueryValues,
		connect.WithSchema(offlineStoreServiceGetQueryValuesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	offlineStoreServiceGetFeatureValuesTimeSeriesChartHandler := connect.NewUnaryHandler(
		OfflineStoreServiceGetFeatureValuesTimeSeriesChartProcedure,
		svc.GetFeatureValuesTimeSeriesChart,
		connect.WithSchema(offlineStoreServiceGetFeatureValuesTimeSeriesChartMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	offlineStoreServiceGetFeatureValuesHandler := connect.NewUnaryHandler(
		OfflineStoreServiceGetFeatureValuesProcedure,
		svc.GetFeatureValues,
		connect.WithSchema(offlineStoreServiceGetFeatureValuesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/chalk.engine.v2.OfflineStoreService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case OfflineStoreServiceGetQueryLogEntriesProcedure:
			offlineStoreServiceGetQueryLogEntriesHandler.ServeHTTP(w, r)
		case OfflineStoreServiceGetQueryValuesProcedure:
			offlineStoreServiceGetQueryValuesHandler.ServeHTTP(w, r)
		case OfflineStoreServiceGetFeatureValuesTimeSeriesChartProcedure:
			offlineStoreServiceGetFeatureValuesTimeSeriesChartHandler.ServeHTTP(w, r)
		case OfflineStoreServiceGetFeatureValuesProcedure:
			offlineStoreServiceGetFeatureValuesHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedOfflineStoreServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedOfflineStoreServiceHandler struct{}

func (UnimplementedOfflineStoreServiceHandler) GetQueryLogEntries(context.Context, *connect.Request[v2.GetQueryLogEntriesRequest]) (*connect.Response[v2.GetQueryLogEntriesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("chalk.engine.v2.OfflineStoreService.GetQueryLogEntries is not implemented"))
}

func (UnimplementedOfflineStoreServiceHandler) GetQueryValues(context.Context, *connect.Request[v2.GetQueryValuesRequest]) (*connect.Response[v2.GetQueryValuesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("chalk.engine.v2.OfflineStoreService.GetQueryValues is not implemented"))
}

func (UnimplementedOfflineStoreServiceHandler) GetFeatureValuesTimeSeriesChart(context.Context, *connect.Request[v2.GetFeatureValuesTimeSeriesChartRequest]) (*connect.Response[v2.GetFeatureValuesTimeSeriesChartResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("chalk.engine.v2.OfflineStoreService.GetFeatureValuesTimeSeriesChart is not implemented"))
}

func (UnimplementedOfflineStoreServiceHandler) GetFeatureValues(context.Context, *connect.Request[v2.GetFeatureValuesRequest]) (*connect.Response[v2.GetFeatureValuesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("chalk.engine.v2.OfflineStoreService.GetFeatureValues is not implemented"))
}
