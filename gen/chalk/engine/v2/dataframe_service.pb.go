// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/engine/v2/dataframe_service.proto

package enginev2

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	v2 "github.com/chalk-ai/chalk-go/gen/chalk/common/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataFrameServiceDummy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DataFrameServiceDummy) Reset() {
	*x = DataFrameServiceDummy{}
	mi := &file_chalk_engine_v2_dataframe_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataFrameServiceDummy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFrameServiceDummy) ProtoMessage() {}

func (x *DataFrameServiceDummy) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_engine_v2_dataframe_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFrameServiceDummy.ProtoReflect.Descriptor instead.
func (*DataFrameServiceDummy) Descriptor() ([]byte, []int) {
	return file_chalk_engine_v2_dataframe_service_proto_rawDescGZIP(), []int{0}
}

var File_chalk_engine_v2_dataframe_service_proto protoreflect.FileDescriptor

var file_chalk_engine_v2_dataframe_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x32, 0x71, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0b,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x80, 0x7d, 0x03, 0x42, 0xc5, 0x01, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x32, 0x42, 0x15, 0x44, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x61,
	0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x0f,
	0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x32, 0xca,
	0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5c, 0x56,
	0x32, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x3a,
	0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_engine_v2_dataframe_service_proto_rawDescOnce sync.Once
	file_chalk_engine_v2_dataframe_service_proto_rawDescData = file_chalk_engine_v2_dataframe_service_proto_rawDesc
)

func file_chalk_engine_v2_dataframe_service_proto_rawDescGZIP() []byte {
	file_chalk_engine_v2_dataframe_service_proto_rawDescOnce.Do(func() {
		file_chalk_engine_v2_dataframe_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_engine_v2_dataframe_service_proto_rawDescData)
	})
	return file_chalk_engine_v2_dataframe_service_proto_rawDescData
}

var file_chalk_engine_v2_dataframe_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chalk_engine_v2_dataframe_service_proto_goTypes = []any{
	(*DataFrameServiceDummy)(nil),  // 0: chalk.engine.v2.DataFrameServiceDummy
	(*v2.ExecutePlanRequest)(nil),  // 1: chalk.common.v2.ExecutePlanRequest
	(*v2.ExecutePlanResponse)(nil), // 2: chalk.common.v2.ExecutePlanResponse
}
var file_chalk_engine_v2_dataframe_service_proto_depIdxs = []int32{
	1, // 0: chalk.engine.v2.DataFrameService.ExecutePlan:input_type -> chalk.common.v2.ExecutePlanRequest
	2, // 1: chalk.engine.v2.DataFrameService.ExecutePlan:output_type -> chalk.common.v2.ExecutePlanResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chalk_engine_v2_dataframe_service_proto_init() }
func file_chalk_engine_v2_dataframe_service_proto_init() {
	if File_chalk_engine_v2_dataframe_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_engine_v2_dataframe_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_engine_v2_dataframe_service_proto_goTypes,
		DependencyIndexes: file_chalk_engine_v2_dataframe_service_proto_depIdxs,
		MessageInfos:      file_chalk_engine_v2_dataframe_service_proto_msgTypes,
	}.Build()
	File_chalk_engine_v2_dataframe_service_proto = out.File
	file_chalk_engine_v2_dataframe_service_proto_rawDesc = nil
	file_chalk_engine_v2_dataframe_service_proto_goTypes = nil
	file_chalk_engine_v2_dataframe_service_proto_depIdxs = nil
}
