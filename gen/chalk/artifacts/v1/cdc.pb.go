// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/artifacts/v1/cdc.proto

package artifactsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CDCTableReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema        string                 `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDCTableReference) Reset() {
	*x = CDCTableReference{}
	mi := &file_chalk_artifacts_v1_cdc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDCTableReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDCTableReference) ProtoMessage() {}

func (x *CDCTableReference) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_cdc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDCTableReference.ProtoReflect.Descriptor instead.
func (*CDCTableReference) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_cdc_proto_rawDescGZIP(), []int{0}
}

func (x *CDCTableReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CDCTableReference) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type CDCSource struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IntegrationName string                 `protobuf:"bytes,1,opt,name=integration_name,json=integrationName,proto3" json:"integration_name,omitempty"`
	Tables          []*CDCTableReference   `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CDCSource) Reset() {
	*x = CDCSource{}
	mi := &file_chalk_artifacts_v1_cdc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDCSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDCSource) ProtoMessage() {}

func (x *CDCSource) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_cdc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDCSource.ProtoReflect.Descriptor instead.
func (*CDCSource) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_cdc_proto_rawDescGZIP(), []int{1}
}

func (x *CDCSource) GetIntegrationName() string {
	if x != nil {
		return x.IntegrationName
	}
	return ""
}

func (x *CDCSource) GetTables() []*CDCTableReference {
	if x != nil {
		return x.Tables
	}
	return nil
}

var File_chalk_artifacts_v1_cdc_proto protoreflect.FileDescriptor

const file_chalk_artifacts_v1_cdc_proto_rawDesc = "" +
	"\n" +
	"\x1cchalk/artifacts/v1/cdc.proto\x12\x12chalk.artifacts.v1\"?\n" +
	"\x11CDCTableReference\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06schema\x18\x02 \x01(\tR\x06schema\"u\n" +
	"\tCDCSource\x12)\n" +
	"\x10integration_name\x18\x01 \x01(\tR\x0fintegrationName\x12=\n" +
	"\x06tables\x18\x02 \x03(\v2%.chalk.artifacts.v1.CDCTableReferenceR\x06tablesB\xcd\x01\n" +
	"\x16com.chalk.artifacts.v1B\bCdcProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/artifacts/v1;artifactsv1\xa2\x02\x03CAX\xaa\x02\x12Chalk.Artifacts.V1\xca\x02\x12Chalk\\Artifacts\\V1\xe2\x02\x1eChalk\\Artifacts\\V1\\GPBMetadata\xea\x02\x14Chalk::Artifacts::V1b\x06proto3"

var (
	file_chalk_artifacts_v1_cdc_proto_rawDescOnce sync.Once
	file_chalk_artifacts_v1_cdc_proto_rawDescData []byte
)

func file_chalk_artifacts_v1_cdc_proto_rawDescGZIP() []byte {
	file_chalk_artifacts_v1_cdc_proto_rawDescOnce.Do(func() {
		file_chalk_artifacts_v1_cdc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_cdc_proto_rawDesc), len(file_chalk_artifacts_v1_cdc_proto_rawDesc)))
	})
	return file_chalk_artifacts_v1_cdc_proto_rawDescData
}

var file_chalk_artifacts_v1_cdc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_artifacts_v1_cdc_proto_goTypes = []any{
	(*CDCTableReference)(nil), // 0: chalk.artifacts.v1.CDCTableReference
	(*CDCSource)(nil),         // 1: chalk.artifacts.v1.CDCSource
}
var file_chalk_artifacts_v1_cdc_proto_depIdxs = []int32{
	0, // 0: chalk.artifacts.v1.CDCSource.tables:type_name -> chalk.artifacts.v1.CDCTableReference
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chalk_artifacts_v1_cdc_proto_init() }
func file_chalk_artifacts_v1_cdc_proto_init() {
	if File_chalk_artifacts_v1_cdc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_cdc_proto_rawDesc), len(file_chalk_artifacts_v1_cdc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_artifacts_v1_cdc_proto_goTypes,
		DependencyIndexes: file_chalk_artifacts_v1_cdc_proto_depIdxs,
		MessageInfos:      file_chalk_artifacts_v1_cdc_proto_msgTypes,
	}.Build()
	File_chalk_artifacts_v1_cdc_proto = out.File
	file_chalk_artifacts_v1_cdc_proto_goTypes = nil
	file_chalk_artifacts_v1_cdc_proto_depIdxs = nil
}
