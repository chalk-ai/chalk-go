// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/artifacts/v1/deployment.proto

package artifactsv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeploymentArtifacts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Graph         *v1.Graph              `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Crons         []*CronQuery           `protobuf:"bytes,2,rep,name=crons,proto3" json:"crons,omitempty"`
	Charts        []*Chart               `protobuf:"bytes,3,rep,name=charts,proto3" json:"charts,omitempty"`
	CdcSources    []*CDCSource           `protobuf:"bytes,4,rep,name=cdc_sources,json=cdcSources,proto3" json:"cdc_sources,omitempty"`
	Config        *ProjectSettings       `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	Chalkpy       *ChalkpyInfo           `protobuf:"bytes,6,opt,name=chalkpy,proto3" json:"chalkpy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentArtifacts) Reset() {
	*x = DeploymentArtifacts{}
	mi := &file_chalk_artifacts_v1_deployment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentArtifacts) ProtoMessage() {}

func (x *DeploymentArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_deployment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentArtifacts.ProtoReflect.Descriptor instead.
func (*DeploymentArtifacts) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *DeploymentArtifacts) GetGraph() *v1.Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *DeploymentArtifacts) GetCrons() []*CronQuery {
	if x != nil {
		return x.Crons
	}
	return nil
}

func (x *DeploymentArtifacts) GetCharts() []*Chart {
	if x != nil {
		return x.Charts
	}
	return nil
}

func (x *DeploymentArtifacts) GetCdcSources() []*CDCSource {
	if x != nil {
		return x.CdcSources
	}
	return nil
}

func (x *DeploymentArtifacts) GetConfig() *ProjectSettings {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DeploymentArtifacts) GetChalkpy() *ChalkpyInfo {
	if x != nil {
		return x.Chalkpy
	}
	return nil
}

var File_chalk_artifacts_v1_deployment_proto protoreflect.FileDescriptor

const file_chalk_artifacts_v1_deployment_proto_rawDesc = "" +
	"\n" +
	"#chalk/artifacts/v1/deployment.proto\x12\x12chalk.artifacts.v1\x1a\x1cchalk/artifacts/v1/cdc.proto\x1a\x1echalk/artifacts/v1/chart.proto\x1a#chalk/artifacts/v1/cron_query.proto\x1a\x1fchalk/artifacts/v1/export.proto\x1a\x1achalk/graph/v1/graph.proto\"\xe2\x02\n" +
	"\x13DeploymentArtifacts\x12+\n" +
	"\x05graph\x18\x01 \x01(\v2\x15.chalk.graph.v1.GraphR\x05graph\x123\n" +
	"\x05crons\x18\x02 \x03(\v2\x1d.chalk.artifacts.v1.CronQueryR\x05crons\x121\n" +
	"\x06charts\x18\x03 \x03(\v2\x19.chalk.artifacts.v1.ChartR\x06charts\x12>\n" +
	"\vcdc_sources\x18\x04 \x03(\v2\x1d.chalk.artifacts.v1.CDCSourceR\n" +
	"cdcSources\x12;\n" +
	"\x06config\x18\x05 \x01(\v2#.chalk.artifacts.v1.ProjectSettingsR\x06config\x129\n" +
	"\achalkpy\x18\x06 \x01(\v2\x1f.chalk.artifacts.v1.ChalkpyInfoR\achalkpyB\xd4\x01\n" +
	"\x16com.chalk.artifacts.v1B\x0fDeploymentProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/artifacts/v1;artifactsv1\xa2\x02\x03CAX\xaa\x02\x12Chalk.Artifacts.V1\xca\x02\x12Chalk\\Artifacts\\V1\xe2\x02\x1eChalk\\Artifacts\\V1\\GPBMetadata\xea\x02\x14Chalk::Artifacts::V1b\x06proto3"

var (
	file_chalk_artifacts_v1_deployment_proto_rawDescOnce sync.Once
	file_chalk_artifacts_v1_deployment_proto_rawDescData []byte
)

func file_chalk_artifacts_v1_deployment_proto_rawDescGZIP() []byte {
	file_chalk_artifacts_v1_deployment_proto_rawDescOnce.Do(func() {
		file_chalk_artifacts_v1_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_deployment_proto_rawDesc), len(file_chalk_artifacts_v1_deployment_proto_rawDesc)))
	})
	return file_chalk_artifacts_v1_deployment_proto_rawDescData
}

var file_chalk_artifacts_v1_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chalk_artifacts_v1_deployment_proto_goTypes = []any{
	(*DeploymentArtifacts)(nil), // 0: chalk.artifacts.v1.DeploymentArtifacts
	(*v1.Graph)(nil),            // 1: chalk.graph.v1.Graph
	(*CronQuery)(nil),           // 2: chalk.artifacts.v1.CronQuery
	(*Chart)(nil),               // 3: chalk.artifacts.v1.Chart
	(*CDCSource)(nil),           // 4: chalk.artifacts.v1.CDCSource
	(*ProjectSettings)(nil),     // 5: chalk.artifacts.v1.ProjectSettings
	(*ChalkpyInfo)(nil),         // 6: chalk.artifacts.v1.ChalkpyInfo
}
var file_chalk_artifacts_v1_deployment_proto_depIdxs = []int32{
	1, // 0: chalk.artifacts.v1.DeploymentArtifacts.graph:type_name -> chalk.graph.v1.Graph
	2, // 1: chalk.artifacts.v1.DeploymentArtifacts.crons:type_name -> chalk.artifacts.v1.CronQuery
	3, // 2: chalk.artifacts.v1.DeploymentArtifacts.charts:type_name -> chalk.artifacts.v1.Chart
	4, // 3: chalk.artifacts.v1.DeploymentArtifacts.cdc_sources:type_name -> chalk.artifacts.v1.CDCSource
	5, // 4: chalk.artifacts.v1.DeploymentArtifacts.config:type_name -> chalk.artifacts.v1.ProjectSettings
	6, // 5: chalk.artifacts.v1.DeploymentArtifacts.chalkpy:type_name -> chalk.artifacts.v1.ChalkpyInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chalk_artifacts_v1_deployment_proto_init() }
func file_chalk_artifacts_v1_deployment_proto_init() {
	if File_chalk_artifacts_v1_deployment_proto != nil {
		return
	}
	file_chalk_artifacts_v1_cdc_proto_init()
	file_chalk_artifacts_v1_chart_proto_init()
	file_chalk_artifacts_v1_cron_query_proto_init()
	file_chalk_artifacts_v1_export_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_deployment_proto_rawDesc), len(file_chalk_artifacts_v1_deployment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_artifacts_v1_deployment_proto_goTypes,
		DependencyIndexes: file_chalk_artifacts_v1_deployment_proto_depIdxs,
		MessageInfos:      file_chalk_artifacts_v1_deployment_proto_msgTypes,
	}.Build()
	File_chalk_artifacts_v1_deployment_proto = out.File
	file_chalk_artifacts_v1_deployment_proto_goTypes = nil
	file_chalk_artifacts_v1_deployment_proto_depIdxs = nil
}
