// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/artifacts/v1/export.proto

package artifactsv1

import (
	v12 "github.com/chalk-ai/chalk-go/gen/chalk/common/v1"
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	v11 "github.com/chalk-ai/chalk-go/gen/chalk/lsp/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidationLogSeverity int32

const (
	ValidationLogSeverity_VALIDATION_LOG_SEVERITY_UNSPECIFIED ValidationLogSeverity = 0
	// Space field numbers out in case we need to add more
	// levels and have it be numerically congruent.
	ValidationLogSeverity_VALIDATION_LOG_SEVERITY_INFO    ValidationLogSeverity = 4
	ValidationLogSeverity_VALIDATION_LOG_SEVERITY_WARNING ValidationLogSeverity = 8
	ValidationLogSeverity_VALIDATION_LOG_SEVERITY_ERROR   ValidationLogSeverity = 12
)

// Enum value maps for ValidationLogSeverity.
var (
	ValidationLogSeverity_name = map[int32]string{
		0:  "VALIDATION_LOG_SEVERITY_UNSPECIFIED",
		4:  "VALIDATION_LOG_SEVERITY_INFO",
		8:  "VALIDATION_LOG_SEVERITY_WARNING",
		12: "VALIDATION_LOG_SEVERITY_ERROR",
	}
	ValidationLogSeverity_value = map[string]int32{
		"VALIDATION_LOG_SEVERITY_UNSPECIFIED": 0,
		"VALIDATION_LOG_SEVERITY_INFO":        4,
		"VALIDATION_LOG_SEVERITY_WARNING":     8,
		"VALIDATION_LOG_SEVERITY_ERROR":       12,
	}
)

func (x ValidationLogSeverity) Enum() *ValidationLogSeverity {
	p := new(ValidationLogSeverity)
	*p = x
	return p
}

func (x ValidationLogSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationLogSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_artifacts_v1_export_proto_enumTypes[0].Descriptor()
}

func (ValidationLogSeverity) Type() protoreflect.EnumType {
	return &file_chalk_artifacts_v1_export_proto_enumTypes[0]
}

func (x ValidationLogSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationLogSeverity.Descriptor instead.
func (ValidationLogSeverity) EnumDescriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{0}
}

type EnvironmentSettings struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Runtime          *string                `protobuf:"bytes,2,opt,name=runtime,proto3,oneof" json:"runtime,omitempty"`
	Requirements     *string                `protobuf:"bytes,3,opt,name=requirements,proto3,oneof" json:"requirements,omitempty"`
	Dockerfile       *string                `protobuf:"bytes,4,opt,name=dockerfile,proto3,oneof" json:"dockerfile,omitempty"`
	RequiresPackages []string               `protobuf:"bytes,5,rep,name=requires_packages,json=requiresPackages,proto3" json:"requires_packages,omitempty"`
	PlatformVersion  *string                `protobuf:"bytes,6,opt,name=platform_version,json=platformVersion,proto3,oneof" json:"platform_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EnvironmentSettings) Reset() {
	*x = EnvironmentSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentSettings) ProtoMessage() {}

func (x *EnvironmentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentSettings.ProtoReflect.Descriptor instead.
func (*EnvironmentSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{0}
}

func (x *EnvironmentSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnvironmentSettings) GetRuntime() string {
	if x != nil && x.Runtime != nil {
		return *x.Runtime
	}
	return ""
}

func (x *EnvironmentSettings) GetRequirements() string {
	if x != nil && x.Requirements != nil {
		return *x.Requirements
	}
	return ""
}

func (x *EnvironmentSettings) GetDockerfile() string {
	if x != nil && x.Dockerfile != nil {
		return *x.Dockerfile
	}
	return ""
}

func (x *EnvironmentSettings) GetRequiresPackages() []string {
	if x != nil {
		return x.RequiresPackages
	}
	return nil
}

func (x *EnvironmentSettings) GetPlatformVersion() string {
	if x != nil && x.PlatformVersion != nil {
		return *x.PlatformVersion
	}
	return ""
}

type ProjectSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       string                 `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Environments  []*EnvironmentSettings `protobuf:"bytes,2,rep,name=environments,proto3" json:"environments,omitempty"`
	Validation    *ValidationSettings    `protobuf:"bytes,3,opt,name=validation,proto3" json:"validation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectSettings) Reset() {
	*x = ProjectSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSettings) ProtoMessage() {}

func (x *ProjectSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSettings.ProtoReflect.Descriptor instead.
func (*ProjectSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectSettings) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectSettings) GetEnvironments() []*EnvironmentSettings {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *ProjectSettings) GetValidation() *ValidationSettings {
	if x != nil {
		return x.Validation
	}
	return nil
}

type MetadataSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Missing       string                 `protobuf:"bytes,2,opt,name=missing,proto3" json:"missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataSettings) Reset() {
	*x = MetadataSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSettings) ProtoMessage() {}

func (x *MetadataSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSettings.ProtoReflect.Descriptor instead.
func (*MetadataSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataSettings) GetMissing() string {
	if x != nil {
		return x.Missing
	}
	return ""
}

type FeatureSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      []*MetadataSettings    `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeatureSettings) Reset() {
	*x = FeatureSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureSettings) ProtoMessage() {}

func (x *FeatureSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureSettings.ProtoReflect.Descriptor instead.
func (*FeatureSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{3}
}

func (x *FeatureSettings) GetMetadata() []*MetadataSettings {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ResolverSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      []*MetadataSettings    `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolverSettings) Reset() {
	*x = ResolverSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolverSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolverSettings) ProtoMessage() {}

func (x *ResolverSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolverSettings.ProtoReflect.Descriptor instead.
func (*ResolverSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{4}
}

func (x *ResolverSettings) GetMetadata() []*MetadataSettings {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ValidationSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Feature       *FeatureSettings       `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	Resolver      *ResolverSettings      `protobuf:"bytes,2,opt,name=resolver,proto3" json:"resolver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationSettings) Reset() {
	*x = ValidationSettings{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationSettings) ProtoMessage() {}

func (x *ValidationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationSettings.ProtoReflect.Descriptor instead.
func (*ValidationSettings) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{5}
}

func (x *ValidationSettings) GetFeature() *FeatureSettings {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *ValidationSettings) GetResolver() *ResolverSettings {
	if x != nil {
		return x.Resolver
	}
	return nil
}

type FailedImport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Module        string                 `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Traceback     string                 `protobuf:"bytes,3,opt,name=traceback,proto3" json:"traceback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailedImport) Reset() {
	*x = FailedImport{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailedImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedImport) ProtoMessage() {}

func (x *FailedImport) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedImport.ProtoReflect.Descriptor instead.
func (*FailedImport) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{6}
}

func (x *FailedImport) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FailedImport) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *FailedImport) GetTraceback() string {
	if x != nil {
		return x.Traceback
	}
	return ""
}

type ChalkpyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Python        *string                `protobuf:"bytes,2,opt,name=python,proto3,oneof" json:"python,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChalkpyInfo) Reset() {
	*x = ChalkpyInfo{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalkpyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalkpyInfo) ProtoMessage() {}

func (x *ChalkpyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalkpyInfo.ProtoReflect.Descriptor instead.
func (*ChalkpyInfo) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{7}
}

func (x *ChalkpyInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ChalkpyInfo) GetPython() string {
	if x != nil && x.Python != nil {
		return *x.Python
	}
	return ""
}

type ValidationLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        string                 `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Subheader     string                 `protobuf:"bytes,2,opt,name=subheader,proto3" json:"subheader,omitempty"`
	Severity      ValidationLogSeverity  `protobuf:"varint,3,opt,name=severity,proto3,enum=chalk.artifacts.v1.ValidationLogSeverity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationLog) Reset() {
	*x = ValidationLog{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationLog) ProtoMessage() {}

func (x *ValidationLog) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationLog.ProtoReflect.Descriptor instead.
func (*ValidationLog) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{8}
}

func (x *ValidationLog) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ValidationLog) GetSubheader() string {
	if x != nil {
		return x.Subheader
	}
	return ""
}

func (x *ValidationLog) GetSeverity() ValidationLogSeverity {
	if x != nil {
		return x.Severity
	}
	return ValidationLogSeverity_VALIDATION_LOG_SEVERITY_UNSPECIFIED
}

type Export struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Graph            *v1.Graph              `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Crons            []*CronQuery           `protobuf:"bytes,2,rep,name=crons,proto3" json:"crons,omitempty"`
	Charts           []*Chart               `protobuf:"bytes,3,rep,name=charts,proto3" json:"charts,omitempty"`
	CdcSources       []*CDCSource           `protobuf:"bytes,4,rep,name=cdc_sources,json=cdcSources,proto3" json:"cdc_sources,omitempty"`
	Config           *ProjectSettings       `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	Chalkpy          *ChalkpyInfo           `protobuf:"bytes,6,opt,name=chalkpy,proto3" json:"chalkpy,omitempty"`
	Failed           []*FailedImport        `protobuf:"bytes,7,rep,name=failed,proto3" json:"failed,omitempty"`
	Logs             []*ValidationLog       `protobuf:"bytes,8,rep,name=logs,proto3" json:"logs,omitempty"`
	Lsp              *v11.LSP               `protobuf:"bytes,9,opt,name=lsp,proto3" json:"lsp,omitempty"`
	ConversionErrors []*v12.ChalkError      `protobuf:"bytes,10,rep,name=conversion_errors,json=conversionErrors,proto3" json:"conversion_errors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Export) Reset() {
	*x = Export{}
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Export) ProtoMessage() {}

func (x *Export) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_artifacts_v1_export_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Export.ProtoReflect.Descriptor instead.
func (*Export) Descriptor() ([]byte, []int) {
	return file_chalk_artifacts_v1_export_proto_rawDescGZIP(), []int{9}
}

func (x *Export) GetGraph() *v1.Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *Export) GetCrons() []*CronQuery {
	if x != nil {
		return x.Crons
	}
	return nil
}

func (x *Export) GetCharts() []*Chart {
	if x != nil {
		return x.Charts
	}
	return nil
}

func (x *Export) GetCdcSources() []*CDCSource {
	if x != nil {
		return x.CdcSources
	}
	return nil
}

func (x *Export) GetConfig() *ProjectSettings {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Export) GetChalkpy() *ChalkpyInfo {
	if x != nil {
		return x.Chalkpy
	}
	return nil
}

func (x *Export) GetFailed() []*FailedImport {
	if x != nil {
		return x.Failed
	}
	return nil
}

func (x *Export) GetLogs() []*ValidationLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Export) GetLsp() *v11.LSP {
	if x != nil {
		return x.Lsp
	}
	return nil
}

func (x *Export) GetConversionErrors() []*v12.ChalkError {
	if x != nil {
		return x.ConversionErrors
	}
	return nil
}

var File_chalk_artifacts_v1_export_proto protoreflect.FileDescriptor

const file_chalk_artifacts_v1_export_proto_rawDesc = "" +
	"\n" +
	"\x1fchalk/artifacts/v1/export.proto\x12\x12chalk.artifacts.v1\x1a\x1cchalk/artifacts/v1/cdc.proto\x1a\x1echalk/artifacts/v1/chart.proto\x1a#chalk/artifacts/v1/cron_query.proto\x1a!chalk/common/v1/chalk_error.proto\x1a\x1achalk/graph/v1/graph.proto\x1a\x16chalk/lsp/v1/lsp.proto\"\xb0\x02\n" +
	"\x13EnvironmentSettings\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\aruntime\x18\x02 \x01(\tH\x00R\aruntime\x88\x01\x01\x12'\n" +
	"\frequirements\x18\x03 \x01(\tH\x01R\frequirements\x88\x01\x01\x12#\n" +
	"\n" +
	"dockerfile\x18\x04 \x01(\tH\x02R\n" +
	"dockerfile\x88\x01\x01\x12+\n" +
	"\x11requires_packages\x18\x05 \x03(\tR\x10requiresPackages\x12.\n" +
	"\x10platform_version\x18\x06 \x01(\tH\x03R\x0fplatformVersion\x88\x01\x01B\n" +
	"\n" +
	"\b_runtimeB\x0f\n" +
	"\r_requirementsB\r\n" +
	"\v_dockerfileB\x13\n" +
	"\x11_platform_version\"\xc0\x01\n" +
	"\x0fProjectSettings\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12K\n" +
	"\fenvironments\x18\x02 \x03(\v2'.chalk.artifacts.v1.EnvironmentSettingsR\fenvironments\x12F\n" +
	"\n" +
	"validation\x18\x03 \x01(\v2&.chalk.artifacts.v1.ValidationSettingsR\n" +
	"validation\"@\n" +
	"\x10MetadataSettings\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\amissing\x18\x02 \x01(\tR\amissing\"S\n" +
	"\x0fFeatureSettings\x12@\n" +
	"\bmetadata\x18\x01 \x03(\v2$.chalk.artifacts.v1.MetadataSettingsR\bmetadata\"T\n" +
	"\x10ResolverSettings\x12@\n" +
	"\bmetadata\x18\x01 \x03(\v2$.chalk.artifacts.v1.MetadataSettingsR\bmetadata\"\x95\x01\n" +
	"\x12ValidationSettings\x12=\n" +
	"\afeature\x18\x01 \x01(\v2#.chalk.artifacts.v1.FeatureSettingsR\afeature\x12@\n" +
	"\bresolver\x18\x02 \x01(\v2$.chalk.artifacts.v1.ResolverSettingsR\bresolver\"a\n" +
	"\fFailedImport\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\x12\x1c\n" +
	"\ttraceback\x18\x03 \x01(\tR\ttraceback\"O\n" +
	"\vChalkpyInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1b\n" +
	"\x06python\x18\x02 \x01(\tH\x00R\x06python\x88\x01\x01B\t\n" +
	"\a_python\"\x8c\x01\n" +
	"\rValidationLog\x12\x16\n" +
	"\x06header\x18\x01 \x01(\tR\x06header\x12\x1c\n" +
	"\tsubheader\x18\x02 \x01(\tR\tsubheader\x12E\n" +
	"\bseverity\x18\x03 \x01(\x0e2).chalk.artifacts.v1.ValidationLogSeverityR\bseverity\"\xb5\x04\n" +
	"\x06Export\x12+\n" +
	"\x05graph\x18\x01 \x01(\v2\x15.chalk.graph.v1.GraphR\x05graph\x123\n" +
	"\x05crons\x18\x02 \x03(\v2\x1d.chalk.artifacts.v1.CronQueryR\x05crons\x121\n" +
	"\x06charts\x18\x03 \x03(\v2\x19.chalk.artifacts.v1.ChartR\x06charts\x12>\n" +
	"\vcdc_sources\x18\x04 \x03(\v2\x1d.chalk.artifacts.v1.CDCSourceR\n" +
	"cdcSources\x12;\n" +
	"\x06config\x18\x05 \x01(\v2#.chalk.artifacts.v1.ProjectSettingsR\x06config\x129\n" +
	"\achalkpy\x18\x06 \x01(\v2\x1f.chalk.artifacts.v1.ChalkpyInfoR\achalkpy\x128\n" +
	"\x06failed\x18\a \x03(\v2 .chalk.artifacts.v1.FailedImportR\x06failed\x125\n" +
	"\x04logs\x18\b \x03(\v2!.chalk.artifacts.v1.ValidationLogR\x04logs\x12#\n" +
	"\x03lsp\x18\t \x01(\v2\x11.chalk.lsp.v1.LSPR\x03lsp\x12H\n" +
	"\x11conversion_errors\x18\n" +
	" \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x10conversionErrors*\xaa\x01\n" +
	"\x15ValidationLogSeverity\x12'\n" +
	"#VALIDATION_LOG_SEVERITY_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cVALIDATION_LOG_SEVERITY_INFO\x10\x04\x12#\n" +
	"\x1fVALIDATION_LOG_SEVERITY_WARNING\x10\b\x12!\n" +
	"\x1dVALIDATION_LOG_SEVERITY_ERROR\x10\fB\xd0\x01\n" +
	"\x16com.chalk.artifacts.v1B\vExportProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/artifacts/v1;artifactsv1\xa2\x02\x03CAX\xaa\x02\x12Chalk.Artifacts.V1\xca\x02\x12Chalk\\Artifacts\\V1\xe2\x02\x1eChalk\\Artifacts\\V1\\GPBMetadata\xea\x02\x14Chalk::Artifacts::V1b\x06proto3"

var (
	file_chalk_artifacts_v1_export_proto_rawDescOnce sync.Once
	file_chalk_artifacts_v1_export_proto_rawDescData []byte
)

func file_chalk_artifacts_v1_export_proto_rawDescGZIP() []byte {
	file_chalk_artifacts_v1_export_proto_rawDescOnce.Do(func() {
		file_chalk_artifacts_v1_export_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_export_proto_rawDesc), len(file_chalk_artifacts_v1_export_proto_rawDesc)))
	})
	return file_chalk_artifacts_v1_export_proto_rawDescData
}

var file_chalk_artifacts_v1_export_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_artifacts_v1_export_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chalk_artifacts_v1_export_proto_goTypes = []any{
	(ValidationLogSeverity)(0),  // 0: chalk.artifacts.v1.ValidationLogSeverity
	(*EnvironmentSettings)(nil), // 1: chalk.artifacts.v1.EnvironmentSettings
	(*ProjectSettings)(nil),     // 2: chalk.artifacts.v1.ProjectSettings
	(*MetadataSettings)(nil),    // 3: chalk.artifacts.v1.MetadataSettings
	(*FeatureSettings)(nil),     // 4: chalk.artifacts.v1.FeatureSettings
	(*ResolverSettings)(nil),    // 5: chalk.artifacts.v1.ResolverSettings
	(*ValidationSettings)(nil),  // 6: chalk.artifacts.v1.ValidationSettings
	(*FailedImport)(nil),        // 7: chalk.artifacts.v1.FailedImport
	(*ChalkpyInfo)(nil),         // 8: chalk.artifacts.v1.ChalkpyInfo
	(*ValidationLog)(nil),       // 9: chalk.artifacts.v1.ValidationLog
	(*Export)(nil),              // 10: chalk.artifacts.v1.Export
	(*v1.Graph)(nil),            // 11: chalk.graph.v1.Graph
	(*CronQuery)(nil),           // 12: chalk.artifacts.v1.CronQuery
	(*Chart)(nil),               // 13: chalk.artifacts.v1.Chart
	(*CDCSource)(nil),           // 14: chalk.artifacts.v1.CDCSource
	(*v11.LSP)(nil),             // 15: chalk.lsp.v1.LSP
	(*v12.ChalkError)(nil),      // 16: chalk.common.v1.ChalkError
}
var file_chalk_artifacts_v1_export_proto_depIdxs = []int32{
	1,  // 0: chalk.artifacts.v1.ProjectSettings.environments:type_name -> chalk.artifacts.v1.EnvironmentSettings
	6,  // 1: chalk.artifacts.v1.ProjectSettings.validation:type_name -> chalk.artifacts.v1.ValidationSettings
	3,  // 2: chalk.artifacts.v1.FeatureSettings.metadata:type_name -> chalk.artifacts.v1.MetadataSettings
	3,  // 3: chalk.artifacts.v1.ResolverSettings.metadata:type_name -> chalk.artifacts.v1.MetadataSettings
	4,  // 4: chalk.artifacts.v1.ValidationSettings.feature:type_name -> chalk.artifacts.v1.FeatureSettings
	5,  // 5: chalk.artifacts.v1.ValidationSettings.resolver:type_name -> chalk.artifacts.v1.ResolverSettings
	0,  // 6: chalk.artifacts.v1.ValidationLog.severity:type_name -> chalk.artifacts.v1.ValidationLogSeverity
	11, // 7: chalk.artifacts.v1.Export.graph:type_name -> chalk.graph.v1.Graph
	12, // 8: chalk.artifacts.v1.Export.crons:type_name -> chalk.artifacts.v1.CronQuery
	13, // 9: chalk.artifacts.v1.Export.charts:type_name -> chalk.artifacts.v1.Chart
	14, // 10: chalk.artifacts.v1.Export.cdc_sources:type_name -> chalk.artifacts.v1.CDCSource
	2,  // 11: chalk.artifacts.v1.Export.config:type_name -> chalk.artifacts.v1.ProjectSettings
	8,  // 12: chalk.artifacts.v1.Export.chalkpy:type_name -> chalk.artifacts.v1.ChalkpyInfo
	7,  // 13: chalk.artifacts.v1.Export.failed:type_name -> chalk.artifacts.v1.FailedImport
	9,  // 14: chalk.artifacts.v1.Export.logs:type_name -> chalk.artifacts.v1.ValidationLog
	15, // 15: chalk.artifacts.v1.Export.lsp:type_name -> chalk.lsp.v1.LSP
	16, // 16: chalk.artifacts.v1.Export.conversion_errors:type_name -> chalk.common.v1.ChalkError
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_chalk_artifacts_v1_export_proto_init() }
func file_chalk_artifacts_v1_export_proto_init() {
	if File_chalk_artifacts_v1_export_proto != nil {
		return
	}
	file_chalk_artifacts_v1_cdc_proto_init()
	file_chalk_artifacts_v1_chart_proto_init()
	file_chalk_artifacts_v1_cron_query_proto_init()
	file_chalk_artifacts_v1_export_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_artifacts_v1_export_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_artifacts_v1_export_proto_rawDesc), len(file_chalk_artifacts_v1_export_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_artifacts_v1_export_proto_goTypes,
		DependencyIndexes: file_chalk_artifacts_v1_export_proto_depIdxs,
		EnumInfos:         file_chalk_artifacts_v1_export_proto_enumTypes,
		MessageInfos:      file_chalk_artifacts_v1_export_proto_msgTypes,
	}.Build()
	File_chalk_artifacts_v1_export_proto = out.File
	file_chalk_artifacts_v1_export_proto_goTypes = nil
	file_chalk_artifacts_v1_export_proto_depIdxs = nil
}
