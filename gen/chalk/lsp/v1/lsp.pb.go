// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/lsp/v1/lsp.proto

package lspv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiagnosticSeverity int32

const (
	DiagnosticSeverity_DIAGNOSTIC_SEVERITY_UNSPECIFIED DiagnosticSeverity = 0
	DiagnosticSeverity_DIAGNOSTIC_SEVERITY_ERROR       DiagnosticSeverity = 1
	DiagnosticSeverity_DIAGNOSTIC_SEVERITY_WARNING     DiagnosticSeverity = 2
	DiagnosticSeverity_DIAGNOSTIC_SEVERITY_INFORMATION DiagnosticSeverity = 3
	DiagnosticSeverity_DIAGNOSTIC_SEVERITY_HINT        DiagnosticSeverity = 4
)

// Enum value maps for DiagnosticSeverity.
var (
	DiagnosticSeverity_name = map[int32]string{
		0: "DIAGNOSTIC_SEVERITY_UNSPECIFIED",
		1: "DIAGNOSTIC_SEVERITY_ERROR",
		2: "DIAGNOSTIC_SEVERITY_WARNING",
		3: "DIAGNOSTIC_SEVERITY_INFORMATION",
		4: "DIAGNOSTIC_SEVERITY_HINT",
	}
	DiagnosticSeverity_value = map[string]int32{
		"DIAGNOSTIC_SEVERITY_UNSPECIFIED": 0,
		"DIAGNOSTIC_SEVERITY_ERROR":       1,
		"DIAGNOSTIC_SEVERITY_WARNING":     2,
		"DIAGNOSTIC_SEVERITY_INFORMATION": 3,
		"DIAGNOSTIC_SEVERITY_HINT":        4,
	}
)

func (x DiagnosticSeverity) Enum() *DiagnosticSeverity {
	p := new(DiagnosticSeverity)
	*p = x
	return p
}

func (x DiagnosticSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiagnosticSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_lsp_v1_lsp_proto_enumTypes[0].Descriptor()
}

func (DiagnosticSeverity) Type() protoreflect.EnumType {
	return &file_chalk_lsp_v1_lsp_proto_enumTypes[0]
}

func (x DiagnosticSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiagnosticSeverity.Descriptor instead.
func (DiagnosticSeverity) EnumDescriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{0}
}

type LSP struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Diagnostics   []*PublishDiagnosticsParams `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Actions       []*CodeAction               `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LSP) Reset() {
	*x = LSP{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSP) ProtoMessage() {}

func (x *LSP) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSP.ProtoReflect.Descriptor instead.
func (*LSP) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{0}
}

func (x *LSP) GetDiagnostics() []*PublishDiagnosticsParams {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *LSP) GetActions() []*CodeAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type PublishDiagnosticsParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Diagnostics   []*Diagnostic          `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishDiagnosticsParams) Reset() {
	*x = PublishDiagnosticsParams{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishDiagnosticsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDiagnosticsParams) ProtoMessage() {}

func (x *PublishDiagnosticsParams) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDiagnosticsParams.ProtoReflect.Descriptor instead.
func (*PublishDiagnosticsParams) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{1}
}

func (x *PublishDiagnosticsParams) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *PublishDiagnosticsParams) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type Diagnostic struct {
	state              protoimpl.MessageState          `protogen:"open.v1"`
	Range              *Range                          `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	Message            string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Severity           DiagnosticSeverity              `protobuf:"varint,3,opt,name=severity,proto3,enum=chalk.lsp.v1.DiagnosticSeverity" json:"severity,omitempty"`
	Code               *string                         `protobuf:"bytes,4,opt,name=code,proto3,oneof" json:"code,omitempty"`
	CodeDescription    *CodeDescription                `protobuf:"bytes,5,opt,name=code_description,json=codeDescription,proto3" json:"code_description,omitempty"`
	RelatedInformation []*DiagnosticRelatedInformation `protobuf:"bytes,6,rep,name=related_information,json=relatedInformation,proto3" json:"related_information,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{2}
}

func (x *Diagnostic) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *Diagnostic) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Diagnostic) GetSeverity() DiagnosticSeverity {
	if x != nil {
		return x.Severity
	}
	return DiagnosticSeverity_DIAGNOSTIC_SEVERITY_UNSPECIFIED
}

func (x *Diagnostic) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Diagnostic) GetCodeDescription() *CodeDescription {
	if x != nil {
		return x.CodeDescription
	}
	return nil
}

func (x *Diagnostic) GetRelatedInformation() []*DiagnosticRelatedInformation {
	if x != nil {
		return x.RelatedInformation
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Position              `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *Position              `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetStart() *Position {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Range) GetEnd() *Position {
	if x != nil {
		return x.End
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          *int32                 `protobuf:"varint,1,opt,name=line,proto3,oneof" json:"line,omitempty"`
	Character     *int32                 `protobuf:"varint,2,opt,name=character,proto3,oneof" json:"character,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{4}
}

func (x *Position) GetLine() int32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *Position) GetCharacter() int32 {
	if x != nil && x.Character != nil {
		return *x.Character
	}
	return 0
}

type CodeAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Diagnostics   []*Diagnostic          `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Edit          *WorkspaceEdit         `protobuf:"bytes,3,opt,name=edit,proto3" json:"edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeAction) Reset() {
	*x = CodeAction{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeAction) ProtoMessage() {}

func (x *CodeAction) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeAction.ProtoReflect.Descriptor instead.
func (*CodeAction) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{5}
}

func (x *CodeAction) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CodeAction) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *CodeAction) GetEdit() *WorkspaceEdit {
	if x != nil {
		return x.Edit
	}
	return nil
}

type WorkspaceEdit struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DocumentChanges []*TextDocumentEdit    `protobuf:"bytes,1,rep,name=document_changes,json=documentChanges,proto3" json:"document_changes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkspaceEdit) Reset() {
	*x = WorkspaceEdit{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceEdit) ProtoMessage() {}

func (x *WorkspaceEdit) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceEdit.ProtoReflect.Descriptor instead.
func (*WorkspaceEdit) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{6}
}

func (x *WorkspaceEdit) GetDocumentChanges() []*TextDocumentEdit {
	if x != nil {
		return x.DocumentChanges
	}
	return nil
}

type TextDocumentEdit struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	TextDocument  *TextDocumentIdentifier `protobuf:"bytes,1,opt,name=text_document,json=textDocument,proto3" json:"text_document,omitempty"`
	Edits         []*TextEdit             `protobuf:"bytes,2,rep,name=edits,proto3" json:"edits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextDocumentEdit) Reset() {
	*x = TextDocumentEdit{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextDocumentEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextDocumentEdit) ProtoMessage() {}

func (x *TextDocumentEdit) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextDocumentEdit.ProtoReflect.Descriptor instead.
func (*TextDocumentEdit) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{7}
}

func (x *TextDocumentEdit) GetTextDocument() *TextDocumentIdentifier {
	if x != nil {
		return x.TextDocument
	}
	return nil
}

func (x *TextDocumentEdit) GetEdits() []*TextEdit {
	if x != nil {
		return x.Edits
	}
	return nil
}

type TextDocumentIdentifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextDocumentIdentifier) Reset() {
	*x = TextDocumentIdentifier{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextDocumentIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextDocumentIdentifier) ProtoMessage() {}

func (x *TextDocumentIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextDocumentIdentifier.ProtoReflect.Descriptor instead.
func (*TextDocumentIdentifier) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{8}
}

func (x *TextDocumentIdentifier) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type TextEdit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Range         *Range                 `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	NewText       string                 `protobuf:"bytes,2,opt,name=new_text,json=newText,proto3" json:"new_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextEdit) Reset() {
	*x = TextEdit{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextEdit) ProtoMessage() {}

func (x *TextEdit) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextEdit.ProtoReflect.Descriptor instead.
func (*TextEdit) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{9}
}

func (x *TextEdit) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *TextEdit) GetNewText() string {
	if x != nil {
		return x.NewText
	}
	return ""
}

type CodeDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Href          string                 `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeDescription) Reset() {
	*x = CodeDescription{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeDescription) ProtoMessage() {}

func (x *CodeDescription) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeDescription.ProtoReflect.Descriptor instead.
func (*CodeDescription) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{10}
}

func (x *CodeDescription) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

type DiagnosticRelatedInformation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      *Location              `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnosticRelatedInformation) Reset() {
	*x = DiagnosticRelatedInformation{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticRelatedInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticRelatedInformation) ProtoMessage() {}

func (x *DiagnosticRelatedInformation) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticRelatedInformation.ProtoReflect.Descriptor instead.
func (*DiagnosticRelatedInformation) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{11}
}

func (x *DiagnosticRelatedInformation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DiagnosticRelatedInformation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Range         *Range                 `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_lsp_v1_lsp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_chalk_lsp_v1_lsp_proto_rawDescGZIP(), []int{12}
}

func (x *Location) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Location) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

var File_chalk_lsp_v1_lsp_proto protoreflect.FileDescriptor

const file_chalk_lsp_v1_lsp_proto_rawDesc = "" +
	"\n" +
	"\x16chalk/lsp/v1/lsp.proto\x12\fchalk.lsp.v1\"\x83\x01\n" +
	"\x03LSP\x12H\n" +
	"\vdiagnostics\x18\x01 \x03(\v2&.chalk.lsp.v1.PublishDiagnosticsParamsR\vdiagnostics\x122\n" +
	"\aactions\x18\x02 \x03(\v2\x18.chalk.lsp.v1.CodeActionR\aactions\"h\n" +
	"\x18PublishDiagnosticsParams\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12:\n" +
	"\vdiagnostics\x18\x02 \x03(\v2\x18.chalk.lsp.v1.DiagnosticR\vdiagnostics\"\xd8\x02\n" +
	"\n" +
	"Diagnostic\x12)\n" +
	"\x05range\x18\x01 \x01(\v2\x13.chalk.lsp.v1.RangeR\x05range\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12<\n" +
	"\bseverity\x18\x03 \x01(\x0e2 .chalk.lsp.v1.DiagnosticSeverityR\bseverity\x12\x17\n" +
	"\x04code\x18\x04 \x01(\tH\x00R\x04code\x88\x01\x01\x12H\n" +
	"\x10code_description\x18\x05 \x01(\v2\x1d.chalk.lsp.v1.CodeDescriptionR\x0fcodeDescription\x12[\n" +
	"\x13related_information\x18\x06 \x03(\v2*.chalk.lsp.v1.DiagnosticRelatedInformationR\x12relatedInformationB\a\n" +
	"\x05_code\"_\n" +
	"\x05Range\x12,\n" +
	"\x05start\x18\x01 \x01(\v2\x16.chalk.lsp.v1.PositionR\x05start\x12(\n" +
	"\x03end\x18\x02 \x01(\v2\x16.chalk.lsp.v1.PositionR\x03end\"]\n" +
	"\bPosition\x12\x17\n" +
	"\x04line\x18\x01 \x01(\x05H\x00R\x04line\x88\x01\x01\x12!\n" +
	"\tcharacter\x18\x02 \x01(\x05H\x01R\tcharacter\x88\x01\x01B\a\n" +
	"\x05_lineB\f\n" +
	"\n" +
	"_character\"\x8f\x01\n" +
	"\n" +
	"CodeAction\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12:\n" +
	"\vdiagnostics\x18\x02 \x03(\v2\x18.chalk.lsp.v1.DiagnosticR\vdiagnostics\x12/\n" +
	"\x04edit\x18\x03 \x01(\v2\x1b.chalk.lsp.v1.WorkspaceEditR\x04edit\"Z\n" +
	"\rWorkspaceEdit\x12I\n" +
	"\x10document_changes\x18\x01 \x03(\v2\x1e.chalk.lsp.v1.TextDocumentEditR\x0fdocumentChanges\"\x8b\x01\n" +
	"\x10TextDocumentEdit\x12I\n" +
	"\rtext_document\x18\x01 \x01(\v2$.chalk.lsp.v1.TextDocumentIdentifierR\ftextDocument\x12,\n" +
	"\x05edits\x18\x02 \x03(\v2\x16.chalk.lsp.v1.TextEditR\x05edits\"*\n" +
	"\x16TextDocumentIdentifier\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\"P\n" +
	"\bTextEdit\x12)\n" +
	"\x05range\x18\x01 \x01(\v2\x13.chalk.lsp.v1.RangeR\x05range\x12\x19\n" +
	"\bnew_text\x18\x02 \x01(\tR\anewText\"%\n" +
	"\x0fCodeDescription\x12\x12\n" +
	"\x04href\x18\x01 \x01(\tR\x04href\"l\n" +
	"\x1cDiagnosticRelatedInformation\x122\n" +
	"\blocation\x18\x01 \x01(\v2\x16.chalk.lsp.v1.LocationR\blocation\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"G\n" +
	"\bLocation\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12)\n" +
	"\x05range\x18\x02 \x01(\v2\x13.chalk.lsp.v1.RangeR\x05range*\xbc\x01\n" +
	"\x12DiagnosticSeverity\x12#\n" +
	"\x1fDIAGNOSTIC_SEVERITY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19DIAGNOSTIC_SEVERITY_ERROR\x10\x01\x12\x1f\n" +
	"\x1bDIAGNOSTIC_SEVERITY_WARNING\x10\x02\x12#\n" +
	"\x1fDIAGNOSTIC_SEVERITY_INFORMATION\x10\x03\x12\x1c\n" +
	"\x18DIAGNOSTIC_SEVERITY_HINT\x10\x04B\xa3\x01\n" +
	"\x10com.chalk.lsp.v1B\bLspProtoP\x01Z3github.com/chalk-ai/chalk-go/gen/chalk/lsp/v1;lspv1\xa2\x02\x03CLX\xaa\x02\fChalk.Lsp.V1\xca\x02\fChalk\\Lsp\\V1\xe2\x02\x18Chalk\\Lsp\\V1\\GPBMetadata\xea\x02\x0eChalk::Lsp::V1b\x06proto3"

var (
	file_chalk_lsp_v1_lsp_proto_rawDescOnce sync.Once
	file_chalk_lsp_v1_lsp_proto_rawDescData []byte
)

func file_chalk_lsp_v1_lsp_proto_rawDescGZIP() []byte {
	file_chalk_lsp_v1_lsp_proto_rawDescOnce.Do(func() {
		file_chalk_lsp_v1_lsp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_lsp_v1_lsp_proto_rawDesc), len(file_chalk_lsp_v1_lsp_proto_rawDesc)))
	})
	return file_chalk_lsp_v1_lsp_proto_rawDescData
}

var file_chalk_lsp_v1_lsp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_lsp_v1_lsp_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_chalk_lsp_v1_lsp_proto_goTypes = []any{
	(DiagnosticSeverity)(0),              // 0: chalk.lsp.v1.DiagnosticSeverity
	(*LSP)(nil),                          // 1: chalk.lsp.v1.LSP
	(*PublishDiagnosticsParams)(nil),     // 2: chalk.lsp.v1.PublishDiagnosticsParams
	(*Diagnostic)(nil),                   // 3: chalk.lsp.v1.Diagnostic
	(*Range)(nil),                        // 4: chalk.lsp.v1.Range
	(*Position)(nil),                     // 5: chalk.lsp.v1.Position
	(*CodeAction)(nil),                   // 6: chalk.lsp.v1.CodeAction
	(*WorkspaceEdit)(nil),                // 7: chalk.lsp.v1.WorkspaceEdit
	(*TextDocumentEdit)(nil),             // 8: chalk.lsp.v1.TextDocumentEdit
	(*TextDocumentIdentifier)(nil),       // 9: chalk.lsp.v1.TextDocumentIdentifier
	(*TextEdit)(nil),                     // 10: chalk.lsp.v1.TextEdit
	(*CodeDescription)(nil),              // 11: chalk.lsp.v1.CodeDescription
	(*DiagnosticRelatedInformation)(nil), // 12: chalk.lsp.v1.DiagnosticRelatedInformation
	(*Location)(nil),                     // 13: chalk.lsp.v1.Location
}
var file_chalk_lsp_v1_lsp_proto_depIdxs = []int32{
	2,  // 0: chalk.lsp.v1.LSP.diagnostics:type_name -> chalk.lsp.v1.PublishDiagnosticsParams
	6,  // 1: chalk.lsp.v1.LSP.actions:type_name -> chalk.lsp.v1.CodeAction
	3,  // 2: chalk.lsp.v1.PublishDiagnosticsParams.diagnostics:type_name -> chalk.lsp.v1.Diagnostic
	4,  // 3: chalk.lsp.v1.Diagnostic.range:type_name -> chalk.lsp.v1.Range
	0,  // 4: chalk.lsp.v1.Diagnostic.severity:type_name -> chalk.lsp.v1.DiagnosticSeverity
	11, // 5: chalk.lsp.v1.Diagnostic.code_description:type_name -> chalk.lsp.v1.CodeDescription
	12, // 6: chalk.lsp.v1.Diagnostic.related_information:type_name -> chalk.lsp.v1.DiagnosticRelatedInformation
	5,  // 7: chalk.lsp.v1.Range.start:type_name -> chalk.lsp.v1.Position
	5,  // 8: chalk.lsp.v1.Range.end:type_name -> chalk.lsp.v1.Position
	3,  // 9: chalk.lsp.v1.CodeAction.diagnostics:type_name -> chalk.lsp.v1.Diagnostic
	7,  // 10: chalk.lsp.v1.CodeAction.edit:type_name -> chalk.lsp.v1.WorkspaceEdit
	8,  // 11: chalk.lsp.v1.WorkspaceEdit.document_changes:type_name -> chalk.lsp.v1.TextDocumentEdit
	9,  // 12: chalk.lsp.v1.TextDocumentEdit.text_document:type_name -> chalk.lsp.v1.TextDocumentIdentifier
	10, // 13: chalk.lsp.v1.TextDocumentEdit.edits:type_name -> chalk.lsp.v1.TextEdit
	4,  // 14: chalk.lsp.v1.TextEdit.range:type_name -> chalk.lsp.v1.Range
	13, // 15: chalk.lsp.v1.DiagnosticRelatedInformation.location:type_name -> chalk.lsp.v1.Location
	4,  // 16: chalk.lsp.v1.Location.range:type_name -> chalk.lsp.v1.Range
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_chalk_lsp_v1_lsp_proto_init() }
func file_chalk_lsp_v1_lsp_proto_init() {
	if File_chalk_lsp_v1_lsp_proto != nil {
		return
	}
	file_chalk_lsp_v1_lsp_proto_msgTypes[2].OneofWrappers = []any{}
	file_chalk_lsp_v1_lsp_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_lsp_v1_lsp_proto_rawDesc), len(file_chalk_lsp_v1_lsp_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_lsp_v1_lsp_proto_goTypes,
		DependencyIndexes: file_chalk_lsp_v1_lsp_proto_depIdxs,
		EnumInfos:         file_chalk_lsp_v1_lsp_proto_enumTypes,
		MessageInfos:      file_chalk_lsp_v1_lsp_proto_msgTypes,
	}.Build()
	File_chalk_lsp_v1_lsp_proto = out.File
	file_chalk_lsp_v1_lsp_proto_goTypes = nil
	file_chalk_lsp_v1_lsp_proto_depIdxs = nil
}
