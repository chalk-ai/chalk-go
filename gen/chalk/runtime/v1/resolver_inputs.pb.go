// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/runtime/v1/resolver_inputs.proto

package runtimev1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HasManyFeatureEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feature      *v1.FeatureReference `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	Values       *Data                `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	MappingTable *Data                `protobuf:"bytes,3,opt,name=mapping_table,json=mappingTable,proto3" json:"mapping_table,omitempty"`
}

func (x *HasManyFeatureEntry) Reset() {
	*x = HasManyFeatureEntry{}
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasManyFeatureEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasManyFeatureEntry) ProtoMessage() {}

func (x *HasManyFeatureEntry) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasManyFeatureEntry.ProtoReflect.Descriptor instead.
func (*HasManyFeatureEntry) Descriptor() ([]byte, []int) {
	return file_chalk_runtime_v1_resolver_inputs_proto_rawDescGZIP(), []int{0}
}

func (x *HasManyFeatureEntry) GetFeature() *v1.FeatureReference {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *HasManyFeatureEntry) GetValues() *Data {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *HasManyFeatureEntry) GetMappingTable() *Data {
	if x != nil {
		return x.MappingTable
	}
	return nil
}

type DataFrameFeatureEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feature *v1.DataFrameType `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	Values  *Data             `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *DataFrameFeatureEntry) Reset() {
	*x = DataFrameFeatureEntry{}
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataFrameFeatureEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFrameFeatureEntry) ProtoMessage() {}

func (x *DataFrameFeatureEntry) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFrameFeatureEntry.ProtoReflect.Descriptor instead.
func (*DataFrameFeatureEntry) Descriptor() ([]byte, []int) {
	return file_chalk_runtime_v1_resolver_inputs_proto_rawDescGZIP(), []int{1}
}

func (x *DataFrameFeatureEntry) GetFeature() *v1.DataFrameType {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *DataFrameFeatureEntry) GetValues() *Data {
	if x != nil {
		return x.Values
	}
	return nil
}

type ResolverInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResolverFqns       []string                 `protobuf:"bytes,1,rep,name=resolver_fqns,json=resolverFqns,proto3" json:"resolver_fqns,omitempty"`
	ScalarishFeatures  *Data                    `protobuf:"bytes,2,opt,name=scalarish_features,json=scalarishFeatures,proto3" json:"scalarish_features,omitempty"`
	HasManyFeatures    []*HasManyFeatureEntry   `protobuf:"bytes,3,rep,name=has_many_features,json=hasManyFeatures,proto3" json:"has_many_features,omitempty"`
	DataframeFeatures  []*DataFrameFeatureEntry `protobuf:"bytes,4,rep,name=dataframe_features,json=dataframeFeatures,proto3" json:"dataframe_features,omitempty"`
	ObservedAtFallback *timestamppb.Timestamp   `protobuf:"bytes,5,opt,name=observed_at_fallback,json=observedAtFallback,proto3" json:"observed_at_fallback,omitempty"`
}

func (x *ResolverInputs) Reset() {
	*x = ResolverInputs{}
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolverInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolverInputs) ProtoMessage() {}

func (x *ResolverInputs) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_runtime_v1_resolver_inputs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolverInputs.ProtoReflect.Descriptor instead.
func (*ResolverInputs) Descriptor() ([]byte, []int) {
	return file_chalk_runtime_v1_resolver_inputs_proto_rawDescGZIP(), []int{2}
}

func (x *ResolverInputs) GetResolverFqns() []string {
	if x != nil {
		return x.ResolverFqns
	}
	return nil
}

func (x *ResolverInputs) GetScalarishFeatures() *Data {
	if x != nil {
		return x.ScalarishFeatures
	}
	return nil
}

func (x *ResolverInputs) GetHasManyFeatures() []*HasManyFeatureEntry {
	if x != nil {
		return x.HasManyFeatures
	}
	return nil
}

func (x *ResolverInputs) GetDataframeFeatures() []*DataFrameFeatureEntry {
	if x != nil {
		return x.DataframeFeatures
	}
	return nil
}

func (x *ResolverInputs) GetObservedAtFallback() *timestamppb.Timestamp {
	if x != nil {
		return x.ObservedAtFallback
	}
	return nil
}

var File_chalk_runtime_v1_resolver_inputs_proto protoreflect.FileDescriptor

var file_chalk_runtime_v1_resolver_inputs_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x13, 0x48, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x07,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x37, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x71, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x46, 0x71, 0x6e, 0x73,
	0x12, 0x45, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x68, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x68, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x61, 0x6e, 0x79, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x4d, 0x61,
	0x6e, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x64, 0x61,
	0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x11, 0x64, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x41, 0x74, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x42, 0xca, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x43, 0x52, 0x58, 0xaa, 0x02, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x43, 0x68, 0x61, 0x6c,
	0x6b, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x43, 0x68, 0x61, 0x6c, 0x6b,
	0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_runtime_v1_resolver_inputs_proto_rawDescOnce sync.Once
	file_chalk_runtime_v1_resolver_inputs_proto_rawDescData = file_chalk_runtime_v1_resolver_inputs_proto_rawDesc
)

func file_chalk_runtime_v1_resolver_inputs_proto_rawDescGZIP() []byte {
	file_chalk_runtime_v1_resolver_inputs_proto_rawDescOnce.Do(func() {
		file_chalk_runtime_v1_resolver_inputs_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_runtime_v1_resolver_inputs_proto_rawDescData)
	})
	return file_chalk_runtime_v1_resolver_inputs_proto_rawDescData
}

var file_chalk_runtime_v1_resolver_inputs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chalk_runtime_v1_resolver_inputs_proto_goTypes = []any{
	(*HasManyFeatureEntry)(nil),   // 0: chalk.runtime.v1.HasManyFeatureEntry
	(*DataFrameFeatureEntry)(nil), // 1: chalk.runtime.v1.DataFrameFeatureEntry
	(*ResolverInputs)(nil),        // 2: chalk.runtime.v1.ResolverInputs
	(*v1.FeatureReference)(nil),   // 3: chalk.graph.v1.FeatureReference
	(*Data)(nil),                  // 4: chalk.runtime.v1.Data
	(*v1.DataFrameType)(nil),      // 5: chalk.graph.v1.DataFrameType
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_chalk_runtime_v1_resolver_inputs_proto_depIdxs = []int32{
	3, // 0: chalk.runtime.v1.HasManyFeatureEntry.feature:type_name -> chalk.graph.v1.FeatureReference
	4, // 1: chalk.runtime.v1.HasManyFeatureEntry.values:type_name -> chalk.runtime.v1.Data
	4, // 2: chalk.runtime.v1.HasManyFeatureEntry.mapping_table:type_name -> chalk.runtime.v1.Data
	5, // 3: chalk.runtime.v1.DataFrameFeatureEntry.feature:type_name -> chalk.graph.v1.DataFrameType
	4, // 4: chalk.runtime.v1.DataFrameFeatureEntry.values:type_name -> chalk.runtime.v1.Data
	4, // 5: chalk.runtime.v1.ResolverInputs.scalarish_features:type_name -> chalk.runtime.v1.Data
	0, // 6: chalk.runtime.v1.ResolverInputs.has_many_features:type_name -> chalk.runtime.v1.HasManyFeatureEntry
	1, // 7: chalk.runtime.v1.ResolverInputs.dataframe_features:type_name -> chalk.runtime.v1.DataFrameFeatureEntry
	6, // 8: chalk.runtime.v1.ResolverInputs.observed_at_fallback:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_chalk_runtime_v1_resolver_inputs_proto_init() }
func file_chalk_runtime_v1_resolver_inputs_proto_init() {
	if File_chalk_runtime_v1_resolver_inputs_proto != nil {
		return
	}
	file_chalk_runtime_v1_data_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_runtime_v1_resolver_inputs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_runtime_v1_resolver_inputs_proto_goTypes,
		DependencyIndexes: file_chalk_runtime_v1_resolver_inputs_proto_depIdxs,
		MessageInfos:      file_chalk_runtime_v1_resolver_inputs_proto_msgTypes,
	}.Build()
	File_chalk_runtime_v1_resolver_inputs_proto = out.File
	file_chalk_runtime_v1_resolver_inputs_proto_rawDesc = nil
	file_chalk_runtime_v1_resolver_inputs_proto_goTypes = nil
	file_chalk_runtime_v1_resolver_inputs_proto_depIdxs = nil
}
