// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: chalk/auth/v1/agent.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnvironmentPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions        []Permission        `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=chalk.auth.v1.Permission" json:"permissions,omitempty"`
	FeaturePermissions *FeaturePermissions `protobuf:"bytes,3,opt,name=feature_permissions,json=featurePermissions,proto3" json:"feature_permissions,omitempty"`
}

func (x *EnvironmentPermissions) Reset() {
	*x = EnvironmentPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentPermissions) ProtoMessage() {}

func (x *EnvironmentPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentPermissions.ProtoReflect.Descriptor instead.
func (*EnvironmentPermissions) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *EnvironmentPermissions) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *EnvironmentPermissions) GetFeaturePermissions() *FeaturePermissions {
	if x != nil {
		return x.FeaturePermissions
	}
	return nil
}

type UserAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in chalk/auth/v1/agent.proto.
	ClientId                 string                             `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId                   string                             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TeamId                   string                             `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PermissionsByEnvironment map[string]*EnvironmentPermissions `protobuf:"bytes,4,rep,name=permissions_by_environment,json=permissionsByEnvironment,proto3" json:"permissions_by_environment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Impersonated             bool                               `protobuf:"varint,5,opt,name=impersonated,proto3" json:"impersonated,omitempty"`
}

func (x *UserAgent) Reset() {
	*x = UserAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgent) ProtoMessage() {}

func (x *UserAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgent.ProtoReflect.Descriptor instead.
func (*UserAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Marked as deprecated in chalk/auth/v1/agent.proto.
func (x *UserAgent) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAgent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *UserAgent) GetPermissionsByEnvironment() map[string]*EnvironmentPermissions {
	if x != nil {
		return x.PermissionsByEnvironment
	}
	return nil
}

func (x *UserAgent) GetImpersonated() bool {
	if x != nil {
		return x.Impersonated
	}
	return false
}

type CustomClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *CustomClaim) Reset() {
	*x = CustomClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomClaim) ProtoMessage() {}

func (x *CustomClaim) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomClaim.ProtoReflect.Descriptor instead.
func (*CustomClaim) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{2}
}

func (x *CustomClaim) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CustomClaim) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ServiceTokenAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId    string       `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TeamId      string       `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Environment string       `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
	Permissions []Permission `protobuf:"varint,5,rep,packed,name=permissions,proto3,enum=chalk.auth.v1.Permission" json:"permissions,omitempty"`
	// Deprecated: Marked as deprecated in chalk/auth/v1/agent.proto.
	CustomClaims       []string            `protobuf:"bytes,6,rep,name=custom_claims,json=customClaims,proto3" json:"custom_claims,omitempty"`
	CustomerClaims     []*CustomClaim      `protobuf:"bytes,7,rep,name=customer_claims,json=customerClaims,proto3" json:"customer_claims,omitempty"`
	FeaturePermissions *FeaturePermissions `protobuf:"bytes,8,opt,name=feature_permissions,json=featurePermissions,proto3" json:"feature_permissions,omitempty"`
}

func (x *ServiceTokenAgent) Reset() {
	*x = ServiceTokenAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTokenAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTokenAgent) ProtoMessage() {}

func (x *ServiceTokenAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTokenAgent.ProtoReflect.Descriptor instead.
func (*ServiceTokenAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceTokenAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceTokenAgent) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServiceTokenAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ServiceTokenAgent) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ServiceTokenAgent) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Deprecated: Marked as deprecated in chalk/auth/v1/agent.proto.
func (x *ServiceTokenAgent) GetCustomClaims() []string {
	if x != nil {
		return x.CustomClaims
	}
	return nil
}

func (x *ServiceTokenAgent) GetCustomerClaims() []*CustomClaim {
	if x != nil {
		return x.CustomerClaims
	}
	return nil
}

func (x *ServiceTokenAgent) GetFeaturePermissions() *FeaturePermissions {
	if x != nil {
		return x.FeaturePermissions
	}
	return nil
}

type EngineAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EnvironmentId string `protobuf:"bytes,4,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Impersonated  bool   `protobuf:"varint,5,opt,name=impersonated,proto3" json:"impersonated,omitempty"`
}

func (x *EngineAgent) Reset() {
	*x = EngineAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineAgent) ProtoMessage() {}

func (x *EngineAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineAgent.ProtoReflect.Descriptor instead.
func (*EngineAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{4}
}

func (x *EngineAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EngineAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *EngineAgent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *EngineAgent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *EngineAgent) GetImpersonated() bool {
	if x != nil {
		return x.Impersonated
	}
	return false
}

type MetadataServiceAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataServiceAgent) Reset() {
	*x = MetadataServiceAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataServiceAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataServiceAgent) ProtoMessage() {}

func (x *MetadataServiceAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataServiceAgent.ProtoReflect.Descriptor instead.
func (*MetadataServiceAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{5}
}

type TenantAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantAgent) Reset() {
	*x = TenantAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAgent) ProtoMessage() {}

func (x *TenantAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAgent.ProtoReflect.Descriptor instead.
func (*TenantAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{6}
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Agent:
	//
	//	*Agent_UserAgent
	//	*Agent_ServiceTokenAgent
	//	*Agent_EngineAgent
	//	*Agent_TenantAgent
	//	*Agent_MetadataServiceAgent
	Agent isAgent_Agent `protobuf_oneof:"agent"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_agent_proto_rawDescGZIP(), []int{7}
}

func (m *Agent) GetAgent() isAgent_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (x *Agent) GetUserAgent() *UserAgent {
	if x, ok := x.GetAgent().(*Agent_UserAgent); ok {
		return x.UserAgent
	}
	return nil
}

func (x *Agent) GetServiceTokenAgent() *ServiceTokenAgent {
	if x, ok := x.GetAgent().(*Agent_ServiceTokenAgent); ok {
		return x.ServiceTokenAgent
	}
	return nil
}

func (x *Agent) GetEngineAgent() *EngineAgent {
	if x, ok := x.GetAgent().(*Agent_EngineAgent); ok {
		return x.EngineAgent
	}
	return nil
}

func (x *Agent) GetTenantAgent() *TenantAgent {
	if x, ok := x.GetAgent().(*Agent_TenantAgent); ok {
		return x.TenantAgent
	}
	return nil
}

func (x *Agent) GetMetadataServiceAgent() *MetadataServiceAgent {
	if x, ok := x.GetAgent().(*Agent_MetadataServiceAgent); ok {
		return x.MetadataServiceAgent
	}
	return nil
}

type isAgent_Agent interface {
	isAgent_Agent()
}

type Agent_UserAgent struct {
	UserAgent *UserAgent `protobuf:"bytes,1,opt,name=user_agent,json=userAgent,proto3,oneof"`
}

type Agent_ServiceTokenAgent struct {
	ServiceTokenAgent *ServiceTokenAgent `protobuf:"bytes,2,opt,name=service_token_agent,json=serviceTokenAgent,proto3,oneof"`
}

type Agent_EngineAgent struct {
	EngineAgent *EngineAgent `protobuf:"bytes,3,opt,name=engine_agent,json=engineAgent,proto3,oneof"`
}

type Agent_TenantAgent struct {
	TenantAgent *TenantAgent `protobuf:"bytes,4,opt,name=tenant_agent,json=tenantAgent,proto3,oneof"`
}

type Agent_MetadataServiceAgent struct {
	MetadataServiceAgent *MetadataServiceAgent `protobuf:"bytes,5,opt,name=metadata_service_agent,json=metadataServiceAgent,proto3,oneof"`
}

func (*Agent_UserAgent) isAgent_Agent() {}

func (*Agent_ServiceTokenAgent) isAgent_Agent() {}

func (*Agent_EngineAgent) isAgent_Agent() {}

func (*Agent_TenantAgent) isAgent_Agent() {}

func (*Agent_MetadataServiceAgent) isAgent_Agent() {}

var File_chalk_auth_v1_agent_proto protoreflect.FileDescriptor

var file_chalk_auth_v1_agent_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xec,
	0x02, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x74, 0x0a, 0x1a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x72, 0x0a, 0x1d, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a,
	0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x27, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12,
	0x52, 0x0a, 0x13, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x12, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x0d,
	0x0a, 0x0b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xfe, 0x02,
	0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x52, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x16, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x14, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0xac,
	0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa,
	0x02, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x19, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x43, 0x68,
	0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x41, 0x75, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_auth_v1_agent_proto_rawDescOnce sync.Once
	file_chalk_auth_v1_agent_proto_rawDescData = file_chalk_auth_v1_agent_proto_rawDesc
)

func file_chalk_auth_v1_agent_proto_rawDescGZIP() []byte {
	file_chalk_auth_v1_agent_proto_rawDescOnce.Do(func() {
		file_chalk_auth_v1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_auth_v1_agent_proto_rawDescData)
	})
	return file_chalk_auth_v1_agent_proto_rawDescData
}

var file_chalk_auth_v1_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chalk_auth_v1_agent_proto_goTypes = []any{
	(*EnvironmentPermissions)(nil), // 0: chalk.auth.v1.EnvironmentPermissions
	(*UserAgent)(nil),              // 1: chalk.auth.v1.UserAgent
	(*CustomClaim)(nil),            // 2: chalk.auth.v1.CustomClaim
	(*ServiceTokenAgent)(nil),      // 3: chalk.auth.v1.ServiceTokenAgent
	(*EngineAgent)(nil),            // 4: chalk.auth.v1.EngineAgent
	(*MetadataServiceAgent)(nil),   // 5: chalk.auth.v1.MetadataServiceAgent
	(*TenantAgent)(nil),            // 6: chalk.auth.v1.TenantAgent
	(*Agent)(nil),                  // 7: chalk.auth.v1.Agent
	nil,                            // 8: chalk.auth.v1.UserAgent.PermissionsByEnvironmentEntry
	(Permission)(0),                // 9: chalk.auth.v1.Permission
	(*FeaturePermissions)(nil),     // 10: chalk.auth.v1.FeaturePermissions
}
var file_chalk_auth_v1_agent_proto_depIdxs = []int32{
	9,  // 0: chalk.auth.v1.EnvironmentPermissions.permissions:type_name -> chalk.auth.v1.Permission
	10, // 1: chalk.auth.v1.EnvironmentPermissions.feature_permissions:type_name -> chalk.auth.v1.FeaturePermissions
	8,  // 2: chalk.auth.v1.UserAgent.permissions_by_environment:type_name -> chalk.auth.v1.UserAgent.PermissionsByEnvironmentEntry
	9,  // 3: chalk.auth.v1.ServiceTokenAgent.permissions:type_name -> chalk.auth.v1.Permission
	2,  // 4: chalk.auth.v1.ServiceTokenAgent.customer_claims:type_name -> chalk.auth.v1.CustomClaim
	10, // 5: chalk.auth.v1.ServiceTokenAgent.feature_permissions:type_name -> chalk.auth.v1.FeaturePermissions
	1,  // 6: chalk.auth.v1.Agent.user_agent:type_name -> chalk.auth.v1.UserAgent
	3,  // 7: chalk.auth.v1.Agent.service_token_agent:type_name -> chalk.auth.v1.ServiceTokenAgent
	4,  // 8: chalk.auth.v1.Agent.engine_agent:type_name -> chalk.auth.v1.EngineAgent
	6,  // 9: chalk.auth.v1.Agent.tenant_agent:type_name -> chalk.auth.v1.TenantAgent
	5,  // 10: chalk.auth.v1.Agent.metadata_service_agent:type_name -> chalk.auth.v1.MetadataServiceAgent
	0,  // 11: chalk.auth.v1.UserAgent.PermissionsByEnvironmentEntry.value:type_name -> chalk.auth.v1.EnvironmentPermissions
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chalk_auth_v1_agent_proto_init() }
func file_chalk_auth_v1_agent_proto_init() {
	if File_chalk_auth_v1_agent_proto != nil {
		return
	}
	file_chalk_auth_v1_featurepermission_proto_init()
	file_chalk_auth_v1_permissions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chalk_auth_v1_agent_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EnvironmentPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UserAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CustomClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceTokenAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EngineAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MetadataServiceAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TenantAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_agent_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chalk_auth_v1_agent_proto_msgTypes[7].OneofWrappers = []any{
		(*Agent_UserAgent)(nil),
		(*Agent_ServiceTokenAgent)(nil),
		(*Agent_EngineAgent)(nil),
		(*Agent_TenantAgent)(nil),
		(*Agent_MetadataServiceAgent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_auth_v1_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_auth_v1_agent_proto_goTypes,
		DependencyIndexes: file_chalk_auth_v1_agent_proto_depIdxs,
		MessageInfos:      file_chalk_auth_v1_agent_proto_msgTypes,
	}.Build()
	File_chalk_auth_v1_agent_proto = out.File
	file_chalk_auth_v1_agent_proto_rawDesc = nil
	file_chalk_auth_v1_agent_proto_goTypes = nil
	file_chalk_auth_v1_agent_proto_depIdxs = nil
}
