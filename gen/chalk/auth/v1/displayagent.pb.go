// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: chalk/auth/v1/displayagent.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DisplayPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permission Permission `protobuf:"varint,2,opt,name=permission,proto3,enum=chalk.auth.v1.Permission" json:"permission,omitempty"`
}

func (x *DisplayPermission) Reset() {
	*x = DisplayPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayPermission) ProtoMessage() {}

func (x *DisplayPermission) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayPermission.ProtoReflect.Descriptor instead.
func (*DisplayPermission) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{0}
}

func (x *DisplayPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisplayPermission) GetPermission() Permission {
	if x != nil {
		return x.Permission
	}
	return Permission_PERMISSION_UNSPECIFIED
}

type DisplayEnvironmentPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId   string               `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	EnvironmentName string               `protobuf:"bytes,2,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	ProjectId       string               `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectName     string               `protobuf:"bytes,4,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Permissions     []*DisplayPermission `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *DisplayEnvironmentPermissions) Reset() {
	*x = DisplayEnvironmentPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayEnvironmentPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayEnvironmentPermissions) ProtoMessage() {}

func (x *DisplayEnvironmentPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayEnvironmentPermissions.ProtoReflect.Descriptor instead.
func (*DisplayEnvironmentPermissions) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{1}
}

func (x *DisplayEnvironmentPermissions) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *DisplayEnvironmentPermissions) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *DisplayEnvironmentPermissions) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DisplayEnvironmentPermissions) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DisplayEnvironmentPermissions) GetPermissions() []*DisplayPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type DisplayUserAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in chalk/auth/v1/displayagent.proto.
	ClientId                 string                           `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId                   string                           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TeamId                   string                           `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PermissionsByEnvironment []*DisplayEnvironmentPermissions `protobuf:"bytes,4,rep,name=permissions_by_environment,json=permissionsByEnvironment,proto3" json:"permissions_by_environment,omitempty"`
	Impersonated             bool                             `protobuf:"varint,5,opt,name=impersonated,proto3" json:"impersonated,omitempty"`
	Name                     string                           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Email                    string                           `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	TeamName                 string                           `protobuf:"bytes,8,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *DisplayUserAgent) Reset() {
	*x = DisplayUserAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayUserAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayUserAgent) ProtoMessage() {}

func (x *DisplayUserAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayUserAgent.ProtoReflect.Descriptor instead.
func (*DisplayUserAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Marked as deprecated in chalk/auth/v1/displayagent.proto.
func (x *DisplayUserAgent) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DisplayUserAgent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DisplayUserAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *DisplayUserAgent) GetPermissionsByEnvironment() []*DisplayEnvironmentPermissions {
	if x != nil {
		return x.PermissionsByEnvironment
	}
	return nil
}

func (x *DisplayUserAgent) GetImpersonated() bool {
	if x != nil {
		return x.Impersonated
	}
	return false
}

func (x *DisplayUserAgent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisplayUserAgent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DisplayUserAgent) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type DisplayCustomClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *DisplayCustomClaim) Reset() {
	*x = DisplayCustomClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayCustomClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayCustomClaim) ProtoMessage() {}

func (x *DisplayCustomClaim) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayCustomClaim.ProtoReflect.Descriptor instead.
func (*DisplayCustomClaim) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{3}
}

func (x *DisplayCustomClaim) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DisplayCustomClaim) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type DisplayServiceTokenAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId           string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TeamId             string                 `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ProjectId          string                 `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EnvironmentId      string                 `protobuf:"bytes,5,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Permissions        []*DisplayPermission   `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Name               string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	TeamName           string                 `protobuf:"bytes,8,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	ProjectName        string                 `protobuf:"bytes,9,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	EnvironmentName    string                 `protobuf:"bytes,10,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	CustomerClaims     []*DisplayCustomClaim  `protobuf:"bytes,11,rep,name=customer_claims,json=customerClaims,proto3" json:"customer_claims,omitempty"`
	FeaturePermissions *FeaturePermissions    `protobuf:"bytes,12,opt,name=feature_permissions,json=featurePermissions,proto3" json:"feature_permissions,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *DisplayServiceTokenAgent) Reset() {
	*x = DisplayServiceTokenAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayServiceTokenAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayServiceTokenAgent) ProtoMessage() {}

func (x *DisplayServiceTokenAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayServiceTokenAgent.ProtoReflect.Descriptor instead.
func (*DisplayServiceTokenAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{4}
}

func (x *DisplayServiceTokenAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetPermissions() []*DisplayPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *DisplayServiceTokenAgent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *DisplayServiceTokenAgent) GetCustomerClaims() []*DisplayCustomClaim {
	if x != nil {
		return x.CustomerClaims
	}
	return nil
}

func (x *DisplayServiceTokenAgent) GetFeaturePermissions() *FeaturePermissions {
	if x != nil {
		return x.FeaturePermissions
	}
	return nil
}

func (x *DisplayServiceTokenAgent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DisplayEngineAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId          string `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ProjectId       string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EnvironmentId   string `protobuf:"bytes,4,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Impersonated    bool   `protobuf:"varint,5,opt,name=impersonated,proto3" json:"impersonated,omitempty"`
	TeamName        string `protobuf:"bytes,6,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	ProjectName     string `protobuf:"bytes,7,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	EnvironmentName string `protobuf:"bytes,8,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
}

func (x *DisplayEngineAgent) Reset() {
	*x = DisplayEngineAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayEngineAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayEngineAgent) ProtoMessage() {}

func (x *DisplayEngineAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayEngineAgent.ProtoReflect.Descriptor instead.
func (*DisplayEngineAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{5}
}

func (x *DisplayEngineAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DisplayEngineAgent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *DisplayEngineAgent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DisplayEngineAgent) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *DisplayEngineAgent) GetImpersonated() bool {
	if x != nil {
		return x.Impersonated
	}
	return false
}

func (x *DisplayEngineAgent) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *DisplayEngineAgent) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DisplayEngineAgent) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

type DisplayTenantAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisplayTenantAgent) Reset() {
	*x = DisplayTenantAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayTenantAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTenantAgent) ProtoMessage() {}

func (x *DisplayTenantAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTenantAgent.ProtoReflect.Descriptor instead.
func (*DisplayTenantAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{6}
}

type DisplayMetadataServiceAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisplayMetadataServiceAgent) Reset() {
	*x = DisplayMetadataServiceAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayMetadataServiceAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayMetadataServiceAgent) ProtoMessage() {}

func (x *DisplayMetadataServiceAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayMetadataServiceAgent.ProtoReflect.Descriptor instead.
func (*DisplayMetadataServiceAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{7}
}

type DisplayAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Agent:
	//
	//	*DisplayAgent_UserAgent
	//	*DisplayAgent_ServiceTokenAgent
	//	*DisplayAgent_EngineAgent
	//	*DisplayAgent_TenantAgent
	//	*DisplayAgent_MetadataServiceAgent
	Agent isDisplayAgent_Agent `protobuf_oneof:"agent"`
}

func (x *DisplayAgent) Reset() {
	*x = DisplayAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayAgent) ProtoMessage() {}

func (x *DisplayAgent) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_displayagent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayAgent.ProtoReflect.Descriptor instead.
func (*DisplayAgent) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_displayagent_proto_rawDescGZIP(), []int{8}
}

func (m *DisplayAgent) GetAgent() isDisplayAgent_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (x *DisplayAgent) GetUserAgent() *DisplayUserAgent {
	if x, ok := x.GetAgent().(*DisplayAgent_UserAgent); ok {
		return x.UserAgent
	}
	return nil
}

func (x *DisplayAgent) GetServiceTokenAgent() *DisplayServiceTokenAgent {
	if x, ok := x.GetAgent().(*DisplayAgent_ServiceTokenAgent); ok {
		return x.ServiceTokenAgent
	}
	return nil
}

func (x *DisplayAgent) GetEngineAgent() *DisplayEngineAgent {
	if x, ok := x.GetAgent().(*DisplayAgent_EngineAgent); ok {
		return x.EngineAgent
	}
	return nil
}

func (x *DisplayAgent) GetTenantAgent() *DisplayTenantAgent {
	if x, ok := x.GetAgent().(*DisplayAgent_TenantAgent); ok {
		return x.TenantAgent
	}
	return nil
}

func (x *DisplayAgent) GetMetadataServiceAgent() *DisplayMetadataServiceAgent {
	if x, ok := x.GetAgent().(*DisplayAgent_MetadataServiceAgent); ok {
		return x.MetadataServiceAgent
	}
	return nil
}

type isDisplayAgent_Agent interface {
	isDisplayAgent_Agent()
}

type DisplayAgent_UserAgent struct {
	UserAgent *DisplayUserAgent `protobuf:"bytes,1,opt,name=user_agent,json=userAgent,proto3,oneof"`
}

type DisplayAgent_ServiceTokenAgent struct {
	ServiceTokenAgent *DisplayServiceTokenAgent `protobuf:"bytes,2,opt,name=service_token_agent,json=serviceTokenAgent,proto3,oneof"`
}

type DisplayAgent_EngineAgent struct {
	EngineAgent *DisplayEngineAgent `protobuf:"bytes,3,opt,name=engine_agent,json=engineAgent,proto3,oneof"`
}

type DisplayAgent_TenantAgent struct {
	TenantAgent *DisplayTenantAgent `protobuf:"bytes,4,opt,name=tenant_agent,json=tenantAgent,proto3,oneof"`
}

type DisplayAgent_MetadataServiceAgent struct {
	MetadataServiceAgent *DisplayMetadataServiceAgent `protobuf:"bytes,5,opt,name=metadata_service_agent,json=metadataServiceAgent,proto3,oneof"`
}

func (*DisplayAgent_UserAgent) isDisplayAgent_Agent() {}

func (*DisplayAgent_ServiceTokenAgent) isDisplayAgent_Agent() {}

func (*DisplayAgent_EngineAgent) isDisplayAgent_Agent() {}

func (*DisplayAgent_TenantAgent) isDisplayAgent_Agent() {}

func (*DisplayAgent_MetadataServiceAgent) isDisplayAgent_Agent() {}

var File_chalk_auth_v1_displayagent_proto protoreflect.FileDescriptor

var file_chalk_auth_v1_displayagent_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x1a, 0x25, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x11, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf7,
	0x01, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x6a, 0x0a, 0x1a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x62, 0x79, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x18, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc4, 0x04, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12,
	0x52, 0x0a, 0x13, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x12, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x92,
	0x02, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xa8, 0x03, 0x0a, 0x0c, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x13, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x46,
	0x0a, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x16, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0xb3, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x75, 0x74, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x43, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x43, 0x68,
	0x61, 0x6c, 0x6b, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x43, 0x68,
	0x61, 0x6c, 0x6b, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a,
	0x3a, 0x41, 0x75, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_chalk_auth_v1_displayagent_proto_rawDescOnce sync.Once
	file_chalk_auth_v1_displayagent_proto_rawDescData = file_chalk_auth_v1_displayagent_proto_rawDesc
)

func file_chalk_auth_v1_displayagent_proto_rawDescGZIP() []byte {
	file_chalk_auth_v1_displayagent_proto_rawDescOnce.Do(func() {
		file_chalk_auth_v1_displayagent_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_auth_v1_displayagent_proto_rawDescData)
	})
	return file_chalk_auth_v1_displayagent_proto_rawDescData
}

var file_chalk_auth_v1_displayagent_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chalk_auth_v1_displayagent_proto_goTypes = []any{
	(*DisplayPermission)(nil),             // 0: chalk.auth.v1.DisplayPermission
	(*DisplayEnvironmentPermissions)(nil), // 1: chalk.auth.v1.DisplayEnvironmentPermissions
	(*DisplayUserAgent)(nil),              // 2: chalk.auth.v1.DisplayUserAgent
	(*DisplayCustomClaim)(nil),            // 3: chalk.auth.v1.DisplayCustomClaim
	(*DisplayServiceTokenAgent)(nil),      // 4: chalk.auth.v1.DisplayServiceTokenAgent
	(*DisplayEngineAgent)(nil),            // 5: chalk.auth.v1.DisplayEngineAgent
	(*DisplayTenantAgent)(nil),            // 6: chalk.auth.v1.DisplayTenantAgent
	(*DisplayMetadataServiceAgent)(nil),   // 7: chalk.auth.v1.DisplayMetadataServiceAgent
	(*DisplayAgent)(nil),                  // 8: chalk.auth.v1.DisplayAgent
	(Permission)(0),                       // 9: chalk.auth.v1.Permission
	(*FeaturePermissions)(nil),            // 10: chalk.auth.v1.FeaturePermissions
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
}
var file_chalk_auth_v1_displayagent_proto_depIdxs = []int32{
	9,  // 0: chalk.auth.v1.DisplayPermission.permission:type_name -> chalk.auth.v1.Permission
	0,  // 1: chalk.auth.v1.DisplayEnvironmentPermissions.permissions:type_name -> chalk.auth.v1.DisplayPermission
	1,  // 2: chalk.auth.v1.DisplayUserAgent.permissions_by_environment:type_name -> chalk.auth.v1.DisplayEnvironmentPermissions
	0,  // 3: chalk.auth.v1.DisplayServiceTokenAgent.permissions:type_name -> chalk.auth.v1.DisplayPermission
	3,  // 4: chalk.auth.v1.DisplayServiceTokenAgent.customer_claims:type_name -> chalk.auth.v1.DisplayCustomClaim
	10, // 5: chalk.auth.v1.DisplayServiceTokenAgent.feature_permissions:type_name -> chalk.auth.v1.FeaturePermissions
	11, // 6: chalk.auth.v1.DisplayServiceTokenAgent.created_at:type_name -> google.protobuf.Timestamp
	2,  // 7: chalk.auth.v1.DisplayAgent.user_agent:type_name -> chalk.auth.v1.DisplayUserAgent
	4,  // 8: chalk.auth.v1.DisplayAgent.service_token_agent:type_name -> chalk.auth.v1.DisplayServiceTokenAgent
	5,  // 9: chalk.auth.v1.DisplayAgent.engine_agent:type_name -> chalk.auth.v1.DisplayEngineAgent
	6,  // 10: chalk.auth.v1.DisplayAgent.tenant_agent:type_name -> chalk.auth.v1.DisplayTenantAgent
	7,  // 11: chalk.auth.v1.DisplayAgent.metadata_service_agent:type_name -> chalk.auth.v1.DisplayMetadataServiceAgent
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chalk_auth_v1_displayagent_proto_init() }
func file_chalk_auth_v1_displayagent_proto_init() {
	if File_chalk_auth_v1_displayagent_proto != nil {
		return
	}
	file_chalk_auth_v1_featurepermission_proto_init()
	file_chalk_auth_v1_permissions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chalk_auth_v1_displayagent_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayEnvironmentPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayUserAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayCustomClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayServiceTokenAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayEngineAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayTenantAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayMetadataServiceAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_auth_v1_displayagent_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DisplayAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chalk_auth_v1_displayagent_proto_msgTypes[8].OneofWrappers = []any{
		(*DisplayAgent_UserAgent)(nil),
		(*DisplayAgent_ServiceTokenAgent)(nil),
		(*DisplayAgent_EngineAgent)(nil),
		(*DisplayAgent_TenantAgent)(nil),
		(*DisplayAgent_MetadataServiceAgent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_auth_v1_displayagent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_auth_v1_displayagent_proto_goTypes,
		DependencyIndexes: file_chalk_auth_v1_displayagent_proto_depIdxs,
		MessageInfos:      file_chalk_auth_v1_displayagent_proto_msgTypes,
	}.Build()
	File_chalk_auth_v1_displayagent_proto = out.File
	file_chalk_auth_v1_displayagent_proto_rawDesc = nil
	file_chalk_auth_v1_displayagent_proto_goTypes = nil
	file_chalk_auth_v1_displayagent_proto_depIdxs = nil
}
