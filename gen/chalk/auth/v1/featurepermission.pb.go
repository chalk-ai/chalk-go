// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/auth/v1/featurepermission.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeaturePermission int32

const (
	FeaturePermission_FEATURE_PERMISSION_UNSPECIFIED FeaturePermission = 0
	// Allow unfettered access to the feature.
	// This permission is the default permission for all features.
	FeaturePermission_FEATURE_PERMISSION_ALLOW FeaturePermission = 1
	// Allow access to the feature only within a query plan,
	// and do not return the feature to the client directly.
	FeaturePermission_FEATURE_PERMISSION_ALLOW_INTERNAL FeaturePermission = 2
	// Deny access to the feature, even if the user hasn't requested
	// access to this feature directly, but needs the feature to compute
	// the result of the query.
	FeaturePermission_FEATURE_PERMISSION_DENY FeaturePermission = 3
)

// Enum value maps for FeaturePermission.
var (
	FeaturePermission_name = map[int32]string{
		0: "FEATURE_PERMISSION_UNSPECIFIED",
		1: "FEATURE_PERMISSION_ALLOW",
		2: "FEATURE_PERMISSION_ALLOW_INTERNAL",
		3: "FEATURE_PERMISSION_DENY",
	}
	FeaturePermission_value = map[string]int32{
		"FEATURE_PERMISSION_UNSPECIFIED":    0,
		"FEATURE_PERMISSION_ALLOW":          1,
		"FEATURE_PERMISSION_ALLOW_INTERNAL": 2,
		"FEATURE_PERMISSION_DENY":           3,
	}
)

func (x FeaturePermission) Enum() *FeaturePermission {
	p := new(FeaturePermission)
	*p = x
	return p
}

func (x FeaturePermission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeaturePermission) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_auth_v1_featurepermission_proto_enumTypes[0].Descriptor()
}

func (FeaturePermission) Type() protoreflect.EnumType {
	return &file_chalk_auth_v1_featurepermission_proto_enumTypes[0]
}

func (x FeaturePermission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeaturePermission.Descriptor instead.
func (FeaturePermission) EnumDescriptor() ([]byte, []int) {
	return file_chalk_auth_v1_featurepermission_proto_rawDescGZIP(), []int{0}
}

type FeaturePermissions struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Tags          map[string]FeaturePermission `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=chalk.auth.v1.FeaturePermission"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeaturePermissions) Reset() {
	*x = FeaturePermissions{}
	mi := &file_chalk_auth_v1_featurepermission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeaturePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturePermissions) ProtoMessage() {}

func (x *FeaturePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_auth_v1_featurepermission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturePermissions.ProtoReflect.Descriptor instead.
func (*FeaturePermissions) Descriptor() ([]byte, []int) {
	return file_chalk_auth_v1_featurepermission_proto_rawDescGZIP(), []int{0}
}

func (x *FeaturePermissions) GetTags() map[string]FeaturePermission {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_chalk_auth_v1_featurepermission_proto protoreflect.FileDescriptor

const file_chalk_auth_v1_featurepermission_proto_rawDesc = "" +
	"\n" +
	"%chalk/auth/v1/featurepermission.proto\x12\rchalk.auth.v1\"\xb0\x01\n" +
	"\x12FeaturePermissions\x12?\n" +
	"\x04tags\x18\x01 \x03(\v2+.chalk.auth.v1.FeaturePermissions.TagsEntryR\x04tags\x1aY\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\x0e2 .chalk.auth.v1.FeaturePermissionR\x05value:\x028\x01*\x99\x01\n" +
	"\x11FeaturePermission\x12\"\n" +
	"\x1eFEATURE_PERMISSION_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18FEATURE_PERMISSION_ALLOW\x10\x01\x12%\n" +
	"!FEATURE_PERMISSION_ALLOW_INTERNAL\x10\x02\x12\x1b\n" +
	"\x17FEATURE_PERMISSION_DENY\x10\x03B\xb8\x01\n" +
	"\x11com.chalk.auth.v1B\x16FeaturepermissionProtoP\x01Z5github.com/chalk-ai/chalk-go/gen/chalk/auth/v1;authv1\xa2\x02\x03CAX\xaa\x02\rChalk.Auth.V1\xca\x02\rChalk\\Auth\\V1\xe2\x02\x19Chalk\\Auth\\V1\\GPBMetadata\xea\x02\x0fChalk::Auth::V1b\x06proto3"

var (
	file_chalk_auth_v1_featurepermission_proto_rawDescOnce sync.Once
	file_chalk_auth_v1_featurepermission_proto_rawDescData []byte
)

func file_chalk_auth_v1_featurepermission_proto_rawDescGZIP() []byte {
	file_chalk_auth_v1_featurepermission_proto_rawDescOnce.Do(func() {
		file_chalk_auth_v1_featurepermission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_auth_v1_featurepermission_proto_rawDesc), len(file_chalk_auth_v1_featurepermission_proto_rawDesc)))
	})
	return file_chalk_auth_v1_featurepermission_proto_rawDescData
}

var file_chalk_auth_v1_featurepermission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_auth_v1_featurepermission_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_auth_v1_featurepermission_proto_goTypes = []any{
	(FeaturePermission)(0),     // 0: chalk.auth.v1.FeaturePermission
	(*FeaturePermissions)(nil), // 1: chalk.auth.v1.FeaturePermissions
	nil,                        // 2: chalk.auth.v1.FeaturePermissions.TagsEntry
}
var file_chalk_auth_v1_featurepermission_proto_depIdxs = []int32{
	2, // 0: chalk.auth.v1.FeaturePermissions.tags:type_name -> chalk.auth.v1.FeaturePermissions.TagsEntry
	0, // 1: chalk.auth.v1.FeaturePermissions.TagsEntry.value:type_name -> chalk.auth.v1.FeaturePermission
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_auth_v1_featurepermission_proto_init() }
func file_chalk_auth_v1_featurepermission_proto_init() {
	if File_chalk_auth_v1_featurepermission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_auth_v1_featurepermission_proto_rawDesc), len(file_chalk_auth_v1_featurepermission_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_auth_v1_featurepermission_proto_goTypes,
		DependencyIndexes: file_chalk_auth_v1_featurepermission_proto_depIdxs,
		EnumInfos:         file_chalk_auth_v1_featurepermission_proto_enumTypes,
		MessageInfos:      file_chalk_auth_v1_featurepermission_proto_msgTypes,
	}.Build()
	File_chalk_auth_v1_featurepermission_proto = out.File
	file_chalk_auth_v1_featurepermission_proto_goTypes = nil
	file_chalk_auth_v1_featurepermission_proto_depIdxs = nil
}
