// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/usage/v1/rate.proto

package usagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Cloud represents a cloud provider.
type BillingCloud int32

const (
	BillingCloud_BILLING_CLOUD_UNSPECIFIED BillingCloud = 0
	BillingCloud_BILLING_CLOUD_AWS         BillingCloud = 1
	BillingCloud_BILLING_CLOUD_GCP         BillingCloud = 2
)

// Enum value maps for BillingCloud.
var (
	BillingCloud_name = map[int32]string{
		0: "BILLING_CLOUD_UNSPECIFIED",
		1: "BILLING_CLOUD_AWS",
		2: "BILLING_CLOUD_GCP",
	}
	BillingCloud_value = map[string]int32{
		"BILLING_CLOUD_UNSPECIFIED": 0,
		"BILLING_CLOUD_AWS":         1,
		"BILLING_CLOUD_GCP":         2,
	}
)

func (x BillingCloud) Enum() *BillingCloud {
	p := new(BillingCloud)
	*p = x
	return p
}

func (x BillingCloud) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingCloud) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_usage_v1_rate_proto_enumTypes[0].Descriptor()
}

func (BillingCloud) Type() protoreflect.EnumType {
	return &file_chalk_usage_v1_rate_proto_enumTypes[0]
}

func (x BillingCloud) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingCloud.Descriptor instead.
func (BillingCloud) EnumDescriptor() ([]byte, []int) {
	return file_chalk_usage_v1_rate_proto_rawDescGZIP(), []int{0}
}

type MachineRate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MachineType    string                 `protobuf:"bytes,1,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	Cpus           float64                `protobuf:"fixed64,2,opt,name=cpus,proto3" json:"cpus,omitempty"`
	MemoryGb       float64                `protobuf:"fixed64,3,opt,name=memory_gb,json=memoryGb,proto3" json:"memory_gb,omitempty"`
	CreditsPerHour float64                `protobuf:"fixed64,4,opt,name=credits_per_hour,json=creditsPerHour,proto3" json:"credits_per_hour,omitempty"`
	Cloud          BillingCloud           `protobuf:"varint,5,opt,name=cloud,proto3,enum=chalk.usage.v1.BillingCloud" json:"cloud,omitempty"`
	MachineFamily  string                 `protobuf:"bytes,6,opt,name=machine_family,json=machineFamily,proto3" json:"machine_family,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineRate) Reset() {
	*x = MachineRate{}
	mi := &file_chalk_usage_v1_rate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRate) ProtoMessage() {}

func (x *MachineRate) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_usage_v1_rate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRate.ProtoReflect.Descriptor instead.
func (*MachineRate) Descriptor() ([]byte, []int) {
	return file_chalk_usage_v1_rate_proto_rawDescGZIP(), []int{0}
}

func (x *MachineRate) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *MachineRate) GetCpus() float64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *MachineRate) GetMemoryGb() float64 {
	if x != nil {
		return x.MemoryGb
	}
	return 0
}

func (x *MachineRate) GetCreditsPerHour() float64 {
	if x != nil {
		return x.CreditsPerHour
	}
	return 0
}

func (x *MachineRate) GetCloud() BillingCloud {
	if x != nil {
		return x.Cloud
	}
	return BillingCloud_BILLING_CLOUD_UNSPECIFIED
}

func (x *MachineRate) GetMachineFamily() string {
	if x != nil {
		return x.MachineFamily
	}
	return ""
}

var File_chalk_usage_v1_rate_proto protoreflect.FileDescriptor

const file_chalk_usage_v1_rate_proto_rawDesc = "" +
	"\n" +
	"\x19chalk/usage/v1/rate.proto\x12\x0echalk.usage.v1\"\xe6\x01\n" +
	"\vMachineRate\x12!\n" +
	"\fmachine_type\x18\x01 \x01(\tR\vmachineType\x12\x12\n" +
	"\x04cpus\x18\x02 \x01(\x01R\x04cpus\x12\x1b\n" +
	"\tmemory_gb\x18\x03 \x01(\x01R\bmemoryGb\x12(\n" +
	"\x10credits_per_hour\x18\x04 \x01(\x01R\x0ecreditsPerHour\x122\n" +
	"\x05cloud\x18\x05 \x01(\x0e2\x1c.chalk.usage.v1.BillingCloudR\x05cloud\x12%\n" +
	"\x0emachine_family\x18\x06 \x01(\tR\rmachineFamily*[\n" +
	"\fBillingCloud\x12\x1d\n" +
	"\x19BILLING_CLOUD_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11BILLING_CLOUD_AWS\x10\x01\x12\x15\n" +
	"\x11BILLING_CLOUD_GCP\x10\x02B\xb2\x01\n" +
	"\x12com.chalk.usage.v1B\tRateProtoP\x01Z7github.com/chalk-ai/chalk-go/gen/chalk/usage/v1;usagev1\xa2\x02\x03CUX\xaa\x02\x0eChalk.Usage.V1\xca\x02\x0eChalk\\Usage\\V1\xe2\x02\x1aChalk\\Usage\\V1\\GPBMetadata\xea\x02\x10Chalk::Usage::V1b\x06proto3"

var (
	file_chalk_usage_v1_rate_proto_rawDescOnce sync.Once
	file_chalk_usage_v1_rate_proto_rawDescData []byte
)

func file_chalk_usage_v1_rate_proto_rawDescGZIP() []byte {
	file_chalk_usage_v1_rate_proto_rawDescOnce.Do(func() {
		file_chalk_usage_v1_rate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_usage_v1_rate_proto_rawDesc), len(file_chalk_usage_v1_rate_proto_rawDesc)))
	})
	return file_chalk_usage_v1_rate_proto_rawDescData
}

var file_chalk_usage_v1_rate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_usage_v1_rate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chalk_usage_v1_rate_proto_goTypes = []any{
	(BillingCloud)(0),   // 0: chalk.usage.v1.BillingCloud
	(*MachineRate)(nil), // 1: chalk.usage.v1.MachineRate
}
var file_chalk_usage_v1_rate_proto_depIdxs = []int32{
	0, // 0: chalk.usage.v1.MachineRate.cloud:type_name -> chalk.usage.v1.BillingCloud
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chalk_usage_v1_rate_proto_init() }
func file_chalk_usage_v1_rate_proto_init() {
	if File_chalk_usage_v1_rate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_usage_v1_rate_proto_rawDesc), len(file_chalk_usage_v1_rate_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_usage_v1_rate_proto_goTypes,
		DependencyIndexes: file_chalk_usage_v1_rate_proto_depIdxs,
		EnumInfos:         file_chalk_usage_v1_rate_proto_enumTypes,
		MessageInfos:      file_chalk_usage_v1_rate_proto_msgTypes,
	}.Build()
	File_chalk_usage_v1_rate_proto = out.File
	file_chalk_usage_v1_rate_proto_goTypes = nil
	file_chalk_usage_v1_rate_proto_depIdxs = nil
}
