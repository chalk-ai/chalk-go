// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/deployment.proto

package serverv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeploymentStatus int32

const (
	DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED     DeploymentStatus = 0
	DeploymentStatus_DEPLOYMENT_STATUS_UNKNOWN         DeploymentStatus = 1
	DeploymentStatus_DEPLOYMENT_STATUS_PENDING         DeploymentStatus = 2
	DeploymentStatus_DEPLOYMENT_STATUS_QUEUED          DeploymentStatus = 3
	DeploymentStatus_DEPLOYMENT_STATUS_WORKING         DeploymentStatus = 4
	DeploymentStatus_DEPLOYMENT_STATUS_SUCCESS         DeploymentStatus = 5
	DeploymentStatus_DEPLOYMENT_STATUS_FAILURE         DeploymentStatus = 6
	DeploymentStatus_DEPLOYMENT_STATUS_INTERNAL_ERROR  DeploymentStatus = 7
	DeploymentStatus_DEPLOYMENT_STATUS_TIMEOUT         DeploymentStatus = 8
	DeploymentStatus_DEPLOYMENT_STATUS_CANCELLED       DeploymentStatus = 9
	DeploymentStatus_DEPLOYMENT_STATUS_EXPIRED         DeploymentStatus = 10
	DeploymentStatus_DEPLOYMENT_STATUS_BOOT_ERRORS     DeploymentStatus = 11
	DeploymentStatus_DEPLOYMENT_STATUS_AWAITING_SOURCE DeploymentStatus = 12
	DeploymentStatus_DEPLOYMENT_STATUS_DEPLOYING       DeploymentStatus = 13
)

// Enum value maps for DeploymentStatus.
var (
	DeploymentStatus_name = map[int32]string{
		0:  "DEPLOYMENT_STATUS_UNSPECIFIED",
		1:  "DEPLOYMENT_STATUS_UNKNOWN",
		2:  "DEPLOYMENT_STATUS_PENDING",
		3:  "DEPLOYMENT_STATUS_QUEUED",
		4:  "DEPLOYMENT_STATUS_WORKING",
		5:  "DEPLOYMENT_STATUS_SUCCESS",
		6:  "DEPLOYMENT_STATUS_FAILURE",
		7:  "DEPLOYMENT_STATUS_INTERNAL_ERROR",
		8:  "DEPLOYMENT_STATUS_TIMEOUT",
		9:  "DEPLOYMENT_STATUS_CANCELLED",
		10: "DEPLOYMENT_STATUS_EXPIRED",
		11: "DEPLOYMENT_STATUS_BOOT_ERRORS",
		12: "DEPLOYMENT_STATUS_AWAITING_SOURCE",
		13: "DEPLOYMENT_STATUS_DEPLOYING",
	}
	DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UNSPECIFIED":     0,
		"DEPLOYMENT_STATUS_UNKNOWN":         1,
		"DEPLOYMENT_STATUS_PENDING":         2,
		"DEPLOYMENT_STATUS_QUEUED":          3,
		"DEPLOYMENT_STATUS_WORKING":         4,
		"DEPLOYMENT_STATUS_SUCCESS":         5,
		"DEPLOYMENT_STATUS_FAILURE":         6,
		"DEPLOYMENT_STATUS_INTERNAL_ERROR":  7,
		"DEPLOYMENT_STATUS_TIMEOUT":         8,
		"DEPLOYMENT_STATUS_CANCELLED":       9,
		"DEPLOYMENT_STATUS_EXPIRED":         10,
		"DEPLOYMENT_STATUS_BOOT_ERRORS":     11,
		"DEPLOYMENT_STATUS_AWAITING_SOURCE": 12,
		"DEPLOYMENT_STATUS_DEPLOYING":       13,
	}
)

func (x DeploymentStatus) Enum() *DeploymentStatus {
	p := new(DeploymentStatus)
	*p = x
	return p
}

func (x DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_deployment_proto_enumTypes[0].Descriptor()
}

func (DeploymentStatus) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_deployment_proto_enumTypes[0]
}

func (x DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatus.Descriptor instead.
func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_deployment_proto_rawDescGZIP(), []int{0}
}

type DeploymentProfilingMode int32

const (
	DeploymentProfilingMode_DEPLOYMENT_PROFILING_MODE_UNSPECIFIED DeploymentProfilingMode = 0
	DeploymentProfilingMode_DEPLOYMENT_PROFILING_MODE_NONE        DeploymentProfilingMode = 1
	DeploymentProfilingMode_DEPLOYMENT_PROFILING_MODE_O2          DeploymentProfilingMode = 2
)

// Enum value maps for DeploymentProfilingMode.
var (
	DeploymentProfilingMode_name = map[int32]string{
		0: "DEPLOYMENT_PROFILING_MODE_UNSPECIFIED",
		1: "DEPLOYMENT_PROFILING_MODE_NONE",
		2: "DEPLOYMENT_PROFILING_MODE_O2",
	}
	DeploymentProfilingMode_value = map[string]int32{
		"DEPLOYMENT_PROFILING_MODE_UNSPECIFIED": 0,
		"DEPLOYMENT_PROFILING_MODE_NONE":        1,
		"DEPLOYMENT_PROFILING_MODE_O2":          2,
	}
)

func (x DeploymentProfilingMode) Enum() *DeploymentProfilingMode {
	p := new(DeploymentProfilingMode)
	*p = x
	return p
}

func (x DeploymentProfilingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentProfilingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_deployment_proto_enumTypes[1].Descriptor()
}

func (DeploymentProfilingMode) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_deployment_proto_enumTypes[1]
}

func (x DeploymentProfilingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentProfilingMode.Descriptor instead.
func (DeploymentProfilingMode) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_deployment_proto_rawDescGZIP(), []int{1}
}

type InstanceSizing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinInstances  *uint32                `protobuf:"varint,1,opt,name=min_instances,json=minInstances,proto3,oneof" json:"min_instances,omitempty"`
	MaxInstances  *uint32                `protobuf:"varint,2,opt,name=max_instances,json=maxInstances,proto3,oneof" json:"max_instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceSizing) Reset() {
	*x = InstanceSizing{}
	mi := &file_chalk_server_v1_deployment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceSizing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceSizing) ProtoMessage() {}

func (x *InstanceSizing) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_deployment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceSizing.ProtoReflect.Descriptor instead.
func (*InstanceSizing) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *InstanceSizing) GetMinInstances() uint32 {
	if x != nil && x.MinInstances != nil {
		return *x.MinInstances
	}
	return 0
}

func (x *InstanceSizing) GetMaxInstances() uint32 {
	if x != nil && x.MaxInstances != nil {
		return *x.MaxInstances
	}
	return 0
}

type Deployment struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	Id                    string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId         string                   `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Status                DeploymentStatus         `protobuf:"varint,3,opt,name=status,proto3,enum=chalk.server.v1.DeploymentStatus" json:"status,omitempty"`
	DeploymentTags        []string                 `protobuf:"bytes,4,rep,name=deployment_tags,json=deploymentTags,proto3" json:"deployment_tags,omitempty"`
	CloudBuildId          string                   `protobuf:"bytes,5,opt,name=cloud_build_id,json=cloudBuildId,proto3" json:"cloud_build_id,omitempty"`
	TriggeredBy           string                   `protobuf:"bytes,6,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
	RequirementsFilepath  *string                  `protobuf:"bytes,7,opt,name=requirements_filepath,json=requirementsFilepath,proto3,oneof" json:"requirements_filepath,omitempty"`
	DockerfileFilepath    *string                  `protobuf:"bytes,8,opt,name=dockerfile_filepath,json=dockerfileFilepath,proto3,oneof" json:"dockerfile_filepath,omitempty"`
	Runtime               *string                  `protobuf:"bytes,9,opt,name=runtime,proto3,oneof" json:"runtime,omitempty"`
	ChalkpyVersion        string                   `protobuf:"bytes,10,opt,name=chalkpy_version,json=chalkpyVersion,proto3" json:"chalkpy_version,omitempty"`
	RawDependencyHash     string                   `protobuf:"bytes,11,opt,name=raw_dependency_hash,json=rawDependencyHash,proto3" json:"raw_dependency_hash,omitempty"`
	FinalDependencyHash   *string                  `protobuf:"bytes,12,opt,name=final_dependency_hash,json=finalDependencyHash,proto3,oneof" json:"final_dependency_hash,omitempty"`
	IsPreviewDeployment   *bool                    `protobuf:"varint,13,opt,name=is_preview_deployment,json=isPreviewDeployment,proto3,oneof" json:"is_preview_deployment,omitempty"`
	CreatedAt             *timestamppb.Timestamp   `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp   `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GitCommit             string                   `protobuf:"bytes,16,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	GitPr                 string                   `protobuf:"bytes,17,opt,name=git_pr,json=gitPr,proto3" json:"git_pr,omitempty"`
	GitBranch             string                   `protobuf:"bytes,18,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	GitAuthorEmail        string                   `protobuf:"bytes,19,opt,name=git_author_email,json=gitAuthorEmail,proto3" json:"git_author_email,omitempty"`
	Branch                string                   `protobuf:"bytes,20,opt,name=branch,proto3" json:"branch,omitempty"`
	ProjectSettings       string                   `protobuf:"bytes,21,opt,name=project_settings,json=projectSettings,proto3" json:"project_settings,omitempty"`
	RequirementsFiles     *string                  `protobuf:"bytes,22,opt,name=requirements_files,json=requirementsFiles,proto3,oneof" json:"requirements_files,omitempty"`
	GitTag                string                   `protobuf:"bytes,23,opt,name=git_tag,json=gitTag,proto3" json:"git_tag,omitempty"`
	BaseImageSha          string                   `protobuf:"bytes,24,opt,name=base_image_sha,json=baseImageSha,proto3" json:"base_image_sha,omitempty"`
	StatusChangedAt       *timestamppb.Timestamp   `protobuf:"bytes,25,opt,name=status_changed_at,json=statusChangedAt,proto3" json:"status_changed_at,omitempty"`
	PinnedPlatformVersion *string                  `protobuf:"bytes,26,opt,name=pinned_platform_version,json=pinnedPlatformVersion,proto3,oneof" json:"pinned_platform_version,omitempty"`
	PreviewDeploymentTag  *string                  `protobuf:"bytes,27,opt,name=preview_deployment_tag,json=previewDeploymentTag,proto3,oneof" json:"preview_deployment_tag,omitempty"`
	ProfilingMode         *DeploymentProfilingMode `protobuf:"varint,28,opt,name=profiling_mode,json=profilingMode,proto3,enum=chalk.server.v1.DeploymentProfilingMode,oneof" json:"profiling_mode,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_chalk_server_v1_deployment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_deployment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_deployment_proto_rawDescGZIP(), []int{1}
}

func (x *Deployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Deployment) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Deployment) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *Deployment) GetDeploymentTags() []string {
	if x != nil {
		return x.DeploymentTags
	}
	return nil
}

func (x *Deployment) GetCloudBuildId() string {
	if x != nil {
		return x.CloudBuildId
	}
	return ""
}

func (x *Deployment) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

func (x *Deployment) GetRequirementsFilepath() string {
	if x != nil && x.RequirementsFilepath != nil {
		return *x.RequirementsFilepath
	}
	return ""
}

func (x *Deployment) GetDockerfileFilepath() string {
	if x != nil && x.DockerfileFilepath != nil {
		return *x.DockerfileFilepath
	}
	return ""
}

func (x *Deployment) GetRuntime() string {
	if x != nil && x.Runtime != nil {
		return *x.Runtime
	}
	return ""
}

func (x *Deployment) GetChalkpyVersion() string {
	if x != nil {
		return x.ChalkpyVersion
	}
	return ""
}

func (x *Deployment) GetRawDependencyHash() string {
	if x != nil {
		return x.RawDependencyHash
	}
	return ""
}

func (x *Deployment) GetFinalDependencyHash() string {
	if x != nil && x.FinalDependencyHash != nil {
		return *x.FinalDependencyHash
	}
	return ""
}

func (x *Deployment) GetIsPreviewDeployment() bool {
	if x != nil && x.IsPreviewDeployment != nil {
		return *x.IsPreviewDeployment
	}
	return false
}

func (x *Deployment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Deployment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Deployment) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *Deployment) GetGitPr() string {
	if x != nil {
		return x.GitPr
	}
	return ""
}

func (x *Deployment) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *Deployment) GetGitAuthorEmail() string {
	if x != nil {
		return x.GitAuthorEmail
	}
	return ""
}

func (x *Deployment) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Deployment) GetProjectSettings() string {
	if x != nil {
		return x.ProjectSettings
	}
	return ""
}

func (x *Deployment) GetRequirementsFiles() string {
	if x != nil && x.RequirementsFiles != nil {
		return *x.RequirementsFiles
	}
	return ""
}

func (x *Deployment) GetGitTag() string {
	if x != nil {
		return x.GitTag
	}
	return ""
}

func (x *Deployment) GetBaseImageSha() string {
	if x != nil {
		return x.BaseImageSha
	}
	return ""
}

func (x *Deployment) GetStatusChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusChangedAt
	}
	return nil
}

func (x *Deployment) GetPinnedPlatformVersion() string {
	if x != nil && x.PinnedPlatformVersion != nil {
		return *x.PinnedPlatformVersion
	}
	return ""
}

func (x *Deployment) GetPreviewDeploymentTag() string {
	if x != nil && x.PreviewDeploymentTag != nil {
		return *x.PreviewDeploymentTag
	}
	return ""
}

func (x *Deployment) GetProfilingMode() DeploymentProfilingMode {
	if x != nil && x.ProfilingMode != nil {
		return *x.ProfilingMode
	}
	return DeploymentProfilingMode_DEPLOYMENT_PROFILING_MODE_UNSPECIFIED
}

var File_chalk_server_v1_deployment_proto protoreflect.FileDescriptor

const file_chalk_server_v1_deployment_proto_rawDesc = "" +
	"\n" +
	" chalk/server/v1/deployment.proto\x12\x0fchalk.server.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x88\x01\n" +
	"\x0eInstanceSizing\x12(\n" +
	"\rmin_instances\x18\x01 \x01(\rH\x00R\fminInstances\x88\x01\x01\x12(\n" +
	"\rmax_instances\x18\x02 \x01(\rH\x01R\fmaxInstances\x88\x01\x01B\x10\n" +
	"\x0e_min_instancesB\x10\n" +
	"\x0e_max_instances\"\xde\v\n" +
	"\n" +
	"Deployment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x129\n" +
	"\x06status\x18\x03 \x01(\x0e2!.chalk.server.v1.DeploymentStatusR\x06status\x12'\n" +
	"\x0fdeployment_tags\x18\x04 \x03(\tR\x0edeploymentTags\x12$\n" +
	"\x0ecloud_build_id\x18\x05 \x01(\tR\fcloudBuildId\x12!\n" +
	"\ftriggered_by\x18\x06 \x01(\tR\vtriggeredBy\x128\n" +
	"\x15requirements_filepath\x18\a \x01(\tH\x00R\x14requirementsFilepath\x88\x01\x01\x124\n" +
	"\x13dockerfile_filepath\x18\b \x01(\tH\x01R\x12dockerfileFilepath\x88\x01\x01\x12\x1d\n" +
	"\aruntime\x18\t \x01(\tH\x02R\aruntime\x88\x01\x01\x12'\n" +
	"\x0fchalkpy_version\x18\n" +
	" \x01(\tR\x0echalkpyVersion\x12.\n" +
	"\x13raw_dependency_hash\x18\v \x01(\tR\x11rawDependencyHash\x127\n" +
	"\x15final_dependency_hash\x18\f \x01(\tH\x03R\x13finalDependencyHash\x88\x01\x01\x127\n" +
	"\x15is_preview_deployment\x18\r \x01(\bH\x04R\x13isPreviewDeployment\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"git_commit\x18\x10 \x01(\tR\tgitCommit\x12\x15\n" +
	"\x06git_pr\x18\x11 \x01(\tR\x05gitPr\x12\x1d\n" +
	"\n" +
	"git_branch\x18\x12 \x01(\tR\tgitBranch\x12(\n" +
	"\x10git_author_email\x18\x13 \x01(\tR\x0egitAuthorEmail\x12\x16\n" +
	"\x06branch\x18\x14 \x01(\tR\x06branch\x12)\n" +
	"\x10project_settings\x18\x15 \x01(\tR\x0fprojectSettings\x122\n" +
	"\x12requirements_files\x18\x16 \x01(\tH\x05R\x11requirementsFiles\x88\x01\x01\x12\x17\n" +
	"\agit_tag\x18\x17 \x01(\tR\x06gitTag\x12$\n" +
	"\x0ebase_image_sha\x18\x18 \x01(\tR\fbaseImageSha\x12F\n" +
	"\x11status_changed_at\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampR\x0fstatusChangedAt\x12;\n" +
	"\x17pinned_platform_version\x18\x1a \x01(\tH\x06R\x15pinnedPlatformVersion\x88\x01\x01\x129\n" +
	"\x16preview_deployment_tag\x18\x1b \x01(\tH\aR\x14previewDeploymentTag\x88\x01\x01\x12T\n" +
	"\x0eprofiling_mode\x18\x1c \x01(\x0e2(.chalk.server.v1.DeploymentProfilingModeH\bR\rprofilingMode\x88\x01\x01B\x18\n" +
	"\x16_requirements_filepathB\x16\n" +
	"\x14_dockerfile_filepathB\n" +
	"\n" +
	"\b_runtimeB\x18\n" +
	"\x16_final_dependency_hashB\x18\n" +
	"\x16_is_preview_deploymentB\x15\n" +
	"\x13_requirements_filesB\x1a\n" +
	"\x18_pinned_platform_versionB\x19\n" +
	"\x17_preview_deployment_tagB\x11\n" +
	"\x0f_profiling_mode*\xde\x03\n" +
	"\x10DeploymentStatus\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_UNKNOWN\x10\x01\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_PENDING\x10\x02\x12\x1c\n" +
	"\x18DEPLOYMENT_STATUS_QUEUED\x10\x03\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_WORKING\x10\x04\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_SUCCESS\x10\x05\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_FAILURE\x10\x06\x12$\n" +
	" DEPLOYMENT_STATUS_INTERNAL_ERROR\x10\a\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_TIMEOUT\x10\b\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_CANCELLED\x10\t\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_EXPIRED\x10\n" +
	"\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_BOOT_ERRORS\x10\v\x12%\n" +
	"!DEPLOYMENT_STATUS_AWAITING_SOURCE\x10\f\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_DEPLOYING\x10\r*\x8a\x01\n" +
	"\x17DeploymentProfilingMode\x12)\n" +
	"%DEPLOYMENT_PROFILING_MODE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eDEPLOYMENT_PROFILING_MODE_NONE\x10\x01\x12 \n" +
	"\x1cDEPLOYMENT_PROFILING_MODE_O2\x10\x02B\xbf\x01\n" +
	"\x13com.chalk.server.v1B\x0fDeploymentProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_deployment_proto_rawDescOnce sync.Once
	file_chalk_server_v1_deployment_proto_rawDescData []byte
)

func file_chalk_server_v1_deployment_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_deployment_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_deployment_proto_rawDesc), len(file_chalk_server_v1_deployment_proto_rawDesc)))
	})
	return file_chalk_server_v1_deployment_proto_rawDescData
}

var file_chalk_server_v1_deployment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chalk_server_v1_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_server_v1_deployment_proto_goTypes = []any{
	(DeploymentStatus)(0),         // 0: chalk.server.v1.DeploymentStatus
	(DeploymentProfilingMode)(0),  // 1: chalk.server.v1.DeploymentProfilingMode
	(*InstanceSizing)(nil),        // 2: chalk.server.v1.InstanceSizing
	(*Deployment)(nil),            // 3: chalk.server.v1.Deployment
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_chalk_server_v1_deployment_proto_depIdxs = []int32{
	0, // 0: chalk.server.v1.Deployment.status:type_name -> chalk.server.v1.DeploymentStatus
	4, // 1: chalk.server.v1.Deployment.created_at:type_name -> google.protobuf.Timestamp
	4, // 2: chalk.server.v1.Deployment.updated_at:type_name -> google.protobuf.Timestamp
	4, // 3: chalk.server.v1.Deployment.status_changed_at:type_name -> google.protobuf.Timestamp
	1, // 4: chalk.server.v1.Deployment.profiling_mode:type_name -> chalk.server.v1.DeploymentProfilingMode
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_deployment_proto_init() }
func file_chalk_server_v1_deployment_proto_init() {
	if File_chalk_server_v1_deployment_proto != nil {
		return
	}
	file_chalk_server_v1_deployment_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_deployment_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_deployment_proto_rawDesc), len(file_chalk_server_v1_deployment_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_server_v1_deployment_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_deployment_proto_depIdxs,
		EnumInfos:         file_chalk_server_v1_deployment_proto_enumTypes,
		MessageInfos:      file_chalk_server_v1_deployment_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_deployment_proto = out.File
	file_chalk_server_v1_deployment_proto_goTypes = nil
	file_chalk_server_v1_deployment_proto_depIdxs = nil
}
