// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/team.proto

package serverv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	_ "github.com/chalk-ai/chalk-go/gen/chalk/utils/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEnvRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvRequest) Reset() {
	*x = GetEnvRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvRequest) ProtoMessage() {}

func (x *GetEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvRequest.ProtoReflect.Descriptor instead.
func (*GetEnvRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{0}
}

type GetEnvResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvResponse) Reset() {
	*x = GetEnvResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvResponse) ProtoMessage() {}

func (x *GetEnvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvResponse.ProtoReflect.Descriptor instead.
func (*GetEnvResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{1}
}

func (x *GetEnvResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type GetEnvironmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       string                 `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentsRequest) Reset() {
	*x = GetEnvironmentsRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentsRequest) ProtoMessage() {}

func (x *GetEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{2}
}

func (x *GetEnvironmentsRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type GetEnvironmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environments  []*Environment         `protobuf:"bytes,2,rep,name=environments,proto3" json:"environments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentsResponse) Reset() {
	*x = GetEnvironmentsResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentsResponse) ProtoMessage() {}

func (x *GetEnvironmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentsResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{3}
}

func (x *GetEnvironmentsResponse) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

type GetAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentRequest) Reset() {
	*x = GetAgentRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentRequest) ProtoMessage() {}

func (x *GetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentRequest.ProtoReflect.Descriptor instead.
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{4}
}

type GetAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *v1.Agent              `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentResponse) Reset() {
	*x = GetAgentResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResponse) ProtoMessage() {}

func (x *GetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResponse.ProtoReflect.Descriptor instead.
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{5}
}

func (x *GetAgentResponse) GetAgent() *v1.Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type GetDisplayAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDisplayAgentRequest) Reset() {
	*x = GetDisplayAgentRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDisplayAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDisplayAgentRequest) ProtoMessage() {}

func (x *GetDisplayAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDisplayAgentRequest.ProtoReflect.Descriptor instead.
func (*GetDisplayAgentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{6}
}

type GetDisplayAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *v1.DisplayAgent       `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDisplayAgentResponse) Reset() {
	*x = GetDisplayAgentResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDisplayAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDisplayAgentResponse) ProtoMessage() {}

func (x *GetDisplayAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDisplayAgentResponse.ProtoReflect.Descriptor instead.
func (*GetDisplayAgentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{7}
}

func (x *GetDisplayAgentResponse) GetAgent() *v1.DisplayAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type Team struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug         string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Logo         *string                `protobuf:"bytes,4,opt,name=logo,proto3,oneof" json:"logo,omitempty"`
	Projects     []*Project             `protobuf:"bytes,5,rep,name=projects,proto3" json:"projects,omitempty"`
	ScimProvider *string                `protobuf:"bytes,6,opt,name=scim_provider,json=scimProvider,proto3,oneof" json:"scim_provider,omitempty"`
	// TODO: really a structured object.
	SpecConfigJson map[string]*structpb.Value `protobuf:"bytes,7,rep,name=spec_config_json,json=specConfigJson,proto3" json:"spec_config_json,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{8}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Team) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *Team) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *Team) GetScimProvider() string {
	if x != nil && x.ScimProvider != nil {
		return *x.ScimProvider
	}
	return ""
}

func (x *Team) GetSpecConfigJson() map[string]*structpb.Value {
	if x != nil {
		return x.SpecConfigJson
	}
	return nil
}

type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Environments  []*Environment         `protobuf:"bytes,4,rep,name=environments,proto3" json:"environments,omitempty"`
	GitRepo       *string                `protobuf:"bytes,5,opt,name=git_repo,json=gitRepo,proto3,oneof" json:"git_repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{9}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *Project) GetGitRepo() string {
	if x != nil && x.GitRepo != nil {
		return *x.GitRepo
	}
	return ""
}

type CreateTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Logo          *string                `protobuf:"bytes,3,opt,name=logo,proto3,oneof" json:"logo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeamRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateTeamRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

type CreateTeamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Team          *Team                  `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{13}
}

func (x *CreateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsDefault     bool                   `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{14}
}

func (x *CreateEnvironmentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateEnvironmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEnvironmentRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type CreateEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEnvironmentResponse) Reset() {
	*x = CreateEnvironmentResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentResponse) ProtoMessage() {}

func (x *CreateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{15}
}

func (x *CreateEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type UpdateEnvironmentOperation struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SpecsConfigJson        *string                `protobuf:"bytes,1,opt,name=specs_config_json,json=specsConfigJson,proto3,oneof" json:"specs_config_json,omitempty"`
	AdditionalEnvVars      map[string]string      `protobuf:"bytes,2,rep,name=additional_env_vars,json=additionalEnvVars,proto3" json:"additional_env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PrivatePipRepositories *string                `protobuf:"bytes,3,opt,name=private_pip_repositories,json=privatePipRepositories,proto3,oneof" json:"private_pip_repositories,omitempty"`
	OnlineStoreSecret      *string                `protobuf:"bytes,4,opt,name=online_store_secret,json=onlineStoreSecret,proto3,oneof" json:"online_store_secret,omitempty"`
	FeatureStoreSecret     *string                `protobuf:"bytes,5,opt,name=feature_store_secret,json=featureStoreSecret,proto3,oneof" json:"feature_store_secret,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateEnvironmentOperation) Reset() {
	*x = UpdateEnvironmentOperation{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvironmentOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentOperation) ProtoMessage() {}

func (x *UpdateEnvironmentOperation) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentOperation.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentOperation) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateEnvironmentOperation) GetSpecsConfigJson() string {
	if x != nil && x.SpecsConfigJson != nil {
		return *x.SpecsConfigJson
	}
	return ""
}

func (x *UpdateEnvironmentOperation) GetAdditionalEnvVars() map[string]string {
	if x != nil {
		return x.AdditionalEnvVars
	}
	return nil
}

func (x *UpdateEnvironmentOperation) GetPrivatePipRepositories() string {
	if x != nil && x.PrivatePipRepositories != nil {
		return *x.PrivatePipRepositories
	}
	return ""
}

func (x *UpdateEnvironmentOperation) GetOnlineStoreSecret() string {
	if x != nil && x.OnlineStoreSecret != nil {
		return *x.OnlineStoreSecret
	}
	return ""
}

func (x *UpdateEnvironmentOperation) GetFeatureStoreSecret() string {
	if x != nil && x.FeatureStoreSecret != nil {
		return *x.FeatureStoreSecret
	}
	return ""
}

type UpdateEnvironmentRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Update        *UpdateEnvironmentOperation `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask      `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEnvironmentRequest) Reset() {
	*x = UpdateEnvironmentRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentRequest) ProtoMessage() {}

func (x *UpdateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnvironmentRequest) GetUpdate() *UpdateEnvironmentOperation {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *UpdateEnvironmentRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEnvironmentResponse) Reset() {
	*x = UpdateEnvironmentResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentResponse) ProtoMessage() {}

func (x *UpdateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type GetTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeamRequest) Reset() {
	*x = GetTeamRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRequest) ProtoMessage() {}

func (x *GetTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{19}
}

type GetTeamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Team          *Team                  `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeamResponse) Reset() {
	*x = GetTeamResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamResponse) ProtoMessage() {}

func (x *GetTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamResponse.ProtoReflect.Descriptor instead.
func (*GetTeamResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{20}
}

func (x *GetTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type CreateServiceTokenRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions []v1.Permission        `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=chalk.auth.v1.Permission" json:"permissions,omitempty"`
	// Deprecated: Marked as deprecated in chalk/server/v1/team.proto.
	CustomClaims           []string                        `protobuf:"bytes,3,rep,name=custom_claims,json=customClaims,proto3" json:"custom_claims,omitempty"`
	CustomerClaims         []*v1.CustomClaim               `protobuf:"bytes,4,rep,name=customer_claims,json=customerClaims,proto3" json:"customer_claims,omitempty"`
	FeatureTagToPermission map[string]v1.FeaturePermission `protobuf:"bytes,5,rep,name=feature_tag_to_permission,json=featureTagToPermission,proto3" json:"feature_tag_to_permission,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=chalk.auth.v1.FeaturePermission"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateServiceTokenRequest) Reset() {
	*x = CreateServiceTokenRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTokenRequest) ProtoMessage() {}

func (x *CreateServiceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceTokenRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{21}
}

func (x *CreateServiceTokenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceTokenRequest) GetPermissions() []v1.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Deprecated: Marked as deprecated in chalk/server/v1/team.proto.
func (x *CreateServiceTokenRequest) GetCustomClaims() []string {
	if x != nil {
		return x.CustomClaims
	}
	return nil
}

func (x *CreateServiceTokenRequest) GetCustomerClaims() []*v1.CustomClaim {
	if x != nil {
		return x.CustomerClaims
	}
	return nil
}

func (x *CreateServiceTokenRequest) GetFeatureTagToPermission() map[string]v1.FeaturePermission {
	if x != nil {
		return x.FeatureTagToPermission
	}
	return nil
}

type CreateServiceTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *v1.ServiceTokenAgent  `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServiceTokenResponse) Reset() {
	*x = CreateServiceTokenResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTokenResponse) ProtoMessage() {}

func (x *CreateServiceTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceTokenResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{22}
}

func (x *CreateServiceTokenResponse) GetAgent() *v1.ServiceTokenAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *CreateServiceTokenResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type DeleteServiceTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceTokenRequest) Reset() {
	*x = DeleteServiceTokenRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceTokenRequest) ProtoMessage() {}

func (x *DeleteServiceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceTokenRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteServiceTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteServiceTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceTokenResponse) Reset() {
	*x = DeleteServiceTokenResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceTokenResponse) ProtoMessage() {}

func (x *DeleteServiceTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceTokenResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{24}
}

type PermissionDescription struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               v1.Permission          `protobuf:"varint,1,opt,name=id,proto3,enum=chalk.auth.v1.Permission" json:"id,omitempty"`
	Slug             string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Namespace        string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	GroupDescription string                 `protobuf:"bytes,6,opt,name=group_description,json=groupDescription,proto3" json:"group_description,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PermissionDescription) Reset() {
	*x = PermissionDescription{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDescription) ProtoMessage() {}

func (x *PermissionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDescription.ProtoReflect.Descriptor instead.
func (*PermissionDescription) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{25}
}

func (x *PermissionDescription) GetId() v1.Permission {
	if x != nil {
		return x.Id
	}
	return v1.Permission(0)
}

func (x *PermissionDescription) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PermissionDescription) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PermissionDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionDescription) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

type RoleDescription struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description        string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permissions        []v1.Permission        `protobuf:"varint,4,rep,packed,name=permissions,proto3,enum=chalk.auth.v1.Permission" json:"permissions,omitempty"`
	FeaturePermissions *v1.FeaturePermissions `protobuf:"bytes,5,opt,name=feature_permissions,json=featurePermissions,proto3" json:"feature_permissions,omitempty"`
	IsDefault          bool                   `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RoleDescription) Reset() {
	*x = RoleDescription{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDescription) ProtoMessage() {}

func (x *RoleDescription) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDescription.ProtoReflect.Descriptor instead.
func (*RoleDescription) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{26}
}

func (x *RoleDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleDescription) GetPermissions() []v1.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *RoleDescription) GetFeaturePermissions() *v1.FeaturePermissions {
	if x != nil {
		return x.FeaturePermissions
	}
	return nil
}

func (x *RoleDescription) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GetAvailablePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailablePermissionsRequest) Reset() {
	*x = GetAvailablePermissionsRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailablePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePermissionsRequest) ProtoMessage() {}

func (x *GetAvailablePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailablePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{27}
}

type GetAvailablePermissionsResponse struct {
	state                            protoimpl.MessageState   `protogen:"open.v1"`
	Permissions                      []*PermissionDescription `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Roles                            []*RoleDescription       `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	AvailableServiceTokenPermissions []v1.Permission          `protobuf:"varint,3,rep,packed,name=available_service_token_permissions,json=availableServiceTokenPermissions,proto3,enum=chalk.auth.v1.Permission" json:"available_service_token_permissions,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *GetAvailablePermissionsResponse) Reset() {
	*x = GetAvailablePermissionsResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailablePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePermissionsResponse) ProtoMessage() {}

func (x *GetAvailablePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailablePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{28}
}

func (x *GetAvailablePermissionsResponse) GetPermissions() []*PermissionDescription {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetAvailablePermissionsResponse) GetRoles() []*RoleDescription {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetAvailablePermissionsResponse) GetAvailableServiceTokenPermissions() []v1.Permission {
	if x != nil {
		return x.AvailableServiceTokenPermissions
	}
	return nil
}

type UpsertFeaturePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions   *v1.FeaturePermissions `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertFeaturePermissionsRequest) Reset() {
	*x = UpsertFeaturePermissionsRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertFeaturePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertFeaturePermissionsRequest) ProtoMessage() {}

func (x *UpsertFeaturePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertFeaturePermissionsRequest.ProtoReflect.Descriptor instead.
func (*UpsertFeaturePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{29}
}

func (x *UpsertFeaturePermissionsRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpsertFeaturePermissionsRequest) GetPermissions() *v1.FeaturePermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpsertFeaturePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions   *v1.FeaturePermissions `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertFeaturePermissionsResponse) Reset() {
	*x = UpsertFeaturePermissionsResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertFeaturePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertFeaturePermissionsResponse) ProtoMessage() {}

func (x *UpsertFeaturePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertFeaturePermissionsResponse.ProtoReflect.Descriptor instead.
func (*UpsertFeaturePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{30}
}

func (x *UpsertFeaturePermissionsResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpsertFeaturePermissionsResponse) GetPermissions() *v1.FeaturePermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ListServiceTokensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceTokensRequest) Reset() {
	*x = ListServiceTokensRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceTokensRequest) ProtoMessage() {}

func (x *ListServiceTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceTokensRequest.ProtoReflect.Descriptor instead.
func (*ListServiceTokensRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{31}
}

type ListServiceTokensResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Agents        []*v1.DisplayServiceTokenAgent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceTokensResponse) Reset() {
	*x = ListServiceTokensResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceTokensResponse) ProtoMessage() {}

func (x *ListServiceTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceTokensResponse.ProtoReflect.Descriptor instead.
func (*ListServiceTokensResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{32}
}

func (x *ListServiceTokensResponse) GetAgents() []*v1.DisplayServiceTokenAgent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type UpdateServiceTokenRequest struct {
	state                  protoimpl.MessageState          `protogen:"open.v1"`
	ClientId               string                          `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name                   string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permissions            []v1.Permission                 `protobuf:"varint,3,rep,packed,name=permissions,proto3,enum=chalk.auth.v1.Permission" json:"permissions,omitempty"`
	CustomerClaims         []*v1.CustomClaim               `protobuf:"bytes,4,rep,name=customer_claims,json=customerClaims,proto3" json:"customer_claims,omitempty"`
	FeatureTagToPermission map[string]v1.FeaturePermission `protobuf:"bytes,5,rep,name=feature_tag_to_permission,json=featureTagToPermission,proto3" json:"feature_tag_to_permission,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=chalk.auth.v1.FeaturePermission"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateServiceTokenRequest) Reset() {
	*x = UpdateServiceTokenRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceTokenRequest) ProtoMessage() {}

func (x *UpdateServiceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceTokenRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateServiceTokenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UpdateServiceTokenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateServiceTokenRequest) GetPermissions() []v1.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UpdateServiceTokenRequest) GetCustomerClaims() []*v1.CustomClaim {
	if x != nil {
		return x.CustomerClaims
	}
	return nil
}

func (x *UpdateServiceTokenRequest) GetFeatureTagToPermission() map[string]v1.FeaturePermission {
	if x != nil {
		return x.FeatureTagToPermission
	}
	return nil
}

type UpdateServiceTokenResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Agent         *v1.DisplayServiceTokenAgent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceTokenResponse) Reset() {
	*x = UpdateServiceTokenResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceTokenResponse) ProtoMessage() {}

func (x *UpdateServiceTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceTokenResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceTokenResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateServiceTokenResponse) GetAgent() *v1.DisplayServiceTokenAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateScimGroupSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryTags     []string               `protobuf:"bytes,1,rep,name=query_tags,json=queryTags,proto3" json:"query_tags,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScimGroupSettingsRequest) Reset() {
	*x = UpdateScimGroupSettingsRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScimGroupSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScimGroupSettingsRequest) ProtoMessage() {}

func (x *UpdateScimGroupSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScimGroupSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateScimGroupSettingsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateScimGroupSettingsRequest) GetQueryTags() []string {
	if x != nil {
		return x.QueryTags
	}
	return nil
}

func (x *UpdateScimGroupSettingsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type UpdateScimGroupSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryTags     []string               `protobuf:"bytes,1,rep,name=query_tags,json=queryTags,proto3" json:"query_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScimGroupSettingsResponse) Reset() {
	*x = UpdateScimGroupSettingsResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScimGroupSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScimGroupSettingsResponse) ProtoMessage() {}

func (x *UpdateScimGroupSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScimGroupSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateScimGroupSettingsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateScimGroupSettingsResponse) GetQueryTags() []string {
	if x != nil {
		return x.QueryTags
	}
	return nil
}

type InviteTeamMemberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	RoleId        *string                `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3,oneof" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteTeamMemberRequest) Reset() {
	*x = InviteTeamMemberRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteTeamMemberRequest) ProtoMessage() {}

func (x *InviteTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*InviteTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{37}
}

func (x *InviteTeamMemberRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InviteTeamMemberRequest) GetRoleId() string {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return ""
}

type InviteTeamMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteTeamMemberResponse) Reset() {
	*x = InviteTeamMemberResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteTeamMemberResponse) ProtoMessage() {}

func (x *InviteTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*InviteTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{38}
}

type ExpireTeamInviteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpireTeamInviteRequest) Reset() {
	*x = ExpireTeamInviteRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpireTeamInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireTeamInviteRequest) ProtoMessage() {}

func (x *ExpireTeamInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireTeamInviteRequest.ProtoReflect.Descriptor instead.
func (*ExpireTeamInviteRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{39}
}

func (x *ExpireTeamInviteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExpireTeamInviteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpireTeamInviteResponse) Reset() {
	*x = ExpireTeamInviteResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpireTeamInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireTeamInviteResponse) ProtoMessage() {}

func (x *ExpireTeamInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireTeamInviteResponse.ProtoReflect.Descriptor instead.
func (*ExpireTeamInviteResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{40}
}

type TeamInvite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Team          string                 `protobuf:"bytes,3,opt,name=team,proto3" json:"team,omitempty"`
	Role          *string                `protobuf:"bytes,4,opt,name=role,proto3,oneof" json:"role,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamInvite) Reset() {
	*x = TeamInvite{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInvite) ProtoMessage() {}

func (x *TeamInvite) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInvite.ProtoReflect.Descriptor instead.
func (*TeamInvite) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{41}
}

func (x *TeamInvite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamInvite) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TeamInvite) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *TeamInvite) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *TeamInvite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListTeamInvitesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeamInvitesRequest) Reset() {
	*x = ListTeamInvitesRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeamInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamInvitesRequest) ProtoMessage() {}

func (x *ListTeamInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamInvitesRequest.ProtoReflect.Descriptor instead.
func (*ListTeamInvitesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{42}
}

type ListTeamInvitesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Invites       []*TeamInvite          `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeamInvitesResponse) Reset() {
	*x = ListTeamInvitesResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeamInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamInvitesResponse) ProtoMessage() {}

func (x *ListTeamInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamInvitesResponse.ProtoReflect.Descriptor instead.
func (*ListTeamInvitesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{43}
}

func (x *ListTeamInvitesResponse) GetInvites() []*TeamInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type ScimGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Display       string                 `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
	TeamId        string                 `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Members       []string               `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScimGroup) Reset() {
	*x = ScimGroup{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScimGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScimGroup) ProtoMessage() {}

func (x *ScimGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScimGroup.ProtoReflect.Descriptor instead.
func (*ScimGroup) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{44}
}

func (x *ScimGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScimGroup) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *ScimGroup) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ScimGroup) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type ScimGroupRoleAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	EnvironmentId string                 `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	RoleId        string                 `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	QueryTags     []string               `protobuf:"bytes,5,rep,name=query_tags,json=queryTags,proto3" json:"query_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScimGroupRoleAssignment) Reset() {
	*x = ScimGroupRoleAssignment{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScimGroupRoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScimGroupRoleAssignment) ProtoMessage() {}

func (x *ScimGroupRoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScimGroupRoleAssignment.ProtoReflect.Descriptor instead.
func (*ScimGroupRoleAssignment) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{45}
}

func (x *ScimGroupRoleAssignment) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ScimGroupRoleAssignment) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ScimGroupRoleAssignment) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ScimGroupRoleAssignment) GetQueryTags() []string {
	if x != nil {
		return x.QueryTags
	}
	return nil
}

type UserRoleAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRoleAssignment) Reset() {
	*x = UserRoleAssignment{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleAssignment) ProtoMessage() {}

func (x *UserRoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleAssignment.ProtoReflect.Descriptor instead.
func (*UserRoleAssignment) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{46}
}

func (x *UserRoleAssignment) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UserRoleAssignment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UserPermissions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EnvironmentId   string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	UserRoles       []*UserRoleAssignment  `protobuf:"bytes,3,rep,name=user_roles,json=userRoles,proto3" json:"user_roles,omitempty"`
	UserPermissions []v1.Permission        `protobuf:"varint,4,rep,packed,name=user_permissions,json=userPermissions,proto3,enum=chalk.auth.v1.Permission" json:"user_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserPermissions) Reset() {
	*x = UserPermissions{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissions) ProtoMessage() {}

func (x *UserPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissions.ProtoReflect.Descriptor instead.
func (*UserPermissions) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{47}
}

func (x *UserPermissions) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserPermissions) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *UserPermissions) GetUserRoles() []*UserRoleAssignment {
	if x != nil {
		return x.UserRoles
	}
	return nil
}

func (x *UserPermissions) GetUserPermissions() []v1.Permission {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Email         *string                `protobuf:"bytes,3,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Image         *string                `protobuf:"bytes,4,opt,name=image,proto3,oneof" json:"image,omitempty"`
	TeamId        *string                `protobuf:"bytes,5,opt,name=team_id,json=teamId,proto3,oneof" json:"team_id,omitempty"`
	DeactivatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deactivated_at,json=deactivatedAt,proto3,oneof" json:"deactivated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{48}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *User) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *User) GetTeamId() string {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return ""
}

func (x *User) GetDeactivatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeactivatedAt
	}
	return nil
}

type EnvironmentPermissions struct {
	state           protoimpl.MessageState     `protogen:"open.v1"`
	EnvironmentId   string                     `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	ScimRoles       []*ScimGroupRoleAssignment `protobuf:"bytes,2,rep,name=scim_roles,json=scimRoles,proto3" json:"scim_roles,omitempty"`
	UserPermissions []*UserPermissions         `protobuf:"bytes,3,rep,name=user_permissions,json=userPermissions,proto3" json:"user_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnvironmentPermissions) Reset() {
	*x = EnvironmentPermissions{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentPermissions) ProtoMessage() {}

func (x *EnvironmentPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentPermissions.ProtoReflect.Descriptor instead.
func (*EnvironmentPermissions) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{49}
}

func (x *EnvironmentPermissions) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *EnvironmentPermissions) GetScimRoles() []*ScimGroupRoleAssignment {
	if x != nil {
		return x.ScimRoles
	}
	return nil
}

func (x *EnvironmentPermissions) GetUserPermissions() []*UserPermissions {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

type GetTeamPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeamPermissionsRequest) Reset() {
	*x = GetTeamPermissionsRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamPermissionsRequest) ProtoMessage() {}

func (x *GetTeamPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetTeamPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{50}
}

type GetTeamPermissionsResponse struct {
	state                  protoimpl.MessageState    `protogen:"open.v1"`
	Roles                  []*RoleDescription        `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	ScimGroups             []*ScimGroup              `protobuf:"bytes,2,rep,name=scim_groups,json=scimGroups,proto3" json:"scim_groups,omitempty"`
	EnvironmentPermissions []*EnvironmentPermissions `protobuf:"bytes,3,rep,name=environment_permissions,json=environmentPermissions,proto3" json:"environment_permissions,omitempty"`
	TeamMembers            []*User                   `protobuf:"bytes,4,rep,name=team_members,json=teamMembers,proto3" json:"team_members,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetTeamPermissionsResponse) Reset() {
	*x = GetTeamPermissionsResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamPermissionsResponse) ProtoMessage() {}

func (x *GetTeamPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetTeamPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{51}
}

func (x *GetTeamPermissionsResponse) GetRoles() []*RoleDescription {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetTeamPermissionsResponse) GetScimGroups() []*ScimGroup {
	if x != nil {
		return x.ScimGroups
	}
	return nil
}

func (x *GetTeamPermissionsResponse) GetEnvironmentPermissions() []*EnvironmentPermissions {
	if x != nil {
		return x.EnvironmentPermissions
	}
	return nil
}

func (x *GetTeamPermissionsResponse) GetTeamMembers() []*User {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

type ArchiveEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveEnvironmentRequest) Reset() {
	*x = ArchiveEnvironmentRequest{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEnvironmentRequest) ProtoMessage() {}

func (x *ArchiveEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*ArchiveEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{52}
}

func (x *ArchiveEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ArchiveEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveEnvironmentResponse) Reset() {
	*x = ArchiveEnvironmentResponse{}
	mi := &file_chalk_server_v1_team_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEnvironmentResponse) ProtoMessage() {}

func (x *ArchiveEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_team_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*ArchiveEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_team_proto_rawDescGZIP(), []int{53}
}

var File_chalk_server_v1_team_proto protoreflect.FileDescriptor

const file_chalk_server_v1_team_proto_rawDesc = "" +
	"\n" +
	"\x1achalk/server/v1/team.proto\x12\x0fchalk.server.v1\x1a\x19chalk/auth/v1/agent.proto\x1a\x19chalk/auth/v1/audit.proto\x1a chalk/auth/v1/displayagent.proto\x1a%chalk/auth/v1/featurepermission.proto\x1a\x1fchalk/auth/v1/permissions.proto\x1a!chalk/server/v1/environment.proto\x1a\x1echalk/utils/v1/sensitive.proto\x1a google/protobuf/descriptor.proto\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0f\n" +
	"\rGetEnvRequest\"P\n" +
	"\x0eGetEnvResponse\x12>\n" +
	"\venvironment\x18\x01 \x01(\v2\x1c.chalk.server.v1.EnvironmentR\venvironment\"2\n" +
	"\x16GetEnvironmentsRequest\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\"[\n" +
	"\x17GetEnvironmentsResponse\x12@\n" +
	"\fenvironments\x18\x02 \x03(\v2\x1c.chalk.server.v1.EnvironmentR\fenvironments\"\x11\n" +
	"\x0fGetAgentRequest\">\n" +
	"\x10GetAgentResponse\x12*\n" +
	"\x05agent\x18\x01 \x01(\v2\x14.chalk.auth.v1.AgentR\x05agent\"\x18\n" +
	"\x16GetDisplayAgentRequest\"L\n" +
	"\x17GetDisplayAgentResponse\x121\n" +
	"\x05agent\x18\x01 \x01(\v2\x1b.chalk.auth.v1.DisplayAgentR\x05agent\"\x82\x03\n" +
	"\x04Team\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12\x17\n" +
	"\x04logo\x18\x04 \x01(\tH\x00R\x04logo\x88\x01\x01\x124\n" +
	"\bprojects\x18\x05 \x03(\v2\x18.chalk.server.v1.ProjectR\bprojects\x12(\n" +
	"\rscim_provider\x18\x06 \x01(\tH\x01R\fscimProvider\x88\x01\x01\x12S\n" +
	"\x10spec_config_json\x18\a \x03(\v2).chalk.server.v1.Team.SpecConfigJsonEntryR\x0especConfigJson\x1aY\n" +
	"\x13SpecConfigJsonEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B\a\n" +
	"\x05_logoB\x10\n" +
	"\x0e_scim_provider\"\xb5\x01\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12@\n" +
	"\fenvironments\x18\x04 \x03(\v2\x1c.chalk.server.v1.EnvironmentR\fenvironments\x12\x1e\n" +
	"\bgit_repo\x18\x05 \x01(\tH\x00R\agitRepo\x88\x01\x01B\v\n" +
	"\t_git_repo\"]\n" +
	"\x11CreateTeamRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x02 \x01(\tR\x04slug\x12\x17\n" +
	"\x04logo\x18\x03 \x01(\tH\x00R\x04logo\x88\x01\x01B\a\n" +
	"\x05_logo\"?\n" +
	"\x12CreateTeamResponse\x12)\n" +
	"\x04team\x18\x01 \x01(\v2\x15.chalk.server.v1.TeamR\x04team\"*\n" +
	"\x14CreateProjectRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"K\n" +
	"\x15CreateProjectResponse\x122\n" +
	"\aproject\x18\x01 \x01(\v2\x18.chalk.server.v1.ProjectR\aproject\"l\n" +
	"\x18CreateEnvironmentRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"[\n" +
	"\x19CreateEnvironmentResponse\x12>\n" +
	"\venvironment\x18\x01 \x01(\v2\x1c.chalk.server.v1.EnvironmentR\venvironment\"\x96\x04\n" +
	"\x1aUpdateEnvironmentOperation\x12/\n" +
	"\x11specs_config_json\x18\x01 \x01(\tH\x00R\x0fspecsConfigJson\x88\x01\x01\x12r\n" +
	"\x13additional_env_vars\x18\x02 \x03(\v2B.chalk.server.v1.UpdateEnvironmentOperation.AdditionalEnvVarsEntryR\x11additionalEnvVars\x12=\n" +
	"\x18private_pip_repositories\x18\x03 \x01(\tH\x01R\x16privatePipRepositories\x88\x01\x01\x123\n" +
	"\x13online_store_secret\x18\x04 \x01(\tH\x02R\x11onlineStoreSecret\x88\x01\x01\x125\n" +
	"\x14feature_store_secret\x18\x05 \x01(\tH\x03R\x12featureStoreSecret\x88\x01\x01\x1aD\n" +
	"\x16AdditionalEnvVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x14\n" +
	"\x12_specs_config_jsonB\x1b\n" +
	"\x19_private_pip_repositoriesB\x16\n" +
	"\x14_online_store_secretB\x17\n" +
	"\x15_feature_store_secret\"\xac\x01\n" +
	"\x18UpdateEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12C\n" +
	"\x06update\x18\x02 \x01(\v2+.chalk.server.v1.UpdateEnvironmentOperationR\x06update\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"[\n" +
	"\x19UpdateEnvironmentResponse\x12>\n" +
	"\venvironment\x18\x01 \x01(\v2\x1c.chalk.server.v1.EnvironmentR\venvironment\"\x10\n" +
	"\x0eGetTeamRequest\"<\n" +
	"\x0fGetTeamResponse\x12)\n" +
	"\x04team\x18\x01 \x01(\v2\x15.chalk.server.v1.TeamR\x04team\"\xcb\x03\n" +
	"\x19CreateServiceTokenRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vpermissions\x18\x02 \x03(\x0e2\x19.chalk.auth.v1.PermissionR\vpermissions\x12'\n" +
	"\rcustom_claims\x18\x03 \x03(\tB\x02\x18\x01R\fcustomClaims\x12C\n" +
	"\x0fcustomer_claims\x18\x04 \x03(\v2\x1a.chalk.auth.v1.CustomClaimR\x0ecustomerClaims\x12\x81\x01\n" +
	"\x19feature_tag_to_permission\x18\x05 \x03(\v2F.chalk.server.v1.CreateServiceTokenRequest.FeatureTagToPermissionEntryR\x16featureTagToPermission\x1ak\n" +
	"\x1bFeatureTagToPermissionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\x0e2 .chalk.auth.v1.FeaturePermissionR\x05value:\x028\x01\"\x7f\n" +
	"\x1aCreateServiceTokenResponse\x126\n" +
	"\x05agent\x18\x01 \x01(\v2 .chalk.auth.v1.ServiceTokenAgentR\x05agent\x12)\n" +
	"\rclient_secret\x18\x02 \x01(\tB\x04ء'\x01R\fclientSecret\"+\n" +
	"\x19DeleteServiceTokenRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1c\n" +
	"\x1aDeleteServiceTokenResponse\"\xd7\x01\n" +
	"\x15PermissionDescription\x12)\n" +
	"\x02id\x18\x01 \x01(\x0e2\x19.chalk.auth.v1.PermissionR\x02id\x12\x12\n" +
	"\x04slug\x18\x02 \x01(\tR\x04slug\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12+\n" +
	"\x11group_description\x18\x06 \x01(\tR\x10groupDescription\"\x87\x02\n" +
	"\x0fRoleDescription\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\vpermissions\x18\x04 \x03(\x0e2\x19.chalk.auth.v1.PermissionR\vpermissions\x12R\n" +
	"\x13feature_permissions\x18\x05 \x01(\v2!.chalk.auth.v1.FeaturePermissionsR\x12featurePermissions\x12\x1d\n" +
	"\n" +
	"is_default\x18\x06 \x01(\bR\tisDefault\" \n" +
	"\x1eGetAvailablePermissionsRequest\"\x8d\x02\n" +
	"\x1fGetAvailablePermissionsResponse\x12H\n" +
	"\vpermissions\x18\x01 \x03(\v2&.chalk.server.v1.PermissionDescriptionR\vpermissions\x126\n" +
	"\x05roles\x18\x02 \x03(\v2 .chalk.server.v1.RoleDescriptionR\x05roles\x12h\n" +
	"#available_service_token_permissions\x18\x03 \x03(\x0e2\x19.chalk.auth.v1.PermissionR availableServiceTokenPermissions\"z\n" +
	"\x1fUpsertFeaturePermissionsRequest\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12C\n" +
	"\vpermissions\x18\x02 \x01(\v2!.chalk.auth.v1.FeaturePermissionsR\vpermissions\"{\n" +
	" UpsertFeaturePermissionsResponse\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12C\n" +
	"\vpermissions\x18\x02 \x01(\v2!.chalk.auth.v1.FeaturePermissionsR\vpermissions\"\x1a\n" +
	"\x18ListServiceTokensRequest\"\\\n" +
	"\x19ListServiceTokensResponse\x12?\n" +
	"\x06agents\x18\x01 \x03(\v2'.chalk.auth.v1.DisplayServiceTokenAgentR\x06agents\"\xbf\x03\n" +
	"\x19UpdateServiceTokenRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12;\n" +
	"\vpermissions\x18\x03 \x03(\x0e2\x19.chalk.auth.v1.PermissionR\vpermissions\x12C\n" +
	"\x0fcustomer_claims\x18\x04 \x03(\v2\x1a.chalk.auth.v1.CustomClaimR\x0ecustomerClaims\x12\x81\x01\n" +
	"\x19feature_tag_to_permission\x18\x05 \x03(\v2F.chalk.server.v1.UpdateServiceTokenRequest.FeatureTagToPermissionEntryR\x16featureTagToPermission\x1ak\n" +
	"\x1bFeatureTagToPermissionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\x0e2 .chalk.auth.v1.FeaturePermissionR\x05value:\x028\x01\"[\n" +
	"\x1aUpdateServiceTokenResponse\x12=\n" +
	"\x05agent\x18\x01 \x01(\v2'.chalk.auth.v1.DisplayServiceTokenAgentR\x05agent\"U\n" +
	"\x1eUpdateScimGroupSettingsRequest\x12\x1d\n" +
	"\n" +
	"query_tags\x18\x01 \x03(\tR\tqueryTags\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\"@\n" +
	"\x1fUpdateScimGroupSettingsResponse\x12\x1d\n" +
	"\n" +
	"query_tags\x18\x01 \x03(\tR\tqueryTags\"Y\n" +
	"\x17InviteTeamMemberRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1c\n" +
	"\arole_id\x18\x02 \x01(\tH\x00R\x06roleId\x88\x01\x01B\n" +
	"\n" +
	"\b_role_id\"\x1a\n" +
	"\x18InviteTeamMemberResponse\")\n" +
	"\x17ExpireTeamInviteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1a\n" +
	"\x18ExpireTeamInviteResponse\"\xa3\x01\n" +
	"\n" +
	"TeamInvite\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04team\x18\x03 \x01(\tR\x04team\x12\x17\n" +
	"\x04role\x18\x04 \x01(\tH\x00R\x04role\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\a\n" +
	"\x05_role\"\x18\n" +
	"\x16ListTeamInvitesRequest\"P\n" +
	"\x17ListTeamInvitesResponse\x125\n" +
	"\ainvites\x18\x01 \x03(\v2\x1b.chalk.server.v1.TeamInviteR\ainvites\"h\n" +
	"\tScimGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\adisplay\x18\x02 \x01(\tR\adisplay\x12\x17\n" +
	"\ateam_id\x18\x03 \x01(\tR\x06teamId\x12\x18\n" +
	"\amembers\x18\x04 \x03(\tR\amembers\"\x93\x01\n" +
	"\x17ScimGroupRoleAssignment\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12%\n" +
	"\x0eenvironment_id\x18\x03 \x01(\tR\renvironmentId\x12\x17\n" +
	"\arole_id\x18\x04 \x01(\tR\x06roleId\x12\x1d\n" +
	"\n" +
	"query_tags\x18\x05 \x03(\tR\tqueryTags\"A\n" +
	"\x12UserRoleAssignment\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"\xdb\x01\n" +
	"\x0fUserPermissions\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12B\n" +
	"\n" +
	"user_roles\x18\x03 \x03(\v2#.chalk.server.v1.UserRoleAssignmentR\tuserRoles\x12D\n" +
	"\x10user_permissions\x18\x04 \x03(\x0e2\x19.chalk.auth.v1.PermissionR\x0fuserPermissions\"\x87\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x19\n" +
	"\x05email\x18\x03 \x01(\tH\x01R\x05email\x88\x01\x01\x12\x19\n" +
	"\x05image\x18\x04 \x01(\tH\x02R\x05image\x88\x01\x01\x12\x1c\n" +
	"\ateam_id\x18\x05 \x01(\tH\x03R\x06teamId\x88\x01\x01\x12F\n" +
	"\x0edeactivated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x04R\rdeactivatedAt\x88\x01\x01B\a\n" +
	"\x05_nameB\b\n" +
	"\x06_emailB\b\n" +
	"\x06_imageB\n" +
	"\n" +
	"\b_team_idB\x11\n" +
	"\x0f_deactivated_at\"\xd5\x01\n" +
	"\x16EnvironmentPermissions\x12%\n" +
	"\x0eenvironment_id\x18\x01 \x01(\tR\renvironmentId\x12G\n" +
	"\n" +
	"scim_roles\x18\x02 \x03(\v2(.chalk.server.v1.ScimGroupRoleAssignmentR\tscimRoles\x12K\n" +
	"\x10user_permissions\x18\x03 \x03(\v2 .chalk.server.v1.UserPermissionsR\x0fuserPermissions\"\x1b\n" +
	"\x19GetTeamPermissionsRequest\"\xad\x02\n" +
	"\x1aGetTeamPermissionsResponse\x126\n" +
	"\x05roles\x18\x01 \x03(\v2 .chalk.server.v1.RoleDescriptionR\x05roles\x12;\n" +
	"\vscim_groups\x18\x02 \x03(\v2\x1a.chalk.server.v1.ScimGroupR\n" +
	"scimGroups\x12`\n" +
	"\x17environment_permissions\x18\x03 \x03(\v2'.chalk.server.v1.EnvironmentPermissionsR\x16environmentPermissions\x128\n" +
	"\fteam_members\x18\x04 \x03(\v2\x15.chalk.server.v1.UserR\vteamMembers\"+\n" +
	"\x19ArchiveEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1c\n" +
	"\x1aArchiveEnvironmentResponse2\xfc\x12\n" +
	"\vTeamService\x12Q\n" +
	"\x06GetEnv\x12\x1e.chalk.server.v1.GetEnvRequest\x1a\x1f.chalk.server.v1.GetEnvResponse\"\x06\x80}\v\x90\x02\x01\x12l\n" +
	"\x0fGetEnvironments\x12'.chalk.server.v1.GetEnvironmentsRequest\x1a(.chalk.server.v1.GetEnvironmentsResponse\"\x06\x80}\x02\x90\x02\x01\x12W\n" +
	"\bGetAgent\x12 .chalk.server.v1.GetAgentRequest\x1a!.chalk.server.v1.GetAgentResponse\"\x06\x80}\x02\x90\x02\x01\x12l\n" +
	"\x0fGetDisplayAgent\x12'.chalk.server.v1.GetDisplayAgentRequest\x1a(.chalk.server.v1.GetDisplayAgentResponse\"\x06\x80}\x02\x90\x02\x01\x12T\n" +
	"\aGetTeam\x12\x1f.chalk.server.v1.GetTeamRequest\x1a .chalk.server.v1.GetTeamResponse\"\x06\x80}\x02\x90\x02\x01\x12`\n" +
	"\n" +
	"CreateTeam\x12\".chalk.server.v1.CreateTeamRequest\x1a#.chalk.server.v1.CreateTeamResponse\"\t\x80}\x1b\x8a\xd3\x0e\x02\b\x02\x12i\n" +
	"\rCreateProject\x12%.chalk.server.v1.CreateProjectRequest\x1a&.chalk.server.v1.CreateProjectResponse\"\t\x80}\x1a\x8a\xd3\x0e\x02\b\x02\x12u\n" +
	"\x11CreateEnvironment\x12).chalk.server.v1.CreateEnvironmentRequest\x1a*.chalk.server.v1.CreateEnvironmentResponse\"\t\x80}\x1a\x8a\xd3\x0e\x02\b\x02\x12u\n" +
	"\x11UpdateEnvironment\x12).chalk.server.v1.UpdateEnvironmentRequest\x1a*.chalk.server.v1.UpdateEnvironmentResponse\"\t\x80}\f\x8a\xd3\x0e\x02\b\x02\x12\x84\x01\n" +
	"\x17GetAvailablePermissions\x12/.chalk.server.v1.GetAvailablePermissionsRequest\x1a0.chalk.server.v1.GetAvailablePermissionsResponse\"\x06\x80}\x02\x90\x02\x01\x12\x8f\x01\n" +
	"\x12CreateServiceToken\x12*.chalk.server.v1.CreateServiceTokenRequest\x1a+.chalk.server.v1.CreateServiceTokenResponse\" \x80}\x15\x8a\xd3\x0e\x19\b\x02\x12\x15Created service token\x12x\n" +
	"\x12DeleteServiceToken\x12*.chalk.server.v1.DeleteServiceTokenRequest\x1a+.chalk.server.v1.DeleteServiceTokenResponse\"\t\x80}\x15\x8a\xd3\x0e\x02\b\x02\x12o\n" +
	"\x11ListServiceTokens\x12).chalk.server.v1.ListServiceTokensRequest\x1a*.chalk.server.v1.ListServiceTokensResponse\"\x03\x80}\x16\x12x\n" +
	"\x12UpdateServiceToken\x12*.chalk.server.v1.UpdateServiceTokenRequest\x1a+.chalk.server.v1.UpdateServiceTokenResponse\"\t\x80}\x15\x8a\xd3\x0e\x02\b\x02\x12r\n" +
	"\x10InviteTeamMember\x12(.chalk.server.v1.InviteTeamMemberRequest\x1a).chalk.server.v1.InviteTeamMemberResponse\"\t\x80}\a\x8a\xd3\x0e\x02\b\x02\x12r\n" +
	"\x10ExpireTeamInvite\x12(.chalk.server.v1.ExpireTeamInviteRequest\x1a).chalk.server.v1.ExpireTeamInviteResponse\"\t\x80}\b\x8a\xd3\x0e\x02\b\x02\x12i\n" +
	"\x0fListTeamInvites\x12'.chalk.server.v1.ListTeamInvitesRequest\x1a(.chalk.server.v1.ListTeamInvitesResponse\"\x03\x80}\t\x12\x8a\x01\n" +
	"\x18UpsertFeaturePermissions\x120.chalk.server.v1.UpsertFeaturePermissionsRequest\x1a1.chalk.server.v1.UpsertFeaturePermissionsResponse\"\t\x80}\x15\x8a\xd3\x0e\x02\b\x02\x12\x87\x01\n" +
	"\x17UpdateScimGroupSettings\x12/.chalk.server.v1.UpdateScimGroupSettingsRequest\x1a0.chalk.server.v1.UpdateScimGroupSettingsResponse\"\t\x80}\n" +
	"\x8a\xd3\x0e\x02\b\x02\x12r\n" +
	"\x12GetTeamPermissions\x12*.chalk.server.v1.GetTeamPermissionsRequest\x1a+.chalk.server.v1.GetTeamPermissionsResponse\"\x03\x80}\x02\x12x\n" +
	"\x12ArchiveEnvironment\x12*.chalk.server.v1.ArchiveEnvironmentRequest\x1a+.chalk.server.v1.ArchiveEnvironmentResponse\"\t\x80}\x1b\x8a\xd3\x0e\x02\b\x02B\xb9\x01\n" +
	"\x13com.chalk.server.v1B\tTeamProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_team_proto_rawDescOnce sync.Once
	file_chalk_server_v1_team_proto_rawDescData []byte
)

func file_chalk_server_v1_team_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_team_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_team_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_team_proto_rawDesc), len(file_chalk_server_v1_team_proto_rawDesc)))
	})
	return file_chalk_server_v1_team_proto_rawDescData
}

var file_chalk_server_v1_team_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_chalk_server_v1_team_proto_goTypes = []any{
	(*GetEnvRequest)(nil),                    // 0: chalk.server.v1.GetEnvRequest
	(*GetEnvResponse)(nil),                   // 1: chalk.server.v1.GetEnvResponse
	(*GetEnvironmentsRequest)(nil),           // 2: chalk.server.v1.GetEnvironmentsRequest
	(*GetEnvironmentsResponse)(nil),          // 3: chalk.server.v1.GetEnvironmentsResponse
	(*GetAgentRequest)(nil),                  // 4: chalk.server.v1.GetAgentRequest
	(*GetAgentResponse)(nil),                 // 5: chalk.server.v1.GetAgentResponse
	(*GetDisplayAgentRequest)(nil),           // 6: chalk.server.v1.GetDisplayAgentRequest
	(*GetDisplayAgentResponse)(nil),          // 7: chalk.server.v1.GetDisplayAgentResponse
	(*Team)(nil),                             // 8: chalk.server.v1.Team
	(*Project)(nil),                          // 9: chalk.server.v1.Project
	(*CreateTeamRequest)(nil),                // 10: chalk.server.v1.CreateTeamRequest
	(*CreateTeamResponse)(nil),               // 11: chalk.server.v1.CreateTeamResponse
	(*CreateProjectRequest)(nil),             // 12: chalk.server.v1.CreateProjectRequest
	(*CreateProjectResponse)(nil),            // 13: chalk.server.v1.CreateProjectResponse
	(*CreateEnvironmentRequest)(nil),         // 14: chalk.server.v1.CreateEnvironmentRequest
	(*CreateEnvironmentResponse)(nil),        // 15: chalk.server.v1.CreateEnvironmentResponse
	(*UpdateEnvironmentOperation)(nil),       // 16: chalk.server.v1.UpdateEnvironmentOperation
	(*UpdateEnvironmentRequest)(nil),         // 17: chalk.server.v1.UpdateEnvironmentRequest
	(*UpdateEnvironmentResponse)(nil),        // 18: chalk.server.v1.UpdateEnvironmentResponse
	(*GetTeamRequest)(nil),                   // 19: chalk.server.v1.GetTeamRequest
	(*GetTeamResponse)(nil),                  // 20: chalk.server.v1.GetTeamResponse
	(*CreateServiceTokenRequest)(nil),        // 21: chalk.server.v1.CreateServiceTokenRequest
	(*CreateServiceTokenResponse)(nil),       // 22: chalk.server.v1.CreateServiceTokenResponse
	(*DeleteServiceTokenRequest)(nil),        // 23: chalk.server.v1.DeleteServiceTokenRequest
	(*DeleteServiceTokenResponse)(nil),       // 24: chalk.server.v1.DeleteServiceTokenResponse
	(*PermissionDescription)(nil),            // 25: chalk.server.v1.PermissionDescription
	(*RoleDescription)(nil),                  // 26: chalk.server.v1.RoleDescription
	(*GetAvailablePermissionsRequest)(nil),   // 27: chalk.server.v1.GetAvailablePermissionsRequest
	(*GetAvailablePermissionsResponse)(nil),  // 28: chalk.server.v1.GetAvailablePermissionsResponse
	(*UpsertFeaturePermissionsRequest)(nil),  // 29: chalk.server.v1.UpsertFeaturePermissionsRequest
	(*UpsertFeaturePermissionsResponse)(nil), // 30: chalk.server.v1.UpsertFeaturePermissionsResponse
	(*ListServiceTokensRequest)(nil),         // 31: chalk.server.v1.ListServiceTokensRequest
	(*ListServiceTokensResponse)(nil),        // 32: chalk.server.v1.ListServiceTokensResponse
	(*UpdateServiceTokenRequest)(nil),        // 33: chalk.server.v1.UpdateServiceTokenRequest
	(*UpdateServiceTokenResponse)(nil),       // 34: chalk.server.v1.UpdateServiceTokenResponse
	(*UpdateScimGroupSettingsRequest)(nil),   // 35: chalk.server.v1.UpdateScimGroupSettingsRequest
	(*UpdateScimGroupSettingsResponse)(nil),  // 36: chalk.server.v1.UpdateScimGroupSettingsResponse
	(*InviteTeamMemberRequest)(nil),          // 37: chalk.server.v1.InviteTeamMemberRequest
	(*InviteTeamMemberResponse)(nil),         // 38: chalk.server.v1.InviteTeamMemberResponse
	(*ExpireTeamInviteRequest)(nil),          // 39: chalk.server.v1.ExpireTeamInviteRequest
	(*ExpireTeamInviteResponse)(nil),         // 40: chalk.server.v1.ExpireTeamInviteResponse
	(*TeamInvite)(nil),                       // 41: chalk.server.v1.TeamInvite
	(*ListTeamInvitesRequest)(nil),           // 42: chalk.server.v1.ListTeamInvitesRequest
	(*ListTeamInvitesResponse)(nil),          // 43: chalk.server.v1.ListTeamInvitesResponse
	(*ScimGroup)(nil),                        // 44: chalk.server.v1.ScimGroup
	(*ScimGroupRoleAssignment)(nil),          // 45: chalk.server.v1.ScimGroupRoleAssignment
	(*UserRoleAssignment)(nil),               // 46: chalk.server.v1.UserRoleAssignment
	(*UserPermissions)(nil),                  // 47: chalk.server.v1.UserPermissions
	(*User)(nil),                             // 48: chalk.server.v1.User
	(*EnvironmentPermissions)(nil),           // 49: chalk.server.v1.EnvironmentPermissions
	(*GetTeamPermissionsRequest)(nil),        // 50: chalk.server.v1.GetTeamPermissionsRequest
	(*GetTeamPermissionsResponse)(nil),       // 51: chalk.server.v1.GetTeamPermissionsResponse
	(*ArchiveEnvironmentRequest)(nil),        // 52: chalk.server.v1.ArchiveEnvironmentRequest
	(*ArchiveEnvironmentResponse)(nil),       // 53: chalk.server.v1.ArchiveEnvironmentResponse
	nil,                                      // 54: chalk.server.v1.Team.SpecConfigJsonEntry
	nil,                                      // 55: chalk.server.v1.UpdateEnvironmentOperation.AdditionalEnvVarsEntry
	nil,                                      // 56: chalk.server.v1.CreateServiceTokenRequest.FeatureTagToPermissionEntry
	nil,                                      // 57: chalk.server.v1.UpdateServiceTokenRequest.FeatureTagToPermissionEntry
	(*Environment)(nil),                      // 58: chalk.server.v1.Environment
	(*v1.Agent)(nil),                         // 59: chalk.auth.v1.Agent
	(*v1.DisplayAgent)(nil),                  // 60: chalk.auth.v1.DisplayAgent
	(*fieldmaskpb.FieldMask)(nil),            // 61: google.protobuf.FieldMask
	(v1.Permission)(0),                       // 62: chalk.auth.v1.Permission
	(*v1.CustomClaim)(nil),                   // 63: chalk.auth.v1.CustomClaim
	(*v1.ServiceTokenAgent)(nil),             // 64: chalk.auth.v1.ServiceTokenAgent
	(*v1.FeaturePermissions)(nil),            // 65: chalk.auth.v1.FeaturePermissions
	(*v1.DisplayServiceTokenAgent)(nil),      // 66: chalk.auth.v1.DisplayServiceTokenAgent
	(*timestamppb.Timestamp)(nil),            // 67: google.protobuf.Timestamp
	(*structpb.Value)(nil),                   // 68: google.protobuf.Value
	(v1.FeaturePermission)(0),                // 69: chalk.auth.v1.FeaturePermission
}
var file_chalk_server_v1_team_proto_depIdxs = []int32{
	58, // 0: chalk.server.v1.GetEnvResponse.environment:type_name -> chalk.server.v1.Environment
	58, // 1: chalk.server.v1.GetEnvironmentsResponse.environments:type_name -> chalk.server.v1.Environment
	59, // 2: chalk.server.v1.GetAgentResponse.agent:type_name -> chalk.auth.v1.Agent
	60, // 3: chalk.server.v1.GetDisplayAgentResponse.agent:type_name -> chalk.auth.v1.DisplayAgent
	9,  // 4: chalk.server.v1.Team.projects:type_name -> chalk.server.v1.Project
	54, // 5: chalk.server.v1.Team.spec_config_json:type_name -> chalk.server.v1.Team.SpecConfigJsonEntry
	58, // 6: chalk.server.v1.Project.environments:type_name -> chalk.server.v1.Environment
	8,  // 7: chalk.server.v1.CreateTeamResponse.team:type_name -> chalk.server.v1.Team
	9,  // 8: chalk.server.v1.CreateProjectResponse.project:type_name -> chalk.server.v1.Project
	58, // 9: chalk.server.v1.CreateEnvironmentResponse.environment:type_name -> chalk.server.v1.Environment
	55, // 10: chalk.server.v1.UpdateEnvironmentOperation.additional_env_vars:type_name -> chalk.server.v1.UpdateEnvironmentOperation.AdditionalEnvVarsEntry
	16, // 11: chalk.server.v1.UpdateEnvironmentRequest.update:type_name -> chalk.server.v1.UpdateEnvironmentOperation
	61, // 12: chalk.server.v1.UpdateEnvironmentRequest.update_mask:type_name -> google.protobuf.FieldMask
	58, // 13: chalk.server.v1.UpdateEnvironmentResponse.environment:type_name -> chalk.server.v1.Environment
	8,  // 14: chalk.server.v1.GetTeamResponse.team:type_name -> chalk.server.v1.Team
	62, // 15: chalk.server.v1.CreateServiceTokenRequest.permissions:type_name -> chalk.auth.v1.Permission
	63, // 16: chalk.server.v1.CreateServiceTokenRequest.customer_claims:type_name -> chalk.auth.v1.CustomClaim
	56, // 17: chalk.server.v1.CreateServiceTokenRequest.feature_tag_to_permission:type_name -> chalk.server.v1.CreateServiceTokenRequest.FeatureTagToPermissionEntry
	64, // 18: chalk.server.v1.CreateServiceTokenResponse.agent:type_name -> chalk.auth.v1.ServiceTokenAgent
	62, // 19: chalk.server.v1.PermissionDescription.id:type_name -> chalk.auth.v1.Permission
	62, // 20: chalk.server.v1.RoleDescription.permissions:type_name -> chalk.auth.v1.Permission
	65, // 21: chalk.server.v1.RoleDescription.feature_permissions:type_name -> chalk.auth.v1.FeaturePermissions
	25, // 22: chalk.server.v1.GetAvailablePermissionsResponse.permissions:type_name -> chalk.server.v1.PermissionDescription
	26, // 23: chalk.server.v1.GetAvailablePermissionsResponse.roles:type_name -> chalk.server.v1.RoleDescription
	62, // 24: chalk.server.v1.GetAvailablePermissionsResponse.available_service_token_permissions:type_name -> chalk.auth.v1.Permission
	65, // 25: chalk.server.v1.UpsertFeaturePermissionsRequest.permissions:type_name -> chalk.auth.v1.FeaturePermissions
	65, // 26: chalk.server.v1.UpsertFeaturePermissionsResponse.permissions:type_name -> chalk.auth.v1.FeaturePermissions
	66, // 27: chalk.server.v1.ListServiceTokensResponse.agents:type_name -> chalk.auth.v1.DisplayServiceTokenAgent
	62, // 28: chalk.server.v1.UpdateServiceTokenRequest.permissions:type_name -> chalk.auth.v1.Permission
	63, // 29: chalk.server.v1.UpdateServiceTokenRequest.customer_claims:type_name -> chalk.auth.v1.CustomClaim
	57, // 30: chalk.server.v1.UpdateServiceTokenRequest.feature_tag_to_permission:type_name -> chalk.server.v1.UpdateServiceTokenRequest.FeatureTagToPermissionEntry
	66, // 31: chalk.server.v1.UpdateServiceTokenResponse.agent:type_name -> chalk.auth.v1.DisplayServiceTokenAgent
	67, // 32: chalk.server.v1.TeamInvite.created_at:type_name -> google.protobuf.Timestamp
	41, // 33: chalk.server.v1.ListTeamInvitesResponse.invites:type_name -> chalk.server.v1.TeamInvite
	46, // 34: chalk.server.v1.UserPermissions.user_roles:type_name -> chalk.server.v1.UserRoleAssignment
	62, // 35: chalk.server.v1.UserPermissions.user_permissions:type_name -> chalk.auth.v1.Permission
	67, // 36: chalk.server.v1.User.deactivated_at:type_name -> google.protobuf.Timestamp
	45, // 37: chalk.server.v1.EnvironmentPermissions.scim_roles:type_name -> chalk.server.v1.ScimGroupRoleAssignment
	47, // 38: chalk.server.v1.EnvironmentPermissions.user_permissions:type_name -> chalk.server.v1.UserPermissions
	26, // 39: chalk.server.v1.GetTeamPermissionsResponse.roles:type_name -> chalk.server.v1.RoleDescription
	44, // 40: chalk.server.v1.GetTeamPermissionsResponse.scim_groups:type_name -> chalk.server.v1.ScimGroup
	49, // 41: chalk.server.v1.GetTeamPermissionsResponse.environment_permissions:type_name -> chalk.server.v1.EnvironmentPermissions
	48, // 42: chalk.server.v1.GetTeamPermissionsResponse.team_members:type_name -> chalk.server.v1.User
	68, // 43: chalk.server.v1.Team.SpecConfigJsonEntry.value:type_name -> google.protobuf.Value
	69, // 44: chalk.server.v1.CreateServiceTokenRequest.FeatureTagToPermissionEntry.value:type_name -> chalk.auth.v1.FeaturePermission
	69, // 45: chalk.server.v1.UpdateServiceTokenRequest.FeatureTagToPermissionEntry.value:type_name -> chalk.auth.v1.FeaturePermission
	0,  // 46: chalk.server.v1.TeamService.GetEnv:input_type -> chalk.server.v1.GetEnvRequest
	2,  // 47: chalk.server.v1.TeamService.GetEnvironments:input_type -> chalk.server.v1.GetEnvironmentsRequest
	4,  // 48: chalk.server.v1.TeamService.GetAgent:input_type -> chalk.server.v1.GetAgentRequest
	6,  // 49: chalk.server.v1.TeamService.GetDisplayAgent:input_type -> chalk.server.v1.GetDisplayAgentRequest
	19, // 50: chalk.server.v1.TeamService.GetTeam:input_type -> chalk.server.v1.GetTeamRequest
	10, // 51: chalk.server.v1.TeamService.CreateTeam:input_type -> chalk.server.v1.CreateTeamRequest
	12, // 52: chalk.server.v1.TeamService.CreateProject:input_type -> chalk.server.v1.CreateProjectRequest
	14, // 53: chalk.server.v1.TeamService.CreateEnvironment:input_type -> chalk.server.v1.CreateEnvironmentRequest
	17, // 54: chalk.server.v1.TeamService.UpdateEnvironment:input_type -> chalk.server.v1.UpdateEnvironmentRequest
	27, // 55: chalk.server.v1.TeamService.GetAvailablePermissions:input_type -> chalk.server.v1.GetAvailablePermissionsRequest
	21, // 56: chalk.server.v1.TeamService.CreateServiceToken:input_type -> chalk.server.v1.CreateServiceTokenRequest
	23, // 57: chalk.server.v1.TeamService.DeleteServiceToken:input_type -> chalk.server.v1.DeleteServiceTokenRequest
	31, // 58: chalk.server.v1.TeamService.ListServiceTokens:input_type -> chalk.server.v1.ListServiceTokensRequest
	33, // 59: chalk.server.v1.TeamService.UpdateServiceToken:input_type -> chalk.server.v1.UpdateServiceTokenRequest
	37, // 60: chalk.server.v1.TeamService.InviteTeamMember:input_type -> chalk.server.v1.InviteTeamMemberRequest
	39, // 61: chalk.server.v1.TeamService.ExpireTeamInvite:input_type -> chalk.server.v1.ExpireTeamInviteRequest
	42, // 62: chalk.server.v1.TeamService.ListTeamInvites:input_type -> chalk.server.v1.ListTeamInvitesRequest
	29, // 63: chalk.server.v1.TeamService.UpsertFeaturePermissions:input_type -> chalk.server.v1.UpsertFeaturePermissionsRequest
	35, // 64: chalk.server.v1.TeamService.UpdateScimGroupSettings:input_type -> chalk.server.v1.UpdateScimGroupSettingsRequest
	50, // 65: chalk.server.v1.TeamService.GetTeamPermissions:input_type -> chalk.server.v1.GetTeamPermissionsRequest
	52, // 66: chalk.server.v1.TeamService.ArchiveEnvironment:input_type -> chalk.server.v1.ArchiveEnvironmentRequest
	1,  // 67: chalk.server.v1.TeamService.GetEnv:output_type -> chalk.server.v1.GetEnvResponse
	3,  // 68: chalk.server.v1.TeamService.GetEnvironments:output_type -> chalk.server.v1.GetEnvironmentsResponse
	5,  // 69: chalk.server.v1.TeamService.GetAgent:output_type -> chalk.server.v1.GetAgentResponse
	7,  // 70: chalk.server.v1.TeamService.GetDisplayAgent:output_type -> chalk.server.v1.GetDisplayAgentResponse
	20, // 71: chalk.server.v1.TeamService.GetTeam:output_type -> chalk.server.v1.GetTeamResponse
	11, // 72: chalk.server.v1.TeamService.CreateTeam:output_type -> chalk.server.v1.CreateTeamResponse
	13, // 73: chalk.server.v1.TeamService.CreateProject:output_type -> chalk.server.v1.CreateProjectResponse
	15, // 74: chalk.server.v1.TeamService.CreateEnvironment:output_type -> chalk.server.v1.CreateEnvironmentResponse
	18, // 75: chalk.server.v1.TeamService.UpdateEnvironment:output_type -> chalk.server.v1.UpdateEnvironmentResponse
	28, // 76: chalk.server.v1.TeamService.GetAvailablePermissions:output_type -> chalk.server.v1.GetAvailablePermissionsResponse
	22, // 77: chalk.server.v1.TeamService.CreateServiceToken:output_type -> chalk.server.v1.CreateServiceTokenResponse
	24, // 78: chalk.server.v1.TeamService.DeleteServiceToken:output_type -> chalk.server.v1.DeleteServiceTokenResponse
	32, // 79: chalk.server.v1.TeamService.ListServiceTokens:output_type -> chalk.server.v1.ListServiceTokensResponse
	34, // 80: chalk.server.v1.TeamService.UpdateServiceToken:output_type -> chalk.server.v1.UpdateServiceTokenResponse
	38, // 81: chalk.server.v1.TeamService.InviteTeamMember:output_type -> chalk.server.v1.InviteTeamMemberResponse
	40, // 82: chalk.server.v1.TeamService.ExpireTeamInvite:output_type -> chalk.server.v1.ExpireTeamInviteResponse
	43, // 83: chalk.server.v1.TeamService.ListTeamInvites:output_type -> chalk.server.v1.ListTeamInvitesResponse
	30, // 84: chalk.server.v1.TeamService.UpsertFeaturePermissions:output_type -> chalk.server.v1.UpsertFeaturePermissionsResponse
	36, // 85: chalk.server.v1.TeamService.UpdateScimGroupSettings:output_type -> chalk.server.v1.UpdateScimGroupSettingsResponse
	51, // 86: chalk.server.v1.TeamService.GetTeamPermissions:output_type -> chalk.server.v1.GetTeamPermissionsResponse
	53, // 87: chalk.server.v1.TeamService.ArchiveEnvironment:output_type -> chalk.server.v1.ArchiveEnvironmentResponse
	67, // [67:88] is the sub-list for method output_type
	46, // [46:67] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_team_proto_init() }
func file_chalk_server_v1_team_proto_init() {
	if File_chalk_server_v1_team_proto != nil {
		return
	}
	file_chalk_server_v1_environment_proto_init()
	file_chalk_server_v1_team_proto_msgTypes[8].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[9].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[10].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[16].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[37].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[41].OneofWrappers = []any{}
	file_chalk_server_v1_team_proto_msgTypes[48].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_team_proto_rawDesc), len(file_chalk_server_v1_team_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_team_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_team_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_team_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_team_proto = out.File
	file_chalk_server_v1_team_proto_goTypes = nil
	file_chalk_server_v1_team_proto_depIdxs = nil
}
