// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/graph.proto

package serverv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/arrow/v1"
	v12 "github.com/chalk-ai/chalk-go/gen/chalk/artifacts/v1"
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	v13 "github.com/chalk-ai/chalk-go/gen/chalk/common/v1"
	v11 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureSQL struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId      string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DeploymentId       *string                `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
	Fqn                string                 `protobuf:"bytes,4,opt,name=fqn,proto3" json:"fqn,omitempty"`
	Name               string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Namespace          string                 `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	MaxStaleness       *string                `protobuf:"bytes,7,opt,name=max_staleness,json=maxStaleness,proto3,oneof" json:"max_staleness,omitempty"`
	EtlOfflineToOnline bool                   `protobuf:"varint,8,opt,name=etl_offline_to_online,json=etlOfflineToOnline,proto3" json:"etl_offline_to_online,omitempty"`
	Description        *string                `protobuf:"bytes,9,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Owner              *string                `protobuf:"bytes,10,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Tags               []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	KindEnum           string                 `protobuf:"bytes,12,opt,name=kind_enum,json=kindEnum,proto3" json:"kind_enum,omitempty"`
	Kind               string                 `protobuf:"bytes,13,opt,name=kind,proto3" json:"kind,omitempty"`
	WasReset           bool                   `protobuf:"varint,14,opt,name=was_reset,json=wasReset,proto3" json:"was_reset,omitempty"`
	InternalVersion    *int64                 `protobuf:"varint,15,opt,name=internal_version,json=internalVersion,proto3,oneof" json:"internal_version,omitempty"`
	IsSingleton        bool                   `protobuf:"varint,16,opt,name=is_singleton,json=isSingleton,proto3" json:"is_singleton,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FeatureSQL) Reset() {
	*x = FeatureSQL{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureSQL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureSQL) ProtoMessage() {}

func (x *FeatureSQL) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureSQL.ProtoReflect.Descriptor instead.
func (*FeatureSQL) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureSQL) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeatureSQL) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *FeatureSQL) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *FeatureSQL) GetFqn() string {
	if x != nil {
		return x.Fqn
	}
	return ""
}

func (x *FeatureSQL) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureSQL) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FeatureSQL) GetMaxStaleness() string {
	if x != nil && x.MaxStaleness != nil {
		return *x.MaxStaleness
	}
	return ""
}

func (x *FeatureSQL) GetEtlOfflineToOnline() bool {
	if x != nil {
		return x.EtlOfflineToOnline
	}
	return false
}

func (x *FeatureSQL) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FeatureSQL) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *FeatureSQL) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *FeatureSQL) GetKindEnum() string {
	if x != nil {
		return x.KindEnum
	}
	return ""
}

func (x *FeatureSQL) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *FeatureSQL) GetWasReset() bool {
	if x != nil {
		return x.WasReset
	}
	return false
}

func (x *FeatureSQL) GetInternalVersion() int64 {
	if x != nil && x.InternalVersion != nil {
		return *x.InternalVersion
	}
	return 0
}

func (x *FeatureSQL) GetIsSingleton() bool {
	if x != nil {
		return x.IsSingleton
	}
	return false
}

type GetFeatureSQLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []*FeatureSQL          `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeatureSQLResponse) Reset() {
	*x = GetFeatureSQLResponse{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeatureSQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureSQLResponse) ProtoMessage() {}

func (x *GetFeatureSQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureSQLResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureSQLResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{1}
}

func (x *GetFeatureSQLResponse) GetFeatures() []*FeatureSQL {
	if x != nil {
		return x.Features
	}
	return nil
}

type GetFeatureSQLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeatureSQLRequest) Reset() {
	*x = GetFeatureSQLRequest{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeatureSQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureSQLRequest) ProtoMessage() {}

func (x *GetFeatureSQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureSQLRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureSQLRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{2}
}

func (x *GetFeatureSQLRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type FeatureMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Fqn                string                 `protobuf:"bytes,1,opt,name=fqn,proto3" json:"fqn,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace          string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Description        *string                `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Owner              *string                `protobuf:"bytes,5,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Tags               []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	MaxStaleness       *string                `protobuf:"bytes,7,opt,name=max_staleness,json=maxStaleness,proto3,oneof" json:"max_staleness,omitempty"`
	EtlOfflineToOnline bool                   `protobuf:"varint,8,opt,name=etl_offline_to_online,json=etlOfflineToOnline,proto3" json:"etl_offline_to_online,omitempty"`
	PaDtype            *v1.ArrowType          `protobuf:"bytes,9,opt,name=pa_dtype,json=paDtype,proto3" json:"pa_dtype,omitempty"`
	Nullable           bool                   `protobuf:"varint,10,opt,name=nullable,proto3" json:"nullable,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FeatureMetadata) Reset() {
	*x = FeatureMetadata{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureMetadata) ProtoMessage() {}

func (x *FeatureMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureMetadata.ProtoReflect.Descriptor instead.
func (*FeatureMetadata) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{3}
}

func (x *FeatureMetadata) GetFqn() string {
	if x != nil {
		return x.Fqn
	}
	return ""
}

func (x *FeatureMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FeatureMetadata) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FeatureMetadata) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *FeatureMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *FeatureMetadata) GetMaxStaleness() string {
	if x != nil && x.MaxStaleness != nil {
		return *x.MaxStaleness
	}
	return ""
}

func (x *FeatureMetadata) GetEtlOfflineToOnline() bool {
	if x != nil {
		return x.EtlOfflineToOnline
	}
	return false
}

func (x *FeatureMetadata) GetPaDtype() *v1.ArrowType {
	if x != nil {
		return x.PaDtype
	}
	return nil
}

func (x *FeatureMetadata) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

type GetFeaturesMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []*FeatureMetadata     `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	EnvironmentId string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DeploymentId  string                 `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeaturesMetadataResponse) Reset() {
	*x = GetFeaturesMetadataResponse{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeaturesMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesMetadataResponse) ProtoMessage() {}

func (x *GetFeaturesMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetFeaturesMetadataResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{4}
}

func (x *GetFeaturesMetadataResponse) GetFeatures() []*FeatureMetadata {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GetFeaturesMetadataResponse) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *GetFeaturesMetadataResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetFeaturesMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return one metadata for each feature matching the FQNs in this list.
	// If a feature is not found, an error will be returned.
	FqnsFilter    []string `protobuf:"bytes,1,rep,name=fqns_filter,json=fqnsFilter,proto3" json:"fqns_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeaturesMetadataRequest) Reset() {
	*x = GetFeaturesMetadataRequest{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeaturesMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesMetadataRequest) ProtoMessage() {}

func (x *GetFeaturesMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetFeaturesMetadataRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{5}
}

func (x *GetFeaturesMetadataRequest) GetFqnsFilter() []string {
	if x != nil {
		return x.FqnsFilter
	}
	return nil
}

type UpdateGraphRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Use Export instead, which includes a graph + additional metadata
	//
	// Deprecated: Marked as deprecated in chalk/server/v1/graph.proto.
	Graph          *v11.Graph  `protobuf:"bytes,2,opt,name=graph,proto3" json:"graph,omitempty"`
	ChalkpyVersion string      `protobuf:"bytes,3,opt,name=chalkpy_version,json=chalkpyVersion,proto3" json:"chalkpy_version,omitempty"`
	Tag            *string     `protobuf:"bytes,4,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	Export         *v12.Export `protobuf:"bytes,5,opt,name=export,proto3" json:"export,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateGraphRequest) Reset() {
	*x = UpdateGraphRequest{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphRequest) ProtoMessage() {}

func (x *UpdateGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphRequest.ProtoReflect.Descriptor instead.
func (*UpdateGraphRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateGraphRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

// Deprecated: Marked as deprecated in chalk/server/v1/graph.proto.
func (x *UpdateGraphRequest) GetGraph() *v11.Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *UpdateGraphRequest) GetChalkpyVersion() string {
	if x != nil {
		return x.ChalkpyVersion
	}
	return ""
}

func (x *UpdateGraphRequest) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *UpdateGraphRequest) GetExport() *v12.Export {
	if x != nil {
		return x.Export
	}
	return nil
}

type UpdateGraphResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGraphResponse) Reset() {
	*x = UpdateGraphResponse{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphResponse) ProtoMessage() {}

func (x *UpdateGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphResponse.ProtoReflect.Descriptor instead.
func (*UpdateGraphResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{7}
}

type GetGraphRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGraphRequest) Reset() {
	*x = GetGraphRequest{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphRequest) ProtoMessage() {}

func (x *GetGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphRequest.ProtoReflect.Descriptor instead.
func (*GetGraphRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{8}
}

func (x *GetGraphRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetGraphResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Use Export instead, which includes a graph + additional metadata
	//
	// Deprecated: Marked as deprecated in chalk/server/v1/graph.proto.
	Graph          *v11.Graph  `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	ChalkpyVersion string      `protobuf:"bytes,2,opt,name=chalkpy_version,json=chalkpyVersion,proto3" json:"chalkpy_version,omitempty"`
	Tag            *string     `protobuf:"bytes,3,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	Export         *v12.Export `protobuf:"bytes,4,opt,name=export,proto3" json:"export,omitempty"`
	DeploymentId   string      `protobuf:"bytes,5,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGraphResponse) Reset() {
	*x = GetGraphResponse{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphResponse) ProtoMessage() {}

func (x *GetGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphResponse.ProtoReflect.Descriptor instead.
func (*GetGraphResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{9}
}

// Deprecated: Marked as deprecated in chalk/server/v1/graph.proto.
func (x *GetGraphResponse) GetGraph() *v11.Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *GetGraphResponse) GetChalkpyVersion() string {
	if x != nil {
		return x.ChalkpyVersion
	}
	return ""
}

func (x *GetGraphResponse) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *GetGraphResponse) GetExport() *v12.Export {
	if x != nil {
		return x.Export
	}
	return nil
}

func (x *GetGraphResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type PythonVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         int64                  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         int64                  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch         int64                  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PythonVersion) Reset() {
	*x = PythonVersion{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PythonVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PythonVersion) ProtoMessage() {}

func (x *PythonVersion) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PythonVersion.ProtoReflect.Descriptor instead.
func (*PythonVersion) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{10}
}

func (x *PythonVersion) GetMajor() int64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *PythonVersion) GetMinor() int64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *PythonVersion) GetPatch() int64 {
	if x != nil {
		return x.Patch
	}
	return 0
}

type GetCodegenFeaturesFromGraphRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  *string                `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
	Branch        *string                `protobuf:"bytes,2,opt,name=branch,proto3,oneof" json:"branch,omitempty"`
	PythonVersion *PythonVersion         `protobuf:"bytes,3,opt,name=python_version,json=pythonVersion,proto3,oneof" json:"python_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodegenFeaturesFromGraphRequest) Reset() {
	*x = GetCodegenFeaturesFromGraphRequest{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodegenFeaturesFromGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodegenFeaturesFromGraphRequest) ProtoMessage() {}

func (x *GetCodegenFeaturesFromGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodegenFeaturesFromGraphRequest.ProtoReflect.Descriptor instead.
func (*GetCodegenFeaturesFromGraphRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{11}
}

func (x *GetCodegenFeaturesFromGraphRequest) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *GetCodegenFeaturesFromGraphRequest) GetBranch() string {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return ""
}

func (x *GetCodegenFeaturesFromGraphRequest) GetPythonVersion() *PythonVersion {
	if x != nil {
		return x.PythonVersion
	}
	return nil
}

type GetCodegenFeaturesFromGraphResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Codegen       string                 `protobuf:"bytes,1,opt,name=codegen,proto3" json:"codegen,omitempty"`
	Errors        []*v13.ChalkError      `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodegenFeaturesFromGraphResponse) Reset() {
	*x = GetCodegenFeaturesFromGraphResponse{}
	mi := &file_chalk_server_v1_graph_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodegenFeaturesFromGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodegenFeaturesFromGraphResponse) ProtoMessage() {}

func (x *GetCodegenFeaturesFromGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_graph_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodegenFeaturesFromGraphResponse.ProtoReflect.Descriptor instead.
func (*GetCodegenFeaturesFromGraphResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_graph_proto_rawDescGZIP(), []int{12}
}

func (x *GetCodegenFeaturesFromGraphResponse) GetCodegen() string {
	if x != nil {
		return x.Codegen
	}
	return ""
}

func (x *GetCodegenFeaturesFromGraphResponse) GetErrors() []*v13.ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_chalk_server_v1_graph_proto protoreflect.FileDescriptor

const file_chalk_server_v1_graph_proto_rawDesc = "" +
	"\n" +
	"\x1bchalk/server/v1/graph.proto\x12\x0fchalk.server.v1\x1a\x1achalk/arrow/v1/arrow.proto\x1a\x1fchalk/artifacts/v1/export.proto\x1a\x1fchalk/auth/v1/permissions.proto\x1a!chalk/common/v1/chalk_error.proto\x1a\x1achalk/graph/v1/graph.proto\"\xd8\x04\n" +
	"\n" +
	"FeatureSQL\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12(\n" +
	"\rdeployment_id\x18\x03 \x01(\tH\x00R\fdeploymentId\x88\x01\x01\x12\x10\n" +
	"\x03fqn\x18\x04 \x01(\tR\x03fqn\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12(\n" +
	"\rmax_staleness\x18\a \x01(\tH\x01R\fmaxStaleness\x88\x01\x01\x121\n" +
	"\x15etl_offline_to_online\x18\b \x01(\bR\x12etlOfflineToOnline\x12%\n" +
	"\vdescription\x18\t \x01(\tH\x02R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05owner\x18\n" +
	" \x01(\tH\x03R\x05owner\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\v \x03(\tR\x04tags\x12\x1b\n" +
	"\tkind_enum\x18\f \x01(\tR\bkindEnum\x12\x12\n" +
	"\x04kind\x18\r \x01(\tR\x04kind\x12\x1b\n" +
	"\twas_reset\x18\x0e \x01(\bR\bwasReset\x12.\n" +
	"\x10internal_version\x18\x0f \x01(\x03H\x04R\x0finternalVersion\x88\x01\x01\x12!\n" +
	"\fis_singleton\x18\x10 \x01(\bR\visSingletonB\x10\n" +
	"\x0e_deployment_idB\x10\n" +
	"\x0e_max_stalenessB\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_ownerB\x13\n" +
	"\x11_internal_version\"P\n" +
	"\x15GetFeatureSQLResponse\x127\n" +
	"\bfeatures\x18\x01 \x03(\v2\x1b.chalk.server.v1.FeatureSQLR\bfeatures\";\n" +
	"\x14GetFeatureSQLRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"\x86\x03\n" +
	"\x0fFeatureMetadata\x12\x10\n" +
	"\x03fqn\x18\x01 \x01(\tR\x03fqn\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05owner\x18\x05 \x01(\tH\x01R\x05owner\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12(\n" +
	"\rmax_staleness\x18\a \x01(\tH\x02R\fmaxStaleness\x88\x01\x01\x121\n" +
	"\x15etl_offline_to_online\x18\b \x01(\bR\x12etlOfflineToOnline\x124\n" +
	"\bpa_dtype\x18\t \x01(\v2\x19.chalk.arrow.v1.ArrowTypeR\apaDtype\x12\x1a\n" +
	"\bnullable\x18\n" +
	" \x01(\bR\bnullableB\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_ownerB\x10\n" +
	"\x0e_max_staleness\"\xa7\x01\n" +
	"\x1bGetFeaturesMetadataResponse\x12<\n" +
	"\bfeatures\x18\x01 \x03(\v2 .chalk.server.v1.FeatureMetadataR\bfeatures\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12#\n" +
	"\rdeployment_id\x18\x03 \x01(\tR\fdeploymentId\"=\n" +
	"\x1aGetFeaturesMetadataRequest\x12\x1f\n" +
	"\vfqns_filter\x18\x01 \x03(\tR\n" +
	"fqnsFilter\"\xe6\x01\n" +
	"\x12UpdateGraphRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12/\n" +
	"\x05graph\x18\x02 \x01(\v2\x15.chalk.graph.v1.GraphB\x02\x18\x01R\x05graph\x12'\n" +
	"\x0fchalkpy_version\x18\x03 \x01(\tR\x0echalkpyVersion\x12\x15\n" +
	"\x03tag\x18\x04 \x01(\tH\x00R\x03tag\x88\x01\x01\x122\n" +
	"\x06export\x18\x05 \x01(\v2\x1a.chalk.artifacts.v1.ExportR\x06exportB\x06\n" +
	"\x04_tag\"\x15\n" +
	"\x13UpdateGraphResponse\"6\n" +
	"\x0fGetGraphRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"\xe4\x01\n" +
	"\x10GetGraphResponse\x12/\n" +
	"\x05graph\x18\x01 \x01(\v2\x15.chalk.graph.v1.GraphB\x02\x18\x01R\x05graph\x12'\n" +
	"\x0fchalkpy_version\x18\x02 \x01(\tR\x0echalkpyVersion\x12\x15\n" +
	"\x03tag\x18\x03 \x01(\tH\x00R\x03tag\x88\x01\x01\x122\n" +
	"\x06export\x18\x04 \x01(\v2\x1a.chalk.artifacts.v1.ExportR\x06export\x12#\n" +
	"\rdeployment_id\x18\x05 \x01(\tR\fdeploymentIdB\x06\n" +
	"\x04_tag\"Q\n" +
	"\rPythonVersion\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x03R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x03R\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\x03R\x05patch\"\xe7\x01\n" +
	"\"GetCodegenFeaturesFromGraphRequest\x12(\n" +
	"\rdeployment_id\x18\x01 \x01(\tH\x00R\fdeploymentId\x88\x01\x01\x12\x1b\n" +
	"\x06branch\x18\x02 \x01(\tH\x01R\x06branch\x88\x01\x01\x12J\n" +
	"\x0epython_version\x18\x03 \x01(\v2\x1e.chalk.server.v1.PythonVersionH\x02R\rpythonVersion\x88\x01\x01B\x10\n" +
	"\x0e_deployment_idB\t\n" +
	"\a_branchB\x11\n" +
	"\x0f_python_version\"t\n" +
	"#GetCodegenFeaturesFromGraphResponse\x12\x18\n" +
	"\acodegen\x18\x01 \x01(\tR\acodegen\x123\n" +
	"\x06errors\x18\x02 \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors2\xbb\x04\n" +
	"\fGraphService\x12f\n" +
	"\rGetFeatureSQL\x12%.chalk.server.v1.GetFeatureSQLRequest\x1a&.chalk.server.v1.GetFeatureSQLResponse\"\x06\x80}\v\x90\x02\x01\x12x\n" +
	"\x13GetFeaturesMetadata\x12+.chalk.server.v1.GetFeaturesMetadataRequest\x1a,.chalk.server.v1.GetFeaturesMetadataResponse\"\x06\x80}\v\x90\x02\x01\x12W\n" +
	"\bGetGraph\x12 .chalk.server.v1.GetGraphRequest\x1a!.chalk.server.v1.GetGraphResponse\"\x06\x80}\v\x90\x02\x01\x12]\n" +
	"\vUpdateGraph\x12#.chalk.server.v1.UpdateGraphRequest\x1a$.chalk.server.v1.UpdateGraphResponse\"\x03\x80}\v\x12\x90\x01\n" +
	"\x1bGetCodegenFeaturesFromGraph\x123.chalk.server.v1.GetCodegenFeaturesFromGraphRequest\x1a4.chalk.server.v1.GetCodegenFeaturesFromGraphResponse\"\x06\x80}\v\x90\x02\x01B\xba\x01\n" +
	"\x13com.chalk.server.v1B\n" +
	"GraphProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_graph_proto_rawDescOnce sync.Once
	file_chalk_server_v1_graph_proto_rawDescData []byte
)

func file_chalk_server_v1_graph_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_graph_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_graph_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_graph_proto_rawDesc), len(file_chalk_server_v1_graph_proto_rawDesc)))
	})
	return file_chalk_server_v1_graph_proto_rawDescData
}

var file_chalk_server_v1_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_chalk_server_v1_graph_proto_goTypes = []any{
	(*FeatureSQL)(nil),                          // 0: chalk.server.v1.FeatureSQL
	(*GetFeatureSQLResponse)(nil),               // 1: chalk.server.v1.GetFeatureSQLResponse
	(*GetFeatureSQLRequest)(nil),                // 2: chalk.server.v1.GetFeatureSQLRequest
	(*FeatureMetadata)(nil),                     // 3: chalk.server.v1.FeatureMetadata
	(*GetFeaturesMetadataResponse)(nil),         // 4: chalk.server.v1.GetFeaturesMetadataResponse
	(*GetFeaturesMetadataRequest)(nil),          // 5: chalk.server.v1.GetFeaturesMetadataRequest
	(*UpdateGraphRequest)(nil),                  // 6: chalk.server.v1.UpdateGraphRequest
	(*UpdateGraphResponse)(nil),                 // 7: chalk.server.v1.UpdateGraphResponse
	(*GetGraphRequest)(nil),                     // 8: chalk.server.v1.GetGraphRequest
	(*GetGraphResponse)(nil),                    // 9: chalk.server.v1.GetGraphResponse
	(*PythonVersion)(nil),                       // 10: chalk.server.v1.PythonVersion
	(*GetCodegenFeaturesFromGraphRequest)(nil),  // 11: chalk.server.v1.GetCodegenFeaturesFromGraphRequest
	(*GetCodegenFeaturesFromGraphResponse)(nil), // 12: chalk.server.v1.GetCodegenFeaturesFromGraphResponse
	(*v1.ArrowType)(nil),                        // 13: chalk.arrow.v1.ArrowType
	(*v11.Graph)(nil),                           // 14: chalk.graph.v1.Graph
	(*v12.Export)(nil),                          // 15: chalk.artifacts.v1.Export
	(*v13.ChalkError)(nil),                      // 16: chalk.common.v1.ChalkError
}
var file_chalk_server_v1_graph_proto_depIdxs = []int32{
	0,  // 0: chalk.server.v1.GetFeatureSQLResponse.features:type_name -> chalk.server.v1.FeatureSQL
	13, // 1: chalk.server.v1.FeatureMetadata.pa_dtype:type_name -> chalk.arrow.v1.ArrowType
	3,  // 2: chalk.server.v1.GetFeaturesMetadataResponse.features:type_name -> chalk.server.v1.FeatureMetadata
	14, // 3: chalk.server.v1.UpdateGraphRequest.graph:type_name -> chalk.graph.v1.Graph
	15, // 4: chalk.server.v1.UpdateGraphRequest.export:type_name -> chalk.artifacts.v1.Export
	14, // 5: chalk.server.v1.GetGraphResponse.graph:type_name -> chalk.graph.v1.Graph
	15, // 6: chalk.server.v1.GetGraphResponse.export:type_name -> chalk.artifacts.v1.Export
	10, // 7: chalk.server.v1.GetCodegenFeaturesFromGraphRequest.python_version:type_name -> chalk.server.v1.PythonVersion
	16, // 8: chalk.server.v1.GetCodegenFeaturesFromGraphResponse.errors:type_name -> chalk.common.v1.ChalkError
	2,  // 9: chalk.server.v1.GraphService.GetFeatureSQL:input_type -> chalk.server.v1.GetFeatureSQLRequest
	5,  // 10: chalk.server.v1.GraphService.GetFeaturesMetadata:input_type -> chalk.server.v1.GetFeaturesMetadataRequest
	8,  // 11: chalk.server.v1.GraphService.GetGraph:input_type -> chalk.server.v1.GetGraphRequest
	6,  // 12: chalk.server.v1.GraphService.UpdateGraph:input_type -> chalk.server.v1.UpdateGraphRequest
	11, // 13: chalk.server.v1.GraphService.GetCodegenFeaturesFromGraph:input_type -> chalk.server.v1.GetCodegenFeaturesFromGraphRequest
	1,  // 14: chalk.server.v1.GraphService.GetFeatureSQL:output_type -> chalk.server.v1.GetFeatureSQLResponse
	4,  // 15: chalk.server.v1.GraphService.GetFeaturesMetadata:output_type -> chalk.server.v1.GetFeaturesMetadataResponse
	9,  // 16: chalk.server.v1.GraphService.GetGraph:output_type -> chalk.server.v1.GetGraphResponse
	7,  // 17: chalk.server.v1.GraphService.UpdateGraph:output_type -> chalk.server.v1.UpdateGraphResponse
	12, // 18: chalk.server.v1.GraphService.GetCodegenFeaturesFromGraph:output_type -> chalk.server.v1.GetCodegenFeaturesFromGraphResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_graph_proto_init() }
func file_chalk_server_v1_graph_proto_init() {
	if File_chalk_server_v1_graph_proto != nil {
		return
	}
	file_chalk_server_v1_graph_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_graph_proto_msgTypes[3].OneofWrappers = []any{}
	file_chalk_server_v1_graph_proto_msgTypes[6].OneofWrappers = []any{}
	file_chalk_server_v1_graph_proto_msgTypes[9].OneofWrappers = []any{}
	file_chalk_server_v1_graph_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_graph_proto_rawDesc), len(file_chalk_server_v1_graph_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_graph_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_graph_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_graph_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_graph_proto = out.File
	file_chalk_server_v1_graph_proto_goTypes = nil
	file_chalk_server_v1_graph_proto_depIdxs = nil
}
