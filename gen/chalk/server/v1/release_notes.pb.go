// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/release_notes.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Release struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	PublishedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_release_notes_proto_rawDescGZIP(), []int{0}
}

func (x *Release) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Release) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Release) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type ListReleasesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Component to filter releases for (e.g., "all")
	Component     string `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesRequest) Reset() {
	*x = ListReleasesRequest{}
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesRequest) ProtoMessage() {}

func (x *ListReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesRequest.ProtoReflect.Descriptor instead.
func (*ListReleasesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_release_notes_proto_rawDescGZIP(), []int{1}
}

func (x *ListReleasesRequest) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

type ListReleasesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Releases      []*Release             `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesResponse) Reset() {
	*x = ListReleasesResponse{}
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResponse) ProtoMessage() {}

func (x *ListReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_release_notes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesResponse.ProtoReflect.Descriptor instead.
func (*ListReleasesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_release_notes_proto_rawDescGZIP(), []int{2}
}

func (x *ListReleasesResponse) GetReleases() []*Release {
	if x != nil {
		return x.Releases
	}
	return nil
}

var File_chalk_server_v1_release_notes_proto protoreflect.FileDescriptor

const file_chalk_server_v1_release_notes_proto_rawDesc = "" +
	"\n" +
	"#chalk/server/v1/release_notes.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"|\n" +
	"\aRelease\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\fpublished_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vpublishedAt\"3\n" +
	"\x13ListReleasesRequest\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\"L\n" +
	"\x14ListReleasesResponse\x124\n" +
	"\breleases\x18\x01 \x03(\v2\x18.chalk.server.v1.ReleaseR\breleases2z\n" +
	"\x13ReleaseNotesService\x12c\n" +
	"\fListReleases\x12$.chalk.server.v1.ListReleasesRequest\x1a%.chalk.server.v1.ListReleasesResponse\"\x06\x80}\x01\x90\x02\x01B\xc1\x01\n" +
	"\x13com.chalk.server.v1B\x11ReleaseNotesProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_release_notes_proto_rawDescOnce sync.Once
	file_chalk_server_v1_release_notes_proto_rawDescData []byte
)

func file_chalk_server_v1_release_notes_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_release_notes_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_release_notes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_release_notes_proto_rawDesc), len(file_chalk_server_v1_release_notes_proto_rawDesc)))
	})
	return file_chalk_server_v1_release_notes_proto_rawDescData
}

var file_chalk_server_v1_release_notes_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chalk_server_v1_release_notes_proto_goTypes = []any{
	(*Release)(nil),               // 0: chalk.server.v1.Release
	(*ListReleasesRequest)(nil),   // 1: chalk.server.v1.ListReleasesRequest
	(*ListReleasesResponse)(nil),  // 2: chalk.server.v1.ListReleasesResponse
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_chalk_server_v1_release_notes_proto_depIdxs = []int32{
	3, // 0: chalk.server.v1.Release.published_at:type_name -> google.protobuf.Timestamp
	0, // 1: chalk.server.v1.ListReleasesResponse.releases:type_name -> chalk.server.v1.Release
	1, // 2: chalk.server.v1.ReleaseNotesService.ListReleases:input_type -> chalk.server.v1.ListReleasesRequest
	2, // 3: chalk.server.v1.ReleaseNotesService.ListReleases:output_type -> chalk.server.v1.ListReleasesResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_release_notes_proto_init() }
func file_chalk_server_v1_release_notes_proto_init() {
	if File_chalk_server_v1_release_notes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_release_notes_proto_rawDesc), len(file_chalk_server_v1_release_notes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_release_notes_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_release_notes_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_release_notes_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_release_notes_proto = out.File
	file_chalk_server_v1_release_notes_proto_goTypes = nil
	file_chalk_server_v1_release_notes_proto_depIdxs = nil
}
