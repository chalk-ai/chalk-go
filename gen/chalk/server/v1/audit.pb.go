// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/audit.proto

package serverv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	code "google.golang.org/genproto/googleapis/rpc/code"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditLog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The agent who made the request.
	Agent *v1.Agent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	// A description of the request, taken from the service endpoint
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The service endpoint that was called
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// The time the request was made.
	At *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=at,proto3" json:"at,omitempty"`
	// The trace ID of the request, if available.
	TraceId *uint64 `protobuf:"varint,5,opt,name=trace_id,json=traceId,proto3,oneof" json:"trace_id,omitempty"`
	// The status of the request.
	Code *code.Code `protobuf:"varint,6,opt,name=code,proto3,enum=google.rpc.Code,oneof" json:"code,omitempty"`
	// The serialized request
	Request map[string]*structpb.Value `protobuf:"bytes,7,rep,name=request,proto3" json:"request,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The serialized response
	Response map[string]*structpb.Value `protobuf:"bytes,8,rep,name=response,proto3" json:"response,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The IP address of the client
	Ip *string `protobuf:"bytes,9,opt,name=ip,proto3,oneof" json:"ip,omitempty"`
	// An error message generated by the request.
	Error         *string `protobuf:"bytes,10,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	mi := &file_chalk_server_v1_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_audit_proto_rawDescGZIP(), []int{0}
}

func (x *AuditLog) GetAgent() *v1.Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *AuditLog) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *AuditLog) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AuditLog) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *AuditLog) GetTraceId() uint64 {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return 0
}

func (x *AuditLog) GetCode() code.Code {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return code.Code(0)
}

func (x *AuditLog) GetRequest() map[string]*structpb.Value {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AuditLog) GetResponse() map[string]*structpb.Value {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AuditLog) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *AuditLog) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type GetAuditLogsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StartTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	EndpointFilter []string               `protobuf:"bytes,3,rep,name=endpoint_filter,json=endpointFilter,proto3" json:"endpoint_filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAuditLogsRequest) Reset() {
	*x = GetAuditLogsRequest{}
	mi := &file_chalk_server_v1_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogsRequest) ProtoMessage() {}

func (x *GetAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_audit_proto_rawDescGZIP(), []int{1}
}

func (x *GetAuditLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetAuditLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetAuditLogsRequest) GetEndpointFilter() []string {
	if x != nil {
		return x.EndpointFilter
	}
	return nil
}

type GetAuditLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*AuditLog            `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditLogsResponse) Reset() {
	*x = GetAuditLogsResponse{}
	mi := &file_chalk_server_v1_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogsResponse) ProtoMessage() {}

func (x *GetAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_audit_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuditLogsResponse) GetLogs() []*AuditLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_chalk_server_v1_audit_proto protoreflect.FileDescriptor

const file_chalk_server_v1_audit_proto_rawDesc = "" +
	"\n" +
	"\x1bchalk/server/v1/audit.proto\x12\x0fchalk.server.v1\x1a\x19chalk/auth/v1/agent.proto\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x15google/rpc/code.proto\"\x87\x05\n" +
	"\bAuditLog\x12*\n" +
	"\x05agent\x18\x01 \x01(\v2\x14.chalk.auth.v1.AgentR\x05agent\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12*\n" +
	"\x02at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\x12\x1e\n" +
	"\btrace_id\x18\x05 \x01(\x04H\x01R\atraceId\x88\x01\x01\x12)\n" +
	"\x04code\x18\x06 \x01(\x0e2\x10.google.rpc.CodeH\x02R\x04code\x88\x01\x01\x12@\n" +
	"\arequest\x18\a \x03(\v2&.chalk.server.v1.AuditLog.RequestEntryR\arequest\x12C\n" +
	"\bresponse\x18\b \x03(\v2'.chalk.server.v1.AuditLog.ResponseEntryR\bresponse\x12\x13\n" +
	"\x02ip\x18\t \x01(\tH\x03R\x02ip\x88\x01\x01\x12\x19\n" +
	"\x05error\x18\n" +
	" \x01(\tH\x04R\x05error\x88\x01\x01\x1aR\n" +
	"\fRequestEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1aS\n" +
	"\rResponseEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_trace_idB\a\n" +
	"\x05_codeB\x05\n" +
	"\x03_ipB\b\n" +
	"\x06_error\"\xd6\x01\n" +
	"\x13GetAuditLogsRequest\x12>\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01\x12'\n" +
	"\x0fendpoint_filter\x18\x03 \x03(\tR\x0eendpointFilterB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"E\n" +
	"\x14GetAuditLogsResponse\x12-\n" +
	"\x04logs\x18\x01 \x03(\v2\x19.chalk.server.v1.AuditLogR\x04logs2p\n" +
	"\fAuditService\x12`\n" +
	"\fGetAuditLogs\x12$.chalk.server.v1.GetAuditLogsRequest\x1a%.chalk.server.v1.GetAuditLogsResponse\"\x03\x80}\x06B\xba\x01\n" +
	"\x13com.chalk.server.v1B\n" +
	"AuditProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_audit_proto_rawDescOnce sync.Once
	file_chalk_server_v1_audit_proto_rawDescData []byte
)

func file_chalk_server_v1_audit_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_audit_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_audit_proto_rawDesc), len(file_chalk_server_v1_audit_proto_rawDesc)))
	})
	return file_chalk_server_v1_audit_proto_rawDescData
}

var file_chalk_server_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chalk_server_v1_audit_proto_goTypes = []any{
	(*AuditLog)(nil),              // 0: chalk.server.v1.AuditLog
	(*GetAuditLogsRequest)(nil),   // 1: chalk.server.v1.GetAuditLogsRequest
	(*GetAuditLogsResponse)(nil),  // 2: chalk.server.v1.GetAuditLogsResponse
	nil,                           // 3: chalk.server.v1.AuditLog.RequestEntry
	nil,                           // 4: chalk.server.v1.AuditLog.ResponseEntry
	(*v1.Agent)(nil),              // 5: chalk.auth.v1.Agent
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(code.Code)(0),                // 7: google.rpc.Code
	(*structpb.Value)(nil),        // 8: google.protobuf.Value
}
var file_chalk_server_v1_audit_proto_depIdxs = []int32{
	5,  // 0: chalk.server.v1.AuditLog.agent:type_name -> chalk.auth.v1.Agent
	6,  // 1: chalk.server.v1.AuditLog.at:type_name -> google.protobuf.Timestamp
	7,  // 2: chalk.server.v1.AuditLog.code:type_name -> google.rpc.Code
	3,  // 3: chalk.server.v1.AuditLog.request:type_name -> chalk.server.v1.AuditLog.RequestEntry
	4,  // 4: chalk.server.v1.AuditLog.response:type_name -> chalk.server.v1.AuditLog.ResponseEntry
	6,  // 5: chalk.server.v1.GetAuditLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	6,  // 6: chalk.server.v1.GetAuditLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	0,  // 7: chalk.server.v1.GetAuditLogsResponse.logs:type_name -> chalk.server.v1.AuditLog
	8,  // 8: chalk.server.v1.AuditLog.RequestEntry.value:type_name -> google.protobuf.Value
	8,  // 9: chalk.server.v1.AuditLog.ResponseEntry.value:type_name -> google.protobuf.Value
	1,  // 10: chalk.server.v1.AuditService.GetAuditLogs:input_type -> chalk.server.v1.GetAuditLogsRequest
	2,  // 11: chalk.server.v1.AuditService.GetAuditLogs:output_type -> chalk.server.v1.GetAuditLogsResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_audit_proto_init() }
func file_chalk_server_v1_audit_proto_init() {
	if File_chalk_server_v1_audit_proto != nil {
		return
	}
	file_chalk_server_v1_audit_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_audit_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_audit_proto_rawDesc), len(file_chalk_server_v1_audit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_audit_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_audit_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_audit_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_audit_proto = out.File
	file_chalk_server_v1_audit_proto_goTypes = nil
	file_chalk_server_v1_audit_proto_depIdxs = nil
}
