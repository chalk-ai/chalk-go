// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/server/v1/performance_summary.proto

package serverv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardPerformanceSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	ShardId     int64  `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// This is called performance_summary in the DB,
	// but is a more comprehensive object where performance_summary is one of the fields
	PerformanceSummaryWithQueryConfig *structpb.Struct `protobuf:"bytes,3,opt,name=performance_summary_with_query_config,json=performanceSummaryWithQueryConfig,proto3" json:"performance_summary_with_query_config,omitempty"`
}

func (x *ShardPerformanceSummary) Reset() {
	*x = ShardPerformanceSummary{}
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardPerformanceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardPerformanceSummary) ProtoMessage() {}

func (x *ShardPerformanceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardPerformanceSummary.ProtoReflect.Descriptor instead.
func (*ShardPerformanceSummary) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_performance_summary_proto_rawDescGZIP(), []int{0}
}

func (x *ShardPerformanceSummary) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *ShardPerformanceSummary) GetShardId() int64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardPerformanceSummary) GetPerformanceSummaryWithQueryConfig() *structpb.Struct {
	if x != nil {
		return x.PerformanceSummaryWithQueryConfig
	}
	return nil
}

// Not directly used by any other proto, but used as page_token and next_page_token
// after bytes are base64 encoded
type ListOfflineQueryShardPerformanceSummariesPageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardIdHwm int64 `protobuf:"varint,1,opt,name=shard_id_hwm,json=shardIdHwm,proto3" json:"shard_id_hwm,omitempty"`
}

func (x *ListOfflineQueryShardPerformanceSummariesPageToken) Reset() {
	*x = ListOfflineQueryShardPerformanceSummariesPageToken{}
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfflineQueryShardPerformanceSummariesPageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfflineQueryShardPerformanceSummariesPageToken) ProtoMessage() {}

func (x *ListOfflineQueryShardPerformanceSummariesPageToken) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfflineQueryShardPerformanceSummariesPageToken.ProtoReflect.Descriptor instead.
func (*ListOfflineQueryShardPerformanceSummariesPageToken) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_performance_summary_proto_rawDescGZIP(), []int{1}
}

func (x *ListOfflineQueryShardPerformanceSummariesPageToken) GetShardIdHwm() int64 {
	if x != nil {
		return x.ShardIdHwm
	}
	return 0
}

type ListOfflineQueryShardPerformanceSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// expected to be an base64 encoded ListOfflineQueryShardPerformanceSummariesPageToken message
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) Reset() {
	*x = ListOfflineQueryShardPerformanceSummariesRequest{}
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfflineQueryShardPerformanceSummariesRequest) ProtoMessage() {}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfflineQueryShardPerformanceSummariesRequest.ProtoReflect.Descriptor instead.
func (*ListOfflineQueryShardPerformanceSummariesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_performance_summary_proto_rawDescGZIP(), []int{2}
}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListOfflineQueryShardPerformanceSummariesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOfflineQueryShardPerformanceSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerformanceSummaries []*ShardPerformanceSummary `protobuf:"bytes,1,rep,name=performance_summaries,json=performanceSummaries,proto3" json:"performance_summaries,omitempty"`
	NextPageToken        string                     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListOfflineQueryShardPerformanceSummariesResponse) Reset() {
	*x = ListOfflineQueryShardPerformanceSummariesResponse{}
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfflineQueryShardPerformanceSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfflineQueryShardPerformanceSummariesResponse) ProtoMessage() {}

func (x *ListOfflineQueryShardPerformanceSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_performance_summary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfflineQueryShardPerformanceSummariesResponse.ProtoReflect.Descriptor instead.
func (*ListOfflineQueryShardPerformanceSummariesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_performance_summary_proto_rawDescGZIP(), []int{3}
}

func (x *ListOfflineQueryShardPerformanceSummariesResponse) GetPerformanceSummaries() []*ShardPerformanceSummary {
	if x != nil {
		return x.PerformanceSummaries
	}
	return nil
}

func (x *ListOfflineQueryShardPerformanceSummariesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_chalk_server_v1_performance_summary_proto protoreflect.FileDescriptor

var file_chalk_server_v1_performance_summary_proto_rawDesc = []byte{
	0x0a, 0x29, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x25, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x21, 0x70, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x57, 0x69, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x56, 0x0a, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x5f, 0x68, 0x77, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x48, 0x77, 0x6d, 0x22, 0x8a, 0x01, 0x0a, 0x30, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x70, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x14, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0xc7, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c,
	0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a,
	0x3a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chalk_server_v1_performance_summary_proto_rawDescOnce sync.Once
	file_chalk_server_v1_performance_summary_proto_rawDescData = file_chalk_server_v1_performance_summary_proto_rawDesc
)

func file_chalk_server_v1_performance_summary_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_performance_summary_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_performance_summary_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_server_v1_performance_summary_proto_rawDescData)
	})
	return file_chalk_server_v1_performance_summary_proto_rawDescData
}

var file_chalk_server_v1_performance_summary_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chalk_server_v1_performance_summary_proto_goTypes = []any{
	(*ShardPerformanceSummary)(nil),                            // 0: chalk.server.v1.ShardPerformanceSummary
	(*ListOfflineQueryShardPerformanceSummariesPageToken)(nil), // 1: chalk.server.v1.ListOfflineQueryShardPerformanceSummariesPageToken
	(*ListOfflineQueryShardPerformanceSummariesRequest)(nil),   // 2: chalk.server.v1.ListOfflineQueryShardPerformanceSummariesRequest
	(*ListOfflineQueryShardPerformanceSummariesResponse)(nil),  // 3: chalk.server.v1.ListOfflineQueryShardPerformanceSummariesResponse
	(*structpb.Struct)(nil),                                    // 4: google.protobuf.Struct
}
var file_chalk_server_v1_performance_summary_proto_depIdxs = []int32{
	4, // 0: chalk.server.v1.ShardPerformanceSummary.performance_summary_with_query_config:type_name -> google.protobuf.Struct
	0, // 1: chalk.server.v1.ListOfflineQueryShardPerformanceSummariesResponse.performance_summaries:type_name -> chalk.server.v1.ShardPerformanceSummary
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_performance_summary_proto_init() }
func file_chalk_server_v1_performance_summary_proto_init() {
	if File_chalk_server_v1_performance_summary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_server_v1_performance_summary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_server_v1_performance_summary_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_performance_summary_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_performance_summary_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_performance_summary_proto = out.File
	file_chalk_server_v1_performance_summary_proto_rawDesc = nil
	file_chalk_server_v1_performance_summary_proto_goTypes = nil
	file_chalk_server_v1_performance_summary_proto_depIdxs = nil
}
