// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/timeserieschart.proto

package serverv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Marked as deprecated in chalk/server/v1/timeserieschart.proto.
type PointV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float64               `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PointV2) Reset() {
	*x = PointV2{}
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PointV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointV2) ProtoMessage() {}

func (x *PointV2) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointV2.ProtoReflect.Descriptor instead.
func (*PointV2) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_timeserieschart_proto_rawDescGZIP(), []int{0}
}

func (x *PointV2) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// Deprecated: Marked as deprecated in chalk/server/v1/timeserieschart.proto.
type TimeSeriesV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*PointV2             `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Units         string                 `protobuf:"bytes,3,opt,name=units,proto3" json:"units,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesV2) Reset() {
	*x = TimeSeriesV2{}
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesV2) ProtoMessage() {}

func (x *TimeSeriesV2) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesV2.ProtoReflect.Descriptor instead.
func (*TimeSeriesV2) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_timeserieschart_proto_rawDescGZIP(), []int{1}
}

func (x *TimeSeriesV2) GetPoints() []*PointV2 {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *TimeSeriesV2) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TimeSeriesV2) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

// Deprecated: Marked as deprecated in chalk/server/v1/timeserieschart.proto.
type TimeSeriesChartV2 struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Title         string                   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Series        []*TimeSeriesV2          `protobuf:"bytes,2,rep,name=series,proto3" json:"series,omitempty"`
	XSeries       []*timestamppb.Timestamp `protobuf:"bytes,3,rep,name=x_series,json=xSeries,proto3" json:"x_series,omitempty"`
	WindowPeriod  *durationpb.Duration     `protobuf:"bytes,4,opt,name=window_period,json=windowPeriod,proto3" json:"window_period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesChartV2) Reset() {
	*x = TimeSeriesChartV2{}
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesChartV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesChartV2) ProtoMessage() {}

func (x *TimeSeriesChartV2) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_timeserieschart_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesChartV2.ProtoReflect.Descriptor instead.
func (*TimeSeriesChartV2) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_timeserieschart_proto_rawDescGZIP(), []int{2}
}

func (x *TimeSeriesChartV2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimeSeriesChartV2) GetSeries() []*TimeSeriesV2 {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *TimeSeriesChartV2) GetXSeries() []*timestamppb.Timestamp {
	if x != nil {
		return x.XSeries
	}
	return nil
}

func (x *TimeSeriesChartV2) GetWindowPeriod() *durationpb.Duration {
	if x != nil {
		return x.WindowPeriod
	}
	return nil
}

var File_chalk_server_v1_timeserieschart_proto protoreflect.FileDescriptor

const file_chalk_server_v1_timeserieschart_proto_rawDesc = "" +
	"\n" +
	"%chalk/server/v1/timeserieschart.proto\x12\x0fchalk.server.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"2\n" +
	"\aPointV2\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x01H\x00R\x05value\x88\x01\x01:\x02\x18\x01B\b\n" +
	"\x06_value\"p\n" +
	"\fTimeSeriesV2\x120\n" +
	"\x06points\x18\x01 \x03(\v2\x18.chalk.server.v1.PointV2R\x06points\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x14\n" +
	"\x05units\x18\x03 \x01(\tR\x05units:\x02\x18\x01\"\xdb\x01\n" +
	"\x11TimeSeriesChartV2\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x125\n" +
	"\x06series\x18\x02 \x03(\v2\x1d.chalk.server.v1.TimeSeriesV2R\x06series\x125\n" +
	"\bx_series\x18\x03 \x03(\v2\x1a.google.protobuf.TimestampR\axSeries\x12>\n" +
	"\rwindow_period\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\fwindowPeriod:\x02\x18\x01B\xc4\x01\n" +
	"\x13com.chalk.server.v1B\x14TimeserieschartProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_timeserieschart_proto_rawDescOnce sync.Once
	file_chalk_server_v1_timeserieschart_proto_rawDescData []byte
)

func file_chalk_server_v1_timeserieschart_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_timeserieschart_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_timeserieschart_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_timeserieschart_proto_rawDesc), len(file_chalk_server_v1_timeserieschart_proto_rawDesc)))
	})
	return file_chalk_server_v1_timeserieschart_proto_rawDescData
}

var file_chalk_server_v1_timeserieschart_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chalk_server_v1_timeserieschart_proto_goTypes = []any{
	(*PointV2)(nil),               // 0: chalk.server.v1.PointV2
	(*TimeSeriesV2)(nil),          // 1: chalk.server.v1.TimeSeriesV2
	(*TimeSeriesChartV2)(nil),     // 2: chalk.server.v1.TimeSeriesChartV2
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
}
var file_chalk_server_v1_timeserieschart_proto_depIdxs = []int32{
	0, // 0: chalk.server.v1.TimeSeriesV2.points:type_name -> chalk.server.v1.PointV2
	1, // 1: chalk.server.v1.TimeSeriesChartV2.series:type_name -> chalk.server.v1.TimeSeriesV2
	3, // 2: chalk.server.v1.TimeSeriesChartV2.x_series:type_name -> google.protobuf.Timestamp
	4, // 3: chalk.server.v1.TimeSeriesChartV2.window_period:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_timeserieschart_proto_init() }
func file_chalk_server_v1_timeserieschart_proto_init() {
	if File_chalk_server_v1_timeserieschart_proto != nil {
		return
	}
	file_chalk_server_v1_timeserieschart_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_timeserieschart_proto_rawDesc), len(file_chalk_server_v1_timeserieschart_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_server_v1_timeserieschart_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_timeserieschart_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_timeserieschart_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_timeserieschart_proto = out.File
	file_chalk_server_v1_timeserieschart_proto_goTypes = nil
	file_chalk_server_v1_timeserieschart_proto_depIdxs = nil
}
