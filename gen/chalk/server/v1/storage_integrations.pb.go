// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/server/v1/storage_integrations.proto

package serverv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectStorageIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId           string            `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                                                               // Team ID for the object storage integration
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                                 // Name of the object storage integration
	Description      string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                                   // Description of the object storage integration
	Type             string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                                                                                 // Type of the object storage, e.g., "s3", "gcs"
	ConnectionString string            `protobuf:"bytes,6,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`                                                 // Connection details for the object storage
	Region           string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                                                                             // Region for the object storage
	Enabled          bool              `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                                                          // Whether the object storage integration is enabled
	Metadata         map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional metadata for the object storage integration
}

func (x *ObjectStorageIntegration) Reset() {
	*x = ObjectStorageIntegration{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectStorageIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageIntegration) ProtoMessage() {}

func (x *ObjectStorageIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStorageIntegration.ProtoReflect.Descriptor instead.
func (*ObjectStorageIntegration) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectStorageIntegration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ObjectStorageIntegration) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ObjectStorageIntegration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectStorageIntegration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ObjectStorageIntegration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ObjectStorageIntegration) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

func (x *ObjectStorageIntegration) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ObjectStorageIntegration) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ObjectStorageIntegration) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListObjectStorageIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    string `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // Team ID to filter the object storage integrations
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Number of integrations to return per page
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Token for pagination
}

func (x *ListObjectStorageIntegrationsRequest) Reset() {
	*x = ListObjectStorageIntegrationsRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListObjectStorageIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectStorageIntegrationsRequest) ProtoMessage() {}

func (x *ListObjectStorageIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectStorageIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListObjectStorageIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{1}
}

func (x *ListObjectStorageIntegrationsRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ListObjectStorageIntegrationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListObjectStorageIntegrationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListObjectStorageIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations  []*ObjectStorageIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`                          // List of object storage integrations
	NextPageToken string                      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for the next page of results
}

func (x *ListObjectStorageIntegrationsResponse) Reset() {
	*x = ListObjectStorageIntegrationsResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListObjectStorageIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectStorageIntegrationsResponse) ProtoMessage() {}

func (x *ListObjectStorageIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectStorageIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListObjectStorageIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{2}
}

func (x *ListObjectStorageIntegrationsResponse) GetIntegrations() []*ObjectStorageIntegration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ListObjectStorageIntegrationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteObjectStorageIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the object storage integration to delete
}

func (x *DeleteObjectStorageIntegrationRequest) Reset() {
	*x = DeleteObjectStorageIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteObjectStorageIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectStorageIntegrationRequest) ProtoMessage() {}

func (x *DeleteObjectStorageIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectStorageIntegrationRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectStorageIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteObjectStorageIntegrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteObjectStorageIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the deletion was successful
}

func (x *DeleteObjectStorageIntegrationResponse) Reset() {
	*x = DeleteObjectStorageIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteObjectStorageIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectStorageIntegrationResponse) ProtoMessage() {}

func (x *DeleteObjectStorageIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectStorageIntegrationResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectStorageIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteObjectStorageIntegrationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateObjectStorageIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *ObjectStorageIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateObjectStorageIntegrationRequest) Reset() {
	*x = CreateObjectStorageIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateObjectStorageIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectStorageIntegrationRequest) ProtoMessage() {}

func (x *CreateObjectStorageIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectStorageIntegrationRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectStorageIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{5}
}

func (x *CreateObjectStorageIntegrationRequest) GetIntegration() *ObjectStorageIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type CreateObjectStorageIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *ObjectStorageIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateObjectStorageIntegrationResponse) Reset() {
	*x = CreateObjectStorageIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateObjectStorageIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectStorageIntegrationResponse) ProtoMessage() {}

func (x *CreateObjectStorageIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectStorageIntegrationResponse.ProtoReflect.Descriptor instead.
func (*CreateObjectStorageIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{6}
}

func (x *CreateObjectStorageIntegrationResponse) GetIntegration() *ObjectStorageIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateObjectStorageIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *ObjectStorageIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateObjectStorageIntegrationRequest) Reset() {
	*x = UpdateObjectStorageIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectStorageIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectStorageIntegrationRequest) ProtoMessage() {}

func (x *UpdateObjectStorageIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectStorageIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectStorageIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateObjectStorageIntegrationRequest) GetIntegration() *ObjectStorageIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateObjectStorageIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *ObjectStorageIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateObjectStorageIntegrationResponse) Reset() {
	*x = UpdateObjectStorageIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectStorageIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectStorageIntegrationResponse) ProtoMessage() {}

func (x *UpdateObjectStorageIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectStorageIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateObjectStorageIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateObjectStorageIntegrationResponse) GetIntegration() *ObjectStorageIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type OfflineStoreIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId           string            `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                                                               // Team ID for the offline store integration
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                                 // Name of the offline store integration
	Description      string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                                   // Description of the offline store integration
	Type             string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                                                                                 // Type of the offline store, e.g., "bigquery", "redshift"
	ConnectionString string            `protobuf:"bytes,6,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`                                                 // Connection details for the offline store
	Region           string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                                                                             // Region for the offline store
	Enabled          bool              `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                                                          // Whether the offline store integration is enabled
	Metadata         map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional metadata for the offline store integration
}

func (x *OfflineStoreIntegration) Reset() {
	*x = OfflineStoreIntegration{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineStoreIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineStoreIntegration) ProtoMessage() {}

func (x *OfflineStoreIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineStoreIntegration.ProtoReflect.Descriptor instead.
func (*OfflineStoreIntegration) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{9}
}

func (x *OfflineStoreIntegration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OfflineStoreIntegration) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *OfflineStoreIntegration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfflineStoreIntegration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OfflineStoreIntegration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OfflineStoreIntegration) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

func (x *OfflineStoreIntegration) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *OfflineStoreIntegration) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OfflineStoreIntegration) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type OnlineStoreIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId           string            `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`                                                                               // Team ID for the online store integration
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                                 // Name of the online store integration
	Description      string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                                   // Description of the online store integration
	Type             string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                                                                                 // Type of the online store, e.g., "redis", "cassandra"
	ConnectionString string            `protobuf:"bytes,6,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`                                                 // Connection details for the online store
	Region           string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                                                                             // Region for the online store
	Enabled          bool              `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                                                          // Whether the online store integration is enabled
	Metadata         map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional metadata for the online store integration
}

func (x *OnlineStoreIntegration) Reset() {
	*x = OnlineStoreIntegration{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineStoreIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineStoreIntegration) ProtoMessage() {}

func (x *OnlineStoreIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineStoreIntegration.ProtoReflect.Descriptor instead.
func (*OnlineStoreIntegration) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{10}
}

func (x *OnlineStoreIntegration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OnlineStoreIntegration) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *OnlineStoreIntegration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnlineStoreIntegration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OnlineStoreIntegration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OnlineStoreIntegration) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

func (x *OnlineStoreIntegration) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *OnlineStoreIntegration) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OnlineStoreIntegration) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListOfflineStoreIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    string `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // Team ID to filter the offline store integrations
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Number of integrations to return per page
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Token for pagination
}

func (x *ListOfflineStoreIntegrationsRequest) Reset() {
	*x = ListOfflineStoreIntegrationsRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfflineStoreIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfflineStoreIntegrationsRequest) ProtoMessage() {}

func (x *ListOfflineStoreIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfflineStoreIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListOfflineStoreIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{11}
}

func (x *ListOfflineStoreIntegrationsRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ListOfflineStoreIntegrationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOfflineStoreIntegrationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOfflineStoreIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations  []*OfflineStoreIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`                          // List of offline store integrations
	NextPageToken string                     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for the next page of results
}

func (x *ListOfflineStoreIntegrationsResponse) Reset() {
	*x = ListOfflineStoreIntegrationsResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfflineStoreIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfflineStoreIntegrationsResponse) ProtoMessage() {}

func (x *ListOfflineStoreIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfflineStoreIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListOfflineStoreIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{12}
}

func (x *ListOfflineStoreIntegrationsResponse) GetIntegrations() []*OfflineStoreIntegration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ListOfflineStoreIntegrationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteOfflineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the offline store integration to delete
}

func (x *DeleteOfflineStoreIntegrationRequest) Reset() {
	*x = DeleteOfflineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOfflineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOfflineStoreIntegrationRequest) ProtoMessage() {}

func (x *DeleteOfflineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOfflineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*DeleteOfflineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteOfflineStoreIntegrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOfflineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the deletion was successful
}

func (x *DeleteOfflineStoreIntegrationResponse) Reset() {
	*x = DeleteOfflineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOfflineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOfflineStoreIntegrationResponse) ProtoMessage() {}

func (x *DeleteOfflineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOfflineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*DeleteOfflineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteOfflineStoreIntegrationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateOfflineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OfflineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateOfflineStoreIntegrationRequest) Reset() {
	*x = CreateOfflineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOfflineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfflineStoreIntegrationRequest) ProtoMessage() {}

func (x *CreateOfflineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfflineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*CreateOfflineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{15}
}

func (x *CreateOfflineStoreIntegrationRequest) GetIntegration() *OfflineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type CreateOfflineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OfflineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateOfflineStoreIntegrationResponse) Reset() {
	*x = CreateOfflineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOfflineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfflineStoreIntegrationResponse) ProtoMessage() {}

func (x *CreateOfflineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfflineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*CreateOfflineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{16}
}

func (x *CreateOfflineStoreIntegrationResponse) GetIntegration() *OfflineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateOfflineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OfflineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateOfflineStoreIntegrationRequest) Reset() {
	*x = UpdateOfflineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOfflineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfflineStoreIntegrationRequest) ProtoMessage() {}

func (x *UpdateOfflineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfflineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfflineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateOfflineStoreIntegrationRequest) GetIntegration() *OfflineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateOfflineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OfflineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateOfflineStoreIntegrationResponse) Reset() {
	*x = UpdateOfflineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOfflineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfflineStoreIntegrationResponse) ProtoMessage() {}

func (x *UpdateOfflineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfflineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateOfflineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateOfflineStoreIntegrationResponse) GetIntegration() *OfflineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type ListOnlineStoreIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId    string `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`          // Team ID to filter the online store integrations
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Number of integrations to return per page
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Token for pagination
}

func (x *ListOnlineStoreIntegrationsRequest) Reset() {
	*x = ListOnlineStoreIntegrationsRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOnlineStoreIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnlineStoreIntegrationsRequest) ProtoMessage() {}

func (x *ListOnlineStoreIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnlineStoreIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListOnlineStoreIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{19}
}

func (x *ListOnlineStoreIntegrationsRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ListOnlineStoreIntegrationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOnlineStoreIntegrationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOnlineStoreIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations  []*OnlineStoreIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`                          // List of online store integrations
	NextPageToken string                    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for the next page of results
}

func (x *ListOnlineStoreIntegrationsResponse) Reset() {
	*x = ListOnlineStoreIntegrationsResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOnlineStoreIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnlineStoreIntegrationsResponse) ProtoMessage() {}

func (x *ListOnlineStoreIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnlineStoreIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListOnlineStoreIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{20}
}

func (x *ListOnlineStoreIntegrationsResponse) GetIntegrations() []*OnlineStoreIntegration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ListOnlineStoreIntegrationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteOnlineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the online store integration to delete
}

func (x *DeleteOnlineStoreIntegrationRequest) Reset() {
	*x = DeleteOnlineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOnlineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOnlineStoreIntegrationRequest) ProtoMessage() {}

func (x *DeleteOnlineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOnlineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*DeleteOnlineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteOnlineStoreIntegrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOnlineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the deletion was successful
}

func (x *DeleteOnlineStoreIntegrationResponse) Reset() {
	*x = DeleteOnlineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOnlineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOnlineStoreIntegrationResponse) ProtoMessage() {}

func (x *DeleteOnlineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOnlineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*DeleteOnlineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteOnlineStoreIntegrationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateOnlineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OnlineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateOnlineStoreIntegrationRequest) Reset() {
	*x = CreateOnlineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnlineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnlineStoreIntegrationRequest) ProtoMessage() {}

func (x *CreateOnlineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnlineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*CreateOnlineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{23}
}

func (x *CreateOnlineStoreIntegrationRequest) GetIntegration() *OnlineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type CreateOnlineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OnlineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *CreateOnlineStoreIntegrationResponse) Reset() {
	*x = CreateOnlineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnlineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnlineStoreIntegrationResponse) ProtoMessage() {}

func (x *CreateOnlineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnlineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*CreateOnlineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{24}
}

func (x *CreateOnlineStoreIntegrationResponse) GetIntegration() *OnlineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateOnlineStoreIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OnlineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateOnlineStoreIntegrationRequest) Reset() {
	*x = UpdateOnlineStoreIntegrationRequest{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOnlineStoreIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineStoreIntegrationRequest) ProtoMessage() {}

func (x *UpdateOnlineStoreIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineStoreIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOnlineStoreIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateOnlineStoreIntegrationRequest) GetIntegration() *OnlineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

type UpdateOnlineStoreIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *OnlineStoreIntegration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *UpdateOnlineStoreIntegrationResponse) Reset() {
	*x = UpdateOnlineStoreIntegrationResponse{}
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOnlineStoreIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineStoreIntegrationResponse) ProtoMessage() {}

func (x *UpdateOnlineStoreIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_storage_integrations_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineStoreIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateOnlineStoreIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_storage_integrations_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateOnlineStoreIntegrationResponse) GetIntegration() *OnlineStoreIntegration {
	if x != nil {
		return x.Integration
	}
	return nil
}

var File_chalk_server_v1_storage_integrations_proto protoreflect.FileDescriptor

var file_chalk_server_v1_storage_integrations_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xfe, 0x02,
	0x0a, 0x18, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b,
	0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x25,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x25,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x74, 0x0a, 0x25, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x75, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x26,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x02, 0x0a, 0x17, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x52, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xfa, 0x02, 0x0a, 0x16, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x51, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7a, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x24,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x24, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x41, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x72, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x25, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72,
	0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x35, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x70, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x24, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a,
	0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x71, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xee, 0x04, 0x0a, 0x1f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x91, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xe1, 0x04, 0x0a, 0x1e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd4, 0x04, 0x0a, 0x1d, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8b, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc8,
	0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x43, 0x53, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_chalk_server_v1_storage_integrations_proto_rawDescOnce sync.Once
	file_chalk_server_v1_storage_integrations_proto_rawDescData = file_chalk_server_v1_storage_integrations_proto_rawDesc
)

func file_chalk_server_v1_storage_integrations_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_storage_integrations_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_storage_integrations_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_server_v1_storage_integrations_proto_rawDescData)
	})
	return file_chalk_server_v1_storage_integrations_proto_rawDescData
}

var file_chalk_server_v1_storage_integrations_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_chalk_server_v1_storage_integrations_proto_goTypes = []any{
	(*ObjectStorageIntegration)(nil),               // 0: chalk.server.v1.ObjectStorageIntegration
	(*ListObjectStorageIntegrationsRequest)(nil),   // 1: chalk.server.v1.ListObjectStorageIntegrationsRequest
	(*ListObjectStorageIntegrationsResponse)(nil),  // 2: chalk.server.v1.ListObjectStorageIntegrationsResponse
	(*DeleteObjectStorageIntegrationRequest)(nil),  // 3: chalk.server.v1.DeleteObjectStorageIntegrationRequest
	(*DeleteObjectStorageIntegrationResponse)(nil), // 4: chalk.server.v1.DeleteObjectStorageIntegrationResponse
	(*CreateObjectStorageIntegrationRequest)(nil),  // 5: chalk.server.v1.CreateObjectStorageIntegrationRequest
	(*CreateObjectStorageIntegrationResponse)(nil), // 6: chalk.server.v1.CreateObjectStorageIntegrationResponse
	(*UpdateObjectStorageIntegrationRequest)(nil),  // 7: chalk.server.v1.UpdateObjectStorageIntegrationRequest
	(*UpdateObjectStorageIntegrationResponse)(nil), // 8: chalk.server.v1.UpdateObjectStorageIntegrationResponse
	(*OfflineStoreIntegration)(nil),                // 9: chalk.server.v1.OfflineStoreIntegration
	(*OnlineStoreIntegration)(nil),                 // 10: chalk.server.v1.OnlineStoreIntegration
	(*ListOfflineStoreIntegrationsRequest)(nil),    // 11: chalk.server.v1.ListOfflineStoreIntegrationsRequest
	(*ListOfflineStoreIntegrationsResponse)(nil),   // 12: chalk.server.v1.ListOfflineStoreIntegrationsResponse
	(*DeleteOfflineStoreIntegrationRequest)(nil),   // 13: chalk.server.v1.DeleteOfflineStoreIntegrationRequest
	(*DeleteOfflineStoreIntegrationResponse)(nil),  // 14: chalk.server.v1.DeleteOfflineStoreIntegrationResponse
	(*CreateOfflineStoreIntegrationRequest)(nil),   // 15: chalk.server.v1.CreateOfflineStoreIntegrationRequest
	(*CreateOfflineStoreIntegrationResponse)(nil),  // 16: chalk.server.v1.CreateOfflineStoreIntegrationResponse
	(*UpdateOfflineStoreIntegrationRequest)(nil),   // 17: chalk.server.v1.UpdateOfflineStoreIntegrationRequest
	(*UpdateOfflineStoreIntegrationResponse)(nil),  // 18: chalk.server.v1.UpdateOfflineStoreIntegrationResponse
	(*ListOnlineStoreIntegrationsRequest)(nil),     // 19: chalk.server.v1.ListOnlineStoreIntegrationsRequest
	(*ListOnlineStoreIntegrationsResponse)(nil),    // 20: chalk.server.v1.ListOnlineStoreIntegrationsResponse
	(*DeleteOnlineStoreIntegrationRequest)(nil),    // 21: chalk.server.v1.DeleteOnlineStoreIntegrationRequest
	(*DeleteOnlineStoreIntegrationResponse)(nil),   // 22: chalk.server.v1.DeleteOnlineStoreIntegrationResponse
	(*CreateOnlineStoreIntegrationRequest)(nil),    // 23: chalk.server.v1.CreateOnlineStoreIntegrationRequest
	(*CreateOnlineStoreIntegrationResponse)(nil),   // 24: chalk.server.v1.CreateOnlineStoreIntegrationResponse
	(*UpdateOnlineStoreIntegrationRequest)(nil),    // 25: chalk.server.v1.UpdateOnlineStoreIntegrationRequest
	(*UpdateOnlineStoreIntegrationResponse)(nil),   // 26: chalk.server.v1.UpdateOnlineStoreIntegrationResponse
	nil, // 27: chalk.server.v1.ObjectStorageIntegration.MetadataEntry
	nil, // 28: chalk.server.v1.OfflineStoreIntegration.MetadataEntry
	nil, // 29: chalk.server.v1.OnlineStoreIntegration.MetadataEntry
}
var file_chalk_server_v1_storage_integrations_proto_depIdxs = []int32{
	27, // 0: chalk.server.v1.ObjectStorageIntegration.metadata:type_name -> chalk.server.v1.ObjectStorageIntegration.MetadataEntry
	0,  // 1: chalk.server.v1.ListObjectStorageIntegrationsResponse.integrations:type_name -> chalk.server.v1.ObjectStorageIntegration
	0,  // 2: chalk.server.v1.CreateObjectStorageIntegrationRequest.integration:type_name -> chalk.server.v1.ObjectStorageIntegration
	0,  // 3: chalk.server.v1.CreateObjectStorageIntegrationResponse.integration:type_name -> chalk.server.v1.ObjectStorageIntegration
	0,  // 4: chalk.server.v1.UpdateObjectStorageIntegrationRequest.integration:type_name -> chalk.server.v1.ObjectStorageIntegration
	0,  // 5: chalk.server.v1.UpdateObjectStorageIntegrationResponse.integration:type_name -> chalk.server.v1.ObjectStorageIntegration
	28, // 6: chalk.server.v1.OfflineStoreIntegration.metadata:type_name -> chalk.server.v1.OfflineStoreIntegration.MetadataEntry
	29, // 7: chalk.server.v1.OnlineStoreIntegration.metadata:type_name -> chalk.server.v1.OnlineStoreIntegration.MetadataEntry
	9,  // 8: chalk.server.v1.ListOfflineStoreIntegrationsResponse.integrations:type_name -> chalk.server.v1.OfflineStoreIntegration
	9,  // 9: chalk.server.v1.CreateOfflineStoreIntegrationRequest.integration:type_name -> chalk.server.v1.OfflineStoreIntegration
	9,  // 10: chalk.server.v1.CreateOfflineStoreIntegrationResponse.integration:type_name -> chalk.server.v1.OfflineStoreIntegration
	9,  // 11: chalk.server.v1.UpdateOfflineStoreIntegrationRequest.integration:type_name -> chalk.server.v1.OfflineStoreIntegration
	9,  // 12: chalk.server.v1.UpdateOfflineStoreIntegrationResponse.integration:type_name -> chalk.server.v1.OfflineStoreIntegration
	10, // 13: chalk.server.v1.ListOnlineStoreIntegrationsResponse.integrations:type_name -> chalk.server.v1.OnlineStoreIntegration
	10, // 14: chalk.server.v1.CreateOnlineStoreIntegrationRequest.integration:type_name -> chalk.server.v1.OnlineStoreIntegration
	10, // 15: chalk.server.v1.CreateOnlineStoreIntegrationResponse.integration:type_name -> chalk.server.v1.OnlineStoreIntegration
	10, // 16: chalk.server.v1.UpdateOnlineStoreIntegrationRequest.integration:type_name -> chalk.server.v1.OnlineStoreIntegration
	10, // 17: chalk.server.v1.UpdateOnlineStoreIntegrationResponse.integration:type_name -> chalk.server.v1.OnlineStoreIntegration
	5,  // 18: chalk.server.v1.ObjectStorageIntegrationService.CreateObjectStorageIntegration:input_type -> chalk.server.v1.CreateObjectStorageIntegrationRequest
	1,  // 19: chalk.server.v1.ObjectStorageIntegrationService.ListObjectStorageIntegrations:input_type -> chalk.server.v1.ListObjectStorageIntegrationsRequest
	7,  // 20: chalk.server.v1.ObjectStorageIntegrationService.UpdateObjectStorageIntegration:input_type -> chalk.server.v1.UpdateObjectStorageIntegrationRequest
	3,  // 21: chalk.server.v1.ObjectStorageIntegrationService.DeleteObjectStorageIntegration:input_type -> chalk.server.v1.DeleteObjectStorageIntegrationRequest
	15, // 22: chalk.server.v1.OfflineStoreIntegrationService.CreateOfflineStoreIntegration:input_type -> chalk.server.v1.CreateOfflineStoreIntegrationRequest
	11, // 23: chalk.server.v1.OfflineStoreIntegrationService.ListOfflineStoreIntegrations:input_type -> chalk.server.v1.ListOfflineStoreIntegrationsRequest
	17, // 24: chalk.server.v1.OfflineStoreIntegrationService.UpdateOfflineStoreIntegration:input_type -> chalk.server.v1.UpdateOfflineStoreIntegrationRequest
	13, // 25: chalk.server.v1.OfflineStoreIntegrationService.DeleteOfflineStoreIntegration:input_type -> chalk.server.v1.DeleteOfflineStoreIntegrationRequest
	23, // 26: chalk.server.v1.OnlineStoreIntegrationService.CreateOnlineStoreIntegration:input_type -> chalk.server.v1.CreateOnlineStoreIntegrationRequest
	19, // 27: chalk.server.v1.OnlineStoreIntegrationService.ListOnlineStoreIntegrations:input_type -> chalk.server.v1.ListOnlineStoreIntegrationsRequest
	25, // 28: chalk.server.v1.OnlineStoreIntegrationService.UpdateOnlineStoreIntegration:input_type -> chalk.server.v1.UpdateOnlineStoreIntegrationRequest
	21, // 29: chalk.server.v1.OnlineStoreIntegrationService.DeleteOnlineStoreIntegration:input_type -> chalk.server.v1.DeleteOnlineStoreIntegrationRequest
	6,  // 30: chalk.server.v1.ObjectStorageIntegrationService.CreateObjectStorageIntegration:output_type -> chalk.server.v1.CreateObjectStorageIntegrationResponse
	2,  // 31: chalk.server.v1.ObjectStorageIntegrationService.ListObjectStorageIntegrations:output_type -> chalk.server.v1.ListObjectStorageIntegrationsResponse
	8,  // 32: chalk.server.v1.ObjectStorageIntegrationService.UpdateObjectStorageIntegration:output_type -> chalk.server.v1.UpdateObjectStorageIntegrationResponse
	4,  // 33: chalk.server.v1.ObjectStorageIntegrationService.DeleteObjectStorageIntegration:output_type -> chalk.server.v1.DeleteObjectStorageIntegrationResponse
	16, // 34: chalk.server.v1.OfflineStoreIntegrationService.CreateOfflineStoreIntegration:output_type -> chalk.server.v1.CreateOfflineStoreIntegrationResponse
	12, // 35: chalk.server.v1.OfflineStoreIntegrationService.ListOfflineStoreIntegrations:output_type -> chalk.server.v1.ListOfflineStoreIntegrationsResponse
	18, // 36: chalk.server.v1.OfflineStoreIntegrationService.UpdateOfflineStoreIntegration:output_type -> chalk.server.v1.UpdateOfflineStoreIntegrationResponse
	14, // 37: chalk.server.v1.OfflineStoreIntegrationService.DeleteOfflineStoreIntegration:output_type -> chalk.server.v1.DeleteOfflineStoreIntegrationResponse
	24, // 38: chalk.server.v1.OnlineStoreIntegrationService.CreateOnlineStoreIntegration:output_type -> chalk.server.v1.CreateOnlineStoreIntegrationResponse
	20, // 39: chalk.server.v1.OnlineStoreIntegrationService.ListOnlineStoreIntegrations:output_type -> chalk.server.v1.ListOnlineStoreIntegrationsResponse
	26, // 40: chalk.server.v1.OnlineStoreIntegrationService.UpdateOnlineStoreIntegration:output_type -> chalk.server.v1.UpdateOnlineStoreIntegrationResponse
	22, // 41: chalk.server.v1.OnlineStoreIntegrationService.DeleteOnlineStoreIntegration:output_type -> chalk.server.v1.DeleteOnlineStoreIntegrationResponse
	30, // [30:42] is the sub-list for method output_type
	18, // [18:30] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_storage_integrations_proto_init() }
func file_chalk_server_v1_storage_integrations_proto_init() {
	if File_chalk_server_v1_storage_integrations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_server_v1_storage_integrations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_chalk_server_v1_storage_integrations_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_storage_integrations_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_storage_integrations_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_storage_integrations_proto = out.File
	file_chalk_server_v1_storage_integrations_proto_rawDesc = nil
	file_chalk_server_v1_storage_integrations_proto_goTypes = nil
	file_chalk_server_v1_storage_integrations_proto_depIdxs = nil
}
