// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/topicpush.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduledJob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Schedule      string                 `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Topic         *Topic                 `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Environment   *string                `protobuf:"bytes,7,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledJob) Reset() {
	*x = ScheduledJob{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledJob) ProtoMessage() {}

func (x *ScheduledJob) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledJob.ProtoReflect.Descriptor instead.
func (*ScheduledJob) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduledJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduledJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScheduledJob) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *ScheduledJob) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *ScheduledJob) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ScheduledJob) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ScheduledJob) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *ScheduledJob) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Schedule      string                 `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Topic         *Topic                 `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Environment   *string                `protobuf:"bytes,7,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobRequest) Reset() {
	*x = UpdateJobRequest{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobRequest) ProtoMessage() {}

func (x *UpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateJobRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *UpdateJobRequest) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *UpdateJobRequest) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *UpdateJobRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UpdateJobRequest) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *UpdateJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *ScheduledJob          `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobResponse) Reset() {
	*x = UpdateJobResponse{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobResponse) ProtoMessage() {}

func (x *UpdateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateJobResponse) GetJob() *ScheduledJob {
	if x != nil {
		return x.Job
	}
	return nil
}

type ListJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{3}
}

type ListJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*ScheduledJob        `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{4}
}

func (x *ListJobsResponse) GetJobs() []*ScheduledJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type CreateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload       string                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Schedule      string                 `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Topic         *Topic                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Environment   *string                `protobuf:"bytes,7,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{5}
}

func (x *CreateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *CreateJobRequest) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *CreateJobRequest) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CreateJobRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateJobRequest) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *CreateJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *ScheduledJob          `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobResponse) Reset() {
	*x = CreateJobResponse{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobResponse) ProtoMessage() {}

func (x *CreateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobResponse.ProtoReflect.Descriptor instead.
func (*CreateJobResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{6}
}

func (x *CreateJobResponse) GetJob() *ScheduledJob {
	if x != nil {
		return x.Job
	}
	return nil
}

type DeleteJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobResponse) Reset() {
	*x = DeleteJobResponse{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResponse) ProtoMessage() {}

func (x *DeleteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{8}
}

type GetJobByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobByNameRequest) Reset() {
	*x = GetJobByNameRequest{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByNameRequest) ProtoMessage() {}

func (x *GetJobByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByNameRequest.ProtoReflect.Descriptor instead.
func (*GetJobByNameRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{9}
}

func (x *GetJobByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetJobByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *ScheduledJob          `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobByNameResponse) Reset() {
	*x = GetJobByNameResponse{}
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByNameResponse) ProtoMessage() {}

func (x *GetJobByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_topicpush_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByNameResponse.ProtoReflect.Descriptor instead.
func (*GetJobByNameResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_topicpush_proto_rawDescGZIP(), []int{10}
}

func (x *GetJobByNameResponse) GetJob() *ScheduledJob {
	if x != nil {
		return x.Job
	}
	return nil
}

var File_chalk_server_v1_topicpush_proto protoreflect.FileDescriptor

const file_chalk_server_v1_topicpush_proto_rawDesc = "" +
	"\n" +
	"\x1fchalk/server/v1/topicpush.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1bchalk/server/v1/topic.proto\"\xef\x02\n" +
	"\fScheduledJob\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12\x1a\n" +
	"\bschedule\x18\x04 \x01(\tR\bschedule\x12,\n" +
	"\x05topic\x18\x05 \x01(\v2\x16.chalk.server.v1.TopicR\x05topic\x12M\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2-.chalk.server.v1.ScheduledJob.AttributesEntryR\n" +
	"attributes\x12%\n" +
	"\venvironment\x18\a \x01(\tH\x00R\venvironment\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_environment\"\xf7\x02\n" +
	"\x10UpdateJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12\x1a\n" +
	"\bschedule\x18\x04 \x01(\tR\bschedule\x12,\n" +
	"\x05topic\x18\x05 \x01(\v2\x16.chalk.server.v1.TopicR\x05topic\x12Q\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v21.chalk.server.v1.UpdateJobRequest.AttributesEntryR\n" +
	"attributes\x12%\n" +
	"\venvironment\x18\a \x01(\tH\x00R\venvironment\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_environment\"D\n" +
	"\x11UpdateJobResponse\x12/\n" +
	"\x03job\x18\x01 \x01(\v2\x1d.chalk.server.v1.ScheduledJobR\x03job\"\x11\n" +
	"\x0fListJobsRequest\"E\n" +
	"\x10ListJobsResponse\x121\n" +
	"\x04jobs\x18\x01 \x03(\v2\x1d.chalk.server.v1.ScheduledJobR\x04jobs\"\xe7\x02\n" +
	"\x10CreateJobRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\apayload\x18\x02 \x01(\tR\apayload\x12\x1a\n" +
	"\bschedule\x18\x03 \x01(\tR\bschedule\x12,\n" +
	"\x05topic\x18\x04 \x01(\v2\x16.chalk.server.v1.TopicR\x05topic\x12Q\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v21.chalk.server.v1.CreateJobRequest.AttributesEntryR\n" +
	"attributes\x12%\n" +
	"\venvironment\x18\a \x01(\tH\x00R\venvironment\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_environment\"D\n" +
	"\x11CreateJobResponse\x12/\n" +
	"\x03job\x18\x01 \x01(\v2\x1d.chalk.server.v1.ScheduledJobR\x03job\"\"\n" +
	"\x10DeleteJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x13\n" +
	"\x11DeleteJobResponse\")\n" +
	"\x13GetJobByNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"G\n" +
	"\x14GetJobByNameResponse\x12/\n" +
	"\x03job\x18\x01 \x01(\v2\x1d.chalk.server.v1.ScheduledJobR\x03job2\xde\x03\n" +
	"\x10TopicPushService\x12W\n" +
	"\bListJobs\x12 .chalk.server.v1.ListJobsRequest\x1a!.chalk.server.v1.ListJobsResponse\"\x06\x80}\x1b\x90\x02\x01\x12W\n" +
	"\tCreateJob\x12!.chalk.server.v1.CreateJobRequest\x1a\".chalk.server.v1.CreateJobResponse\"\x03\x80}\x1b\x12Z\n" +
	"\tUpdateJob\x12!.chalk.server.v1.UpdateJobRequest\x1a\".chalk.server.v1.UpdateJobResponse\"\x06\x80}\x1b\x90\x02\x02\x12W\n" +
	"\tDeleteJob\x12!.chalk.server.v1.DeleteJobRequest\x1a\".chalk.server.v1.DeleteJobResponse\"\x03\x80}\x1b\x12c\n" +
	"\fGetJobByName\x12$.chalk.server.v1.GetJobByNameRequest\x1a%.chalk.server.v1.GetJobByNameResponse\"\x06\x80}\x1b\x90\x02\x02B\xbe\x01\n" +
	"\x13com.chalk.server.v1B\x0eTopicpushProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_topicpush_proto_rawDescOnce sync.Once
	file_chalk_server_v1_topicpush_proto_rawDescData []byte
)

func file_chalk_server_v1_topicpush_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_topicpush_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_topicpush_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_topicpush_proto_rawDesc), len(file_chalk_server_v1_topicpush_proto_rawDesc)))
	})
	return file_chalk_server_v1_topicpush_proto_rawDescData
}

var file_chalk_server_v1_topicpush_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_chalk_server_v1_topicpush_proto_goTypes = []any{
	(*ScheduledJob)(nil),         // 0: chalk.server.v1.ScheduledJob
	(*UpdateJobRequest)(nil),     // 1: chalk.server.v1.UpdateJobRequest
	(*UpdateJobResponse)(nil),    // 2: chalk.server.v1.UpdateJobResponse
	(*ListJobsRequest)(nil),      // 3: chalk.server.v1.ListJobsRequest
	(*ListJobsResponse)(nil),     // 4: chalk.server.v1.ListJobsResponse
	(*CreateJobRequest)(nil),     // 5: chalk.server.v1.CreateJobRequest
	(*CreateJobResponse)(nil),    // 6: chalk.server.v1.CreateJobResponse
	(*DeleteJobRequest)(nil),     // 7: chalk.server.v1.DeleteJobRequest
	(*DeleteJobResponse)(nil),    // 8: chalk.server.v1.DeleteJobResponse
	(*GetJobByNameRequest)(nil),  // 9: chalk.server.v1.GetJobByNameRequest
	(*GetJobByNameResponse)(nil), // 10: chalk.server.v1.GetJobByNameResponse
	nil,                          // 11: chalk.server.v1.ScheduledJob.AttributesEntry
	nil,                          // 12: chalk.server.v1.UpdateJobRequest.AttributesEntry
	nil,                          // 13: chalk.server.v1.CreateJobRequest.AttributesEntry
	(*Topic)(nil),                // 14: chalk.server.v1.Topic
}
var file_chalk_server_v1_topicpush_proto_depIdxs = []int32{
	14, // 0: chalk.server.v1.ScheduledJob.topic:type_name -> chalk.server.v1.Topic
	11, // 1: chalk.server.v1.ScheduledJob.attributes:type_name -> chalk.server.v1.ScheduledJob.AttributesEntry
	14, // 2: chalk.server.v1.UpdateJobRequest.topic:type_name -> chalk.server.v1.Topic
	12, // 3: chalk.server.v1.UpdateJobRequest.attributes:type_name -> chalk.server.v1.UpdateJobRequest.AttributesEntry
	0,  // 4: chalk.server.v1.UpdateJobResponse.job:type_name -> chalk.server.v1.ScheduledJob
	0,  // 5: chalk.server.v1.ListJobsResponse.jobs:type_name -> chalk.server.v1.ScheduledJob
	14, // 6: chalk.server.v1.CreateJobRequest.topic:type_name -> chalk.server.v1.Topic
	13, // 7: chalk.server.v1.CreateJobRequest.attributes:type_name -> chalk.server.v1.CreateJobRequest.AttributesEntry
	0,  // 8: chalk.server.v1.CreateJobResponse.job:type_name -> chalk.server.v1.ScheduledJob
	0,  // 9: chalk.server.v1.GetJobByNameResponse.job:type_name -> chalk.server.v1.ScheduledJob
	3,  // 10: chalk.server.v1.TopicPushService.ListJobs:input_type -> chalk.server.v1.ListJobsRequest
	5,  // 11: chalk.server.v1.TopicPushService.CreateJob:input_type -> chalk.server.v1.CreateJobRequest
	1,  // 12: chalk.server.v1.TopicPushService.UpdateJob:input_type -> chalk.server.v1.UpdateJobRequest
	7,  // 13: chalk.server.v1.TopicPushService.DeleteJob:input_type -> chalk.server.v1.DeleteJobRequest
	9,  // 14: chalk.server.v1.TopicPushService.GetJobByName:input_type -> chalk.server.v1.GetJobByNameRequest
	4,  // 15: chalk.server.v1.TopicPushService.ListJobs:output_type -> chalk.server.v1.ListJobsResponse
	6,  // 16: chalk.server.v1.TopicPushService.CreateJob:output_type -> chalk.server.v1.CreateJobResponse
	2,  // 17: chalk.server.v1.TopicPushService.UpdateJob:output_type -> chalk.server.v1.UpdateJobResponse
	8,  // 18: chalk.server.v1.TopicPushService.DeleteJob:output_type -> chalk.server.v1.DeleteJobResponse
	10, // 19: chalk.server.v1.TopicPushService.GetJobByName:output_type -> chalk.server.v1.GetJobByNameResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_topicpush_proto_init() }
func file_chalk_server_v1_topicpush_proto_init() {
	if File_chalk_server_v1_topicpush_proto != nil {
		return
	}
	file_chalk_server_v1_topic_proto_init()
	file_chalk_server_v1_topicpush_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_topicpush_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_server_v1_topicpush_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_topicpush_proto_rawDesc), len(file_chalk_server_v1_topicpush_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_topicpush_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_topicpush_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_topicpush_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_topicpush_proto = out.File
	file_chalk_server_v1_topicpush_proto_goTypes = nil
	file_chalk_server_v1_topicpush_proto_depIdxs = nil
}
