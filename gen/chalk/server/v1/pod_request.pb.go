// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/pod_request.proto

package serverv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/chart/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PodRequestGrouping int32

const (
	PodRequestGrouping_POD_REQUEST_GROUPING_UNSPECIFIED PodRequestGrouping = 0
	PodRequestGrouping_POD_REQUEST_GROUPING_NAMESPACE   PodRequestGrouping = 1
	PodRequestGrouping_POD_REQUEST_GROUPING_CLUSTER     PodRequestGrouping = 2
	PodRequestGrouping_POD_REQUEST_GROUPING_ENVIRONMENT PodRequestGrouping = 3
	PodRequestGrouping_POD_REQUEST_GROUPING_SERVICE     PodRequestGrouping = 4
)

// Enum value maps for PodRequestGrouping.
var (
	PodRequestGrouping_name = map[int32]string{
		0: "POD_REQUEST_GROUPING_UNSPECIFIED",
		1: "POD_REQUEST_GROUPING_NAMESPACE",
		2: "POD_REQUEST_GROUPING_CLUSTER",
		3: "POD_REQUEST_GROUPING_ENVIRONMENT",
		4: "POD_REQUEST_GROUPING_SERVICE",
	}
	PodRequestGrouping_value = map[string]int32{
		"POD_REQUEST_GROUPING_UNSPECIFIED": 0,
		"POD_REQUEST_GROUPING_NAMESPACE":   1,
		"POD_REQUEST_GROUPING_CLUSTER":     2,
		"POD_REQUEST_GROUPING_ENVIRONMENT": 3,
		"POD_REQUEST_GROUPING_SERVICE":     4,
	}
)

func (x PodRequestGrouping) Enum() *PodRequestGrouping {
	p := new(PodRequestGrouping)
	*p = x
	return p
}

func (x PodRequestGrouping) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PodRequestGrouping) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_pod_request_proto_enumTypes[0].Descriptor()
}

func (PodRequestGrouping) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_pod_request_proto_enumTypes[0]
}

func (x PodRequestGrouping) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PodRequestGrouping.Descriptor instead.
func (PodRequestGrouping) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_pod_request_proto_rawDescGZIP(), []int{0}
}

type PodRequestResourceType int32

const (
	PodRequestResourceType_POD_REQUEST_RESOURCE_TYPE_UNSPECIFIED       PodRequestResourceType = 0
	PodRequestResourceType_POD_REQUEST_RESOURCE_TYPE_CPU               PodRequestResourceType = 1
	PodRequestResourceType_POD_REQUEST_RESOURCE_TYPE_MEMORY            PodRequestResourceType = 2
	PodRequestResourceType_POD_REQUEST_RESOURCE_TYPE_EPHEMERAL_STORAGE PodRequestResourceType = 3
)

// Enum value maps for PodRequestResourceType.
var (
	PodRequestResourceType_name = map[int32]string{
		0: "POD_REQUEST_RESOURCE_TYPE_UNSPECIFIED",
		1: "POD_REQUEST_RESOURCE_TYPE_CPU",
		2: "POD_REQUEST_RESOURCE_TYPE_MEMORY",
		3: "POD_REQUEST_RESOURCE_TYPE_EPHEMERAL_STORAGE",
	}
	PodRequestResourceType_value = map[string]int32{
		"POD_REQUEST_RESOURCE_TYPE_UNSPECIFIED":       0,
		"POD_REQUEST_RESOURCE_TYPE_CPU":               1,
		"POD_REQUEST_RESOURCE_TYPE_MEMORY":            2,
		"POD_REQUEST_RESOURCE_TYPE_EPHEMERAL_STORAGE": 3,
	}
)

func (x PodRequestResourceType) Enum() *PodRequestResourceType {
	p := new(PodRequestResourceType)
	*p = x
	return p
}

func (x PodRequestResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PodRequestResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_pod_request_proto_enumTypes[1].Descriptor()
}

func (PodRequestResourceType) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_pod_request_proto_enumTypes[1]
}

func (x PodRequestResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PodRequestResourceType.Descriptor instead.
func (PodRequestResourceType) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_pod_request_proto_rawDescGZIP(), []int{1}
}

type GetPodRequestChartsRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	StartTimestampInclusive *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_timestamp_inclusive,json=startTimestampInclusive,proto3" json:"start_timestamp_inclusive,omitempty"`
	// If not provided, will assume current time is the ending time
	EndTimestampExclusive *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_timestamp_exclusive,json=endTimestampExclusive,proto3,oneof" json:"end_timestamp_exclusive,omitempty"`
	// The bucket width to use. Minimum 1 hour in current implementation.
	WindowPeriod *durationpb.Duration `protobuf:"bytes,3,opt,name=window_period,json=windowPeriod,proto3" json:"window_period,omitempty"`
	// If set, return one series per group member (one series per environment, for example)
	Grouping *PodRequestGrouping `protobuf:"varint,4,opt,name=grouping,proto3,enum=chalk.server.v1.PodRequestGrouping,oneof" json:"grouping,omitempty"`
	// The types of resources to fetch. If empty, fetches all types of resources
	ResourceTypes []PodRequestResourceType `protobuf:"varint,5,rep,packed,name=resource_types,json=resourceTypes,proto3,enum=chalk.server.v1.PodRequestResourceType" json:"resource_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPodRequestChartsRequest) Reset() {
	*x = GetPodRequestChartsRequest{}
	mi := &file_chalk_server_v1_pod_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPodRequestChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodRequestChartsRequest) ProtoMessage() {}

func (x *GetPodRequestChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_pod_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodRequestChartsRequest.ProtoReflect.Descriptor instead.
func (*GetPodRequestChartsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_pod_request_proto_rawDescGZIP(), []int{0}
}

func (x *GetPodRequestChartsRequest) GetStartTimestampInclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestampInclusive
	}
	return nil
}

func (x *GetPodRequestChartsRequest) GetEndTimestampExclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestampExclusive
	}
	return nil
}

func (x *GetPodRequestChartsRequest) GetWindowPeriod() *durationpb.Duration {
	if x != nil {
		return x.WindowPeriod
	}
	return nil
}

func (x *GetPodRequestChartsRequest) GetGrouping() PodRequestGrouping {
	if x != nil && x.Grouping != nil {
		return *x.Grouping
	}
	return PodRequestGrouping_POD_REQUEST_GROUPING_UNSPECIFIED
}

func (x *GetPodRequestChartsRequest) GetResourceTypes() []PodRequestResourceType {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

type GetPodRequestChartsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return one chart per resource type, as it does not make sense to graph different resource types on the
	// same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
	Charts        []*v1.DenseTimeSeriesChart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPodRequestChartsResponse) Reset() {
	*x = GetPodRequestChartsResponse{}
	mi := &file_chalk_server_v1_pod_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPodRequestChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodRequestChartsResponse) ProtoMessage() {}

func (x *GetPodRequestChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_pod_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodRequestChartsResponse.ProtoReflect.Descriptor instead.
func (*GetPodRequestChartsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_pod_request_proto_rawDescGZIP(), []int{1}
}

func (x *GetPodRequestChartsResponse) GetCharts() []*v1.DenseTimeSeriesChart {
	if x != nil {
		return x.Charts
	}
	return nil
}

var File_chalk_server_v1_pod_request_proto protoreflect.FileDescriptor

const file_chalk_server_v1_pod_request_proto_rawDesc = "" +
	"\n" +
	"!chalk/server/v1/pod_request.proto\x12\x0fchalk.server.v1\x1a)chalk/chart/v1/densetimeserieschart.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcc\x03\n" +
	"\x1aGetPodRequestChartsRequest\x12V\n" +
	"\x19start_timestamp_inclusive\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x17startTimestampInclusive\x12W\n" +
	"\x17end_timestamp_exclusive\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x15endTimestampExclusive\x88\x01\x01\x12>\n" +
	"\rwindow_period\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\fwindowPeriod\x12D\n" +
	"\bgrouping\x18\x04 \x01(\x0e2#.chalk.server.v1.PodRequestGroupingH\x01R\bgrouping\x88\x01\x01\x12N\n" +
	"\x0eresource_types\x18\x05 \x03(\x0e2'.chalk.server.v1.PodRequestResourceTypeR\rresourceTypesB\x1a\n" +
	"\x18_end_timestamp_exclusiveB\v\n" +
	"\t_grouping\"[\n" +
	"\x1bGetPodRequestChartsResponse\x12<\n" +
	"\x06charts\x18\x01 \x03(\v2$.chalk.chart.v1.DenseTimeSeriesChartR\x06charts*\xc8\x01\n" +
	"\x12PodRequestGrouping\x12$\n" +
	" POD_REQUEST_GROUPING_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1ePOD_REQUEST_GROUPING_NAMESPACE\x10\x01\x12 \n" +
	"\x1cPOD_REQUEST_GROUPING_CLUSTER\x10\x02\x12$\n" +
	" POD_REQUEST_GROUPING_ENVIRONMENT\x10\x03\x12 \n" +
	"\x1cPOD_REQUEST_GROUPING_SERVICE\x10\x04*\xbd\x01\n" +
	"\x16PodRequestResourceType\x12)\n" +
	"%POD_REQUEST_RESOURCE_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dPOD_REQUEST_RESOURCE_TYPE_CPU\x10\x01\x12$\n" +
	" POD_REQUEST_RESOURCE_TYPE_MEMORY\x10\x02\x12/\n" +
	"+POD_REQUEST_RESOURCE_TYPE_EPHEMERAL_STORAGE\x10\x03B\xbf\x01\n" +
	"\x13com.chalk.server.v1B\x0fPodRequestProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_pod_request_proto_rawDescOnce sync.Once
	file_chalk_server_v1_pod_request_proto_rawDescData []byte
)

func file_chalk_server_v1_pod_request_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_pod_request_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_pod_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_pod_request_proto_rawDesc), len(file_chalk_server_v1_pod_request_proto_rawDesc)))
	})
	return file_chalk_server_v1_pod_request_proto_rawDescData
}

var file_chalk_server_v1_pod_request_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chalk_server_v1_pod_request_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_server_v1_pod_request_proto_goTypes = []any{
	(PodRequestGrouping)(0),             // 0: chalk.server.v1.PodRequestGrouping
	(PodRequestResourceType)(0),         // 1: chalk.server.v1.PodRequestResourceType
	(*GetPodRequestChartsRequest)(nil),  // 2: chalk.server.v1.GetPodRequestChartsRequest
	(*GetPodRequestChartsResponse)(nil), // 3: chalk.server.v1.GetPodRequestChartsResponse
	(*timestamppb.Timestamp)(nil),       // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),         // 5: google.protobuf.Duration
	(*v1.DenseTimeSeriesChart)(nil),     // 6: chalk.chart.v1.DenseTimeSeriesChart
}
var file_chalk_server_v1_pod_request_proto_depIdxs = []int32{
	4, // 0: chalk.server.v1.GetPodRequestChartsRequest.start_timestamp_inclusive:type_name -> google.protobuf.Timestamp
	4, // 1: chalk.server.v1.GetPodRequestChartsRequest.end_timestamp_exclusive:type_name -> google.protobuf.Timestamp
	5, // 2: chalk.server.v1.GetPodRequestChartsRequest.window_period:type_name -> google.protobuf.Duration
	0, // 3: chalk.server.v1.GetPodRequestChartsRequest.grouping:type_name -> chalk.server.v1.PodRequestGrouping
	1, // 4: chalk.server.v1.GetPodRequestChartsRequest.resource_types:type_name -> chalk.server.v1.PodRequestResourceType
	6, // 5: chalk.server.v1.GetPodRequestChartsResponse.charts:type_name -> chalk.chart.v1.DenseTimeSeriesChart
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_pod_request_proto_init() }
func file_chalk_server_v1_pod_request_proto_init() {
	if File_chalk_server_v1_pod_request_proto != nil {
		return
	}
	file_chalk_server_v1_pod_request_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_pod_request_proto_rawDesc), len(file_chalk_server_v1_pod_request_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_server_v1_pod_request_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_pod_request_proto_depIdxs,
		EnumInfos:         file_chalk_server_v1_pod_request_proto_enumTypes,
		MessageInfos:      file_chalk_server_v1_pod_request_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_pod_request_proto = out.File
	file_chalk_server_v1_pod_request_proto_goTypes = nil
	file_chalk_server_v1_pod_request_proto_depIdxs = nil
}
