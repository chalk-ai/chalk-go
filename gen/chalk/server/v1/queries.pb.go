// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/queries.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/chart/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQueryPerformanceSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationId   string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPerformanceSummaryRequest) Reset() {
	*x = GetQueryPerformanceSummaryRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPerformanceSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPerformanceSummaryRequest) ProtoMessage() {}

func (x *GetQueryPerformanceSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPerformanceSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPerformanceSummaryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueryPerformanceSummaryRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetQueryPerformanceSummaryResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OperationId        string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	PerformanceSummary *string                `protobuf:"bytes,2,opt,name=performance_summary,json=performanceSummary,proto3,oneof" json:"performance_summary,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetQueryPerformanceSummaryResponse) Reset() {
	*x = GetQueryPerformanceSummaryResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPerformanceSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPerformanceSummaryResponse) ProtoMessage() {}

func (x *GetQueryPerformanceSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPerformanceSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPerformanceSummaryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueryPerformanceSummaryResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetQueryPerformanceSummaryResponse) GetPerformanceSummary() string {
	if x != nil && x.PerformanceSummary != nil {
		return *x.PerformanceSummary
	}
	return ""
}

type ListQueryErrorsPageToken struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NumericIdHwm      int64                  `protobuf:"varint,1,opt,name=numeric_id_hwm,json=numericIdHwm,proto3" json:"numeric_id_hwm,omitempty"`
	ErrorTimestampHwm *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=error_timestamp_hwm,json=errorTimestampHwm,proto3" json:"error_timestamp_hwm,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListQueryErrorsPageToken) Reset() {
	*x = ListQueryErrorsPageToken{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsPageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsPageToken) ProtoMessage() {}

func (x *ListQueryErrorsPageToken) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsPageToken.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsPageToken) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{2}
}

func (x *ListQueryErrorsPageToken) GetNumericIdHwm() int64 {
	if x != nil {
		return x.NumericIdHwm
	}
	return 0
}

func (x *ListQueryErrorsPageToken) GetErrorTimestampHwm() *timestamppb.Timestamp {
	if x != nil {
		return x.ErrorTimestampHwm
	}
	return nil
}

type QueryErrorFilters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationId   *string                `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3,oneof" json:"operation_id,omitempty"`
	FeatureFqn    *string                `protobuf:"bytes,2,opt,name=feature_fqn,json=featureFqn,proto3,oneof" json:"feature_fqn,omitempty"`
	ResolverFqn   *string                `protobuf:"bytes,3,opt,name=resolver_fqn,json=resolverFqn,proto3,oneof" json:"resolver_fqn,omitempty"`
	QueryName     *string                `protobuf:"bytes,4,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	Message       *string                `protobuf:"bytes,5,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryErrorFilters) Reset() {
	*x = QueryErrorFilters{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryErrorFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrorFilters) ProtoMessage() {}

func (x *QueryErrorFilters) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrorFilters.ProtoReflect.Descriptor instead.
func (*QueryErrorFilters) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{3}
}

func (x *QueryErrorFilters) GetOperationId() string {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return ""
}

func (x *QueryErrorFilters) GetFeatureFqn() string {
	if x != nil && x.FeatureFqn != nil {
		return *x.FeatureFqn
	}
	return ""
}

func (x *QueryErrorFilters) GetResolverFqn() string {
	if x != nil && x.ResolverFqn != nil {
		return *x.ResolverFqn
	}
	return ""
}

func (x *QueryErrorFilters) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *QueryErrorFilters) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type QueryErrorMeta struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Id                          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                        string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Category                    string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Message                     string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	DisplayPrimaryKey           *string                `protobuf:"bytes,5,opt,name=display_primary_key,json=displayPrimaryKey,proto3,oneof" json:"display_primary_key,omitempty"`
	DisplayPrimaryKeyFqn        *string                `protobuf:"bytes,6,opt,name=display_primary_key_fqn,json=displayPrimaryKeyFqn,proto3,oneof" json:"display_primary_key_fqn,omitempty"`
	Feature                     *string                `protobuf:"bytes,7,opt,name=feature,proto3,oneof" json:"feature,omitempty"`
	Resolver                    *string                `protobuf:"bytes,8,opt,name=resolver,proto3,oneof" json:"resolver,omitempty"`
	QueryName                   *string                `protobuf:"bytes,9,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	ExceptionKind               *string                `protobuf:"bytes,10,opt,name=exception_kind,json=exceptionKind,proto3,oneof" json:"exception_kind,omitempty"`
	ExceptionMessage            *string                `protobuf:"bytes,11,opt,name=exception_message,json=exceptionMessage,proto3,oneof" json:"exception_message,omitempty"`
	ExceptionStacktrace         *string                `protobuf:"bytes,12,opt,name=exception_stacktrace,json=exceptionStacktrace,proto3,oneof" json:"exception_stacktrace,omitempty"`
	ExceptionInternalStacktrace *string                `protobuf:"bytes,13,opt,name=exception_internal_stacktrace,json=exceptionInternalStacktrace,proto3,oneof" json:"exception_internal_stacktrace,omitempty"`
	OperationId                 *string                `protobuf:"bytes,14,opt,name=operation_id,json=operationId,proto3,oneof" json:"operation_id,omitempty"`
	DeploymentId                *string                `protobuf:"bytes,15,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
	CreatedAt                   *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *QueryErrorMeta) Reset() {
	*x = QueryErrorMeta{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryErrorMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrorMeta) ProtoMessage() {}

func (x *QueryErrorMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrorMeta.ProtoReflect.Descriptor instead.
func (*QueryErrorMeta) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{4}
}

func (x *QueryErrorMeta) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryErrorMeta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryErrorMeta) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *QueryErrorMeta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryErrorMeta) GetDisplayPrimaryKey() string {
	if x != nil && x.DisplayPrimaryKey != nil {
		return *x.DisplayPrimaryKey
	}
	return ""
}

func (x *QueryErrorMeta) GetDisplayPrimaryKeyFqn() string {
	if x != nil && x.DisplayPrimaryKeyFqn != nil {
		return *x.DisplayPrimaryKeyFqn
	}
	return ""
}

func (x *QueryErrorMeta) GetFeature() string {
	if x != nil && x.Feature != nil {
		return *x.Feature
	}
	return ""
}

func (x *QueryErrorMeta) GetResolver() string {
	if x != nil && x.Resolver != nil {
		return *x.Resolver
	}
	return ""
}

func (x *QueryErrorMeta) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionKind() string {
	if x != nil && x.ExceptionKind != nil {
		return *x.ExceptionKind
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionMessage() string {
	if x != nil && x.ExceptionMessage != nil {
		return *x.ExceptionMessage
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionStacktrace() string {
	if x != nil && x.ExceptionStacktrace != nil {
		return *x.ExceptionStacktrace
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionInternalStacktrace() string {
	if x != nil && x.ExceptionInternalStacktrace != nil {
		return *x.ExceptionInternalStacktrace
	}
	return ""
}

func (x *QueryErrorMeta) GetOperationId() string {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return ""
}

func (x *QueryErrorMeta) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *QueryErrorMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListQueryErrorsRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Filters   *QueryErrorFilters     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	PageSize  *int32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// This page_token is a b64-encoded ListQueryErrorsPageToken message
	PageToken     *string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueryErrorsRequest) Reset() {
	*x = ListQueryErrorsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsRequest) ProtoMessage() {}

func (x *ListQueryErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsRequest.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{5}
}

func (x *ListQueryErrorsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetFilters() *QueryErrorFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListQueryErrorsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type ListQueryErrorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryErrors   []*QueryErrorMeta      `protobuf:"bytes,1,rep,name=query_errors,json=queryErrors,proto3" json:"query_errors,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueryErrorsResponse) Reset() {
	*x = ListQueryErrorsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsResponse) ProtoMessage() {}

func (x *ListQueryErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsResponse.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{6}
}

func (x *ListQueryErrorsResponse) GetQueryErrors() []*QueryErrorMeta {
	if x != nil {
		return x.QueryErrors
	}
	return nil
}

func (x *ListQueryErrorsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetQueryErrorsChartRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	StartTimestampInclusive *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_timestamp_inclusive,json=startTimestampInclusive,proto3" json:"start_timestamp_inclusive,omitempty"`
	// If not specified, assumes the current timestamp
	// To avoid awkward small window buckets at the end, specify this.
	EndTimestampExclusive *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_timestamp_exclusive,json=endTimestampExclusive,proto3,oneof" json:"end_timestamp_exclusive,omitempty"`
	// The size of each time bucket + how far apart time points are in the chart
	// Ideally a divisor of the total window between end and start ms
	// If not, the bucket start-aligned with end_timestamp_exclusive will be of size total_window % window_period
	WindowPeriod  *durationpb.Duration `protobuf:"bytes,3,opt,name=window_period,json=windowPeriod,proto3" json:"window_period,omitempty"`
	Filters       *QueryErrorFilters   `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryErrorsChartRequest) Reset() {
	*x = GetQueryErrorsChartRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryErrorsChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryErrorsChartRequest) ProtoMessage() {}

func (x *GetQueryErrorsChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryErrorsChartRequest.ProtoReflect.Descriptor instead.
func (*GetQueryErrorsChartRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{7}
}

func (x *GetQueryErrorsChartRequest) GetStartTimestampInclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestampInclusive
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetEndTimestampExclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestampExclusive
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetWindowPeriod() *durationpb.Duration {
	if x != nil {
		return x.WindowPeriod
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetFilters() *QueryErrorFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetQueryErrorsChartResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Chart         *v1.DenseTimeSeriesChart `protobuf:"bytes,1,opt,name=chart,proto3" json:"chart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryErrorsChartResponse) Reset() {
	*x = GetQueryErrorsChartResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryErrorsChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryErrorsChartResponse) ProtoMessage() {}

func (x *GetQueryErrorsChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryErrorsChartResponse.ProtoReflect.Descriptor instead.
func (*GetQueryErrorsChartResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{8}
}

func (x *GetQueryErrorsChartResponse) GetChart() *v1.DenseTimeSeriesChart {
	if x != nil {
		return x.Chart
	}
	return nil
}

type GetQueryPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryPlanId   string                 `protobuf:"bytes,1,opt,name=query_plan_id,json=queryPlanId,proto3" json:"query_plan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPlanRequest) Reset() {
	*x = GetQueryPlanRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanRequest) ProtoMessage() {}

func (x *GetQueryPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPlanRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{9}
}

func (x *GetQueryPlanRequest) GetQueryPlanId() string {
	if x != nil {
		return x.QueryPlanId
	}
	return ""
}

type QueryPlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DeploymentId  string                 `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	QueryPlan     string                 `protobuf:"bytes,4,opt,name=query_plan,json=queryPlan,proto3" json:"query_plan,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPlan) Reset() {
	*x = QueryPlan{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlan) ProtoMessage() {}

func (x *QueryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlan.ProtoReflect.Descriptor instead.
func (*QueryPlan) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryPlan) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *QueryPlan) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *QueryPlan) GetQueryPlan() string {
	if x != nil {
		return x.QueryPlan
	}
	return ""
}

func (x *QueryPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetQueryPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryPlan     *QueryPlan             `protobuf:"bytes,1,opt,name=query_plan,json=queryPlan,proto3" json:"query_plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPlanResponse) Reset() {
	*x = GetQueryPlanResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanResponse) ProtoMessage() {}

func (x *GetQueryPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPlanResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{11}
}

func (x *GetQueryPlanResponse) GetQueryPlan() *QueryPlan {
	if x != nil {
		return x.QueryPlan
	}
	return nil
}

type AggregatedQueryError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SampleError   *QueryErrorMeta        `protobuf:"bytes,1,opt,name=sample_error,json=sampleError,proto3" json:"sample_error,omitempty"` // Representative error from the group
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	FirstSeen     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregatedQueryError) Reset() {
	*x = AggregatedQueryError{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatedQueryError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedQueryError) ProtoMessage() {}

func (x *AggregatedQueryError) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedQueryError.ProtoReflect.Descriptor instead.
func (*AggregatedQueryError) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{12}
}

func (x *AggregatedQueryError) GetSampleError() *QueryErrorMeta {
	if x != nil {
		return x.SampleError
	}
	return nil
}

func (x *AggregatedQueryError) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedQueryError) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *AggregatedQueryError) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type AggregateQueryErrorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Filters       *QueryErrorFilters     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	PageSize      *int32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	PageToken     *string                `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateQueryErrorsRequest) Reset() {
	*x = AggregateQueryErrorsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateQueryErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateQueryErrorsRequest) ProtoMessage() {}

func (x *AggregateQueryErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateQueryErrorsRequest.ProtoReflect.Descriptor instead.
func (*AggregateQueryErrorsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{13}
}

func (x *AggregateQueryErrorsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *AggregateQueryErrorsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *AggregateQueryErrorsRequest) GetFilters() *QueryErrorFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *AggregateQueryErrorsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *AggregateQueryErrorsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type AggregateQueryErrorsResponse struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	AggregatedErrors []*AggregatedQueryError `protobuf:"bytes,1,rep,name=aggregated_errors,json=aggregatedErrors,proto3" json:"aggregated_errors,omitempty"`
	NextPageToken    *string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AggregateQueryErrorsResponse) Reset() {
	*x = AggregateQueryErrorsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateQueryErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateQueryErrorsResponse) ProtoMessage() {}

func (x *AggregateQueryErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateQueryErrorsResponse.ProtoReflect.Descriptor instead.
func (*AggregateQueryErrorsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{14}
}

func (x *AggregateQueryErrorsResponse) GetAggregatedErrors() []*AggregatedQueryError {
	if x != nil {
		return x.AggregatedErrors
	}
	return nil
}

func (x *AggregateQueryErrorsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type MetaQueryRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MetaQueryId   string                 `protobuf:"bytes,2,opt,name=meta_query_id,json=metaQueryId,proto3" json:"meta_query_id,omitempty"`
	ExternalId    string                 `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	QueryPlanId   *string                `protobuf:"bytes,5,opt,name=query_plan_id,json=queryPlanId,proto3,oneof" json:"query_plan_id,omitempty"`
	CorrelationId *string                `protobuf:"bytes,6,opt,name=correlation_id,json=correlationId,proto3,oneof" json:"correlation_id,omitempty"`
	HasErrors     bool                   `protobuf:"varint,7,opt,name=has_errors,json=hasErrors,proto3" json:"has_errors,omitempty"`
	AgentId       *string                `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	BranchName    *string                `protobuf:"bytes,9,opt,name=branch_name,json=branchName,proto3,oneof" json:"branch_name,omitempty"`
	DeploymentId  *string                `protobuf:"bytes,10,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
	HasPlanStages bool                   `protobuf:"varint,11,opt,name=has_plan_stages,json=hasPlanStages,proto3" json:"has_plan_stages,omitempty"`
	Duration      *float64               `protobuf:"fixed64,12,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaQueryRun) Reset() {
	*x = MetaQueryRun{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaQueryRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaQueryRun) ProtoMessage() {}

func (x *MetaQueryRun) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaQueryRun.ProtoReflect.Descriptor instead.
func (*MetaQueryRun) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{15}
}

func (x *MetaQueryRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetaQueryRun) GetMetaQueryId() string {
	if x != nil {
		return x.MetaQueryId
	}
	return ""
}

func (x *MetaQueryRun) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *MetaQueryRun) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MetaQueryRun) GetQueryPlanId() string {
	if x != nil && x.QueryPlanId != nil {
		return *x.QueryPlanId
	}
	return ""
}

func (x *MetaQueryRun) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *MetaQueryRun) GetHasErrors() bool {
	if x != nil {
		return x.HasErrors
	}
	return false
}

func (x *MetaQueryRun) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *MetaQueryRun) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *MetaQueryRun) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *MetaQueryRun) GetHasPlanStages() bool {
	if x != nil {
		return x.HasPlanStages
	}
	return false
}

func (x *MetaQueryRun) GetDuration() float64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

type MetaQueryRunWithMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Run           *MetaQueryRun          `protobuf:"bytes,2,opt,name=run,proto3" json:"run,omitempty"`
	Latency       *float64               `protobuf:"fixed64,3,opt,name=latency,proto3,oneof" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaQueryRunWithMeta) Reset() {
	*x = MetaQueryRunWithMeta{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaQueryRunWithMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaQueryRunWithMeta) ProtoMessage() {}

func (x *MetaQueryRunWithMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaQueryRunWithMeta.ProtoReflect.Descriptor instead.
func (*MetaQueryRunWithMeta) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{16}
}

func (x *MetaQueryRunWithMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetaQueryRunWithMeta) GetRun() *MetaQueryRun {
	if x != nil {
		return x.Run
	}
	return nil
}

func (x *MetaQueryRunWithMeta) GetLatency() float64 {
	if x != nil && x.Latency != nil {
		return *x.Latency
	}
	return 0
}

type ListMetaQueryRunsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IncludeLatency bool                   `protobuf:"varint,1,opt,name=include_latency,json=includeLatency,proto3" json:"include_latency,omitempty"`
	MinLatencyMs   *float64               `protobuf:"fixed64,2,opt,name=min_latency_ms,json=minLatencyMs,proto3,oneof" json:"min_latency_ms,omitempty"`
	QueryPlanId    *string                `protobuf:"bytes,3,opt,name=query_plan_id,json=queryPlanId,proto3,oneof" json:"query_plan_id,omitempty"`
	MetaQueryId    *int32                 `protobuf:"varint,4,opt,name=meta_query_id,json=metaQueryId,proto3,oneof" json:"meta_query_id,omitempty"`
	MetaQueryName  *string                `protobuf:"bytes,5,opt,name=meta_query_name,json=metaQueryName,proto3,oneof" json:"meta_query_name,omitempty"`
	IdFilter       *string                `protobuf:"bytes,6,opt,name=id_filter,json=idFilter,proto3,oneof" json:"id_filter,omitempty"`
	BranchFilter   *string                `protobuf:"bytes,7,opt,name=branch_filter,json=branchFilter,proto3,oneof" json:"branch_filter,omitempty"`
	AgentId        *string                `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	RootNsPkey     *string                `protobuf:"bytes,9,opt,name=root_ns_pkey,json=rootNsPkey,proto3,oneof" json:"root_ns_pkey,omitempty"`
	Cursor         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit          *int32                 `protobuf:"varint,11,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Start          *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End            *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end,proto3,oneof" json:"end,omitempty"`
	HasErrors      *bool                  `protobuf:"varint,14,opt,name=has_errors,json=hasErrors,proto3,oneof" json:"has_errors,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListMetaQueryRunsRequest) Reset() {
	*x = ListMetaQueryRunsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueryRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueryRunsRequest) ProtoMessage() {}

func (x *ListMetaQueryRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueryRunsRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueryRunsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{17}
}

func (x *ListMetaQueryRunsRequest) GetIncludeLatency() bool {
	if x != nil {
		return x.IncludeLatency
	}
	return false
}

func (x *ListMetaQueryRunsRequest) GetMinLatencyMs() float64 {
	if x != nil && x.MinLatencyMs != nil {
		return *x.MinLatencyMs
	}
	return 0
}

func (x *ListMetaQueryRunsRequest) GetQueryPlanId() string {
	if x != nil && x.QueryPlanId != nil {
		return *x.QueryPlanId
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetMetaQueryId() int32 {
	if x != nil && x.MetaQueryId != nil {
		return *x.MetaQueryId
	}
	return 0
}

func (x *ListMetaQueryRunsRequest) GetMetaQueryName() string {
	if x != nil && x.MetaQueryName != nil {
		return *x.MetaQueryName
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetIdFilter() string {
	if x != nil && x.IdFilter != nil {
		return *x.IdFilter
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetBranchFilter() string {
	if x != nil && x.BranchFilter != nil {
		return *x.BranchFilter
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetRootNsPkey() string {
	if x != nil && x.RootNsPkey != nil {
		return *x.RootNsPkey
	}
	return ""
}

func (x *ListMetaQueryRunsRequest) GetCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListMetaQueryRunsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListMetaQueryRunsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListMetaQueryRunsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ListMetaQueryRunsRequest) GetHasErrors() bool {
	if x != nil && x.HasErrors != nil {
		return *x.HasErrors
	}
	return false
}

type ListMetaQueryRunsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	QueryRuns     []*MetaQueryRunWithMeta `protobuf:"bytes,1,rep,name=query_runs,json=queryRuns,proto3" json:"query_runs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueryRunsResponse) Reset() {
	*x = ListMetaQueryRunsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueryRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueryRunsResponse) ProtoMessage() {}

func (x *ListMetaQueryRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueryRunsResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueryRunsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{18}
}

func (x *ListMetaQueryRunsResponse) GetQueryRuns() []*MetaQueryRunWithMeta {
	if x != nil {
		return x.QueryRuns
	}
	return nil
}

type MetaQuery struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	QueryName          *string                `protobuf:"bytes,2,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	InputFeatures      []string               `protobuf:"bytes,3,rep,name=input_features,json=inputFeatures,proto3" json:"input_features,omitempty"`
	OutputFeatures     []string               `protobuf:"bytes,4,rep,name=output_features,json=outputFeatures,proto3" json:"output_features,omitempty"`
	OutputRootFqns     []string               `protobuf:"bytes,5,rep,name=output_root_fqns,json=outputRootFqns,proto3" json:"output_root_fqns,omitempty"`
	QueryFeaturesCount int32                  `protobuf:"varint,6,opt,name=query_features_count,json=queryFeaturesCount,proto3" json:"query_features_count,omitempty"`
	QueryResolvers     []string               `protobuf:"bytes,7,rep,name=query_resolvers,json=queryResolvers,proto3" json:"query_resolvers,omitempty"`
	Owner              *string                `protobuf:"bytes,8,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Tags               []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	LastObservedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_observed_at,json=lastObservedAt,proto3" json:"last_observed_at,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ArchivedAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=archived_at,json=archivedAt,proto3,oneof" json:"archived_at,omitempty"`
	QueryHash          *string                `protobuf:"bytes,13,opt,name=query_hash,json=queryHash,proto3,oneof" json:"query_hash,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MetaQuery) Reset() {
	*x = MetaQuery{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaQuery) ProtoMessage() {}

func (x *MetaQuery) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaQuery.ProtoReflect.Descriptor instead.
func (*MetaQuery) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{19}
}

func (x *MetaQuery) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetaQuery) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *MetaQuery) GetInputFeatures() []string {
	if x != nil {
		return x.InputFeatures
	}
	return nil
}

func (x *MetaQuery) GetOutputFeatures() []string {
	if x != nil {
		return x.OutputFeatures
	}
	return nil
}

func (x *MetaQuery) GetOutputRootFqns() []string {
	if x != nil {
		return x.OutputRootFqns
	}
	return nil
}

func (x *MetaQuery) GetQueryFeaturesCount() int32 {
	if x != nil {
		return x.QueryFeaturesCount
	}
	return 0
}

func (x *MetaQuery) GetQueryResolvers() []string {
	if x != nil {
		return x.QueryResolvers
	}
	return nil
}

func (x *MetaQuery) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *MetaQuery) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MetaQuery) GetLastObservedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastObservedAt
	}
	return nil
}

func (x *MetaQuery) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MetaQuery) GetArchivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchivedAt
	}
	return nil
}

func (x *MetaQuery) GetQueryHash() string {
	if x != nil && x.QueryHash != nil {
		return *x.QueryHash
	}
	return ""
}

type ListMetaQueriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameFilter    *string                `protobuf:"bytes,1,opt,name=name_filter,json=nameFilter,proto3,oneof" json:"name_filter,omitempty"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3,oneof" json:"end,omitempty"`
	HasName       *bool                  `protobuf:"varint,4,opt,name=has_name,json=hasName,proto3,oneof" json:"has_name,omitempty"`
	Cursor        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit         *int32                 `protobuf:"varint,6,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesRequest) Reset() {
	*x = ListMetaQueriesRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesRequest) ProtoMessage() {}

func (x *ListMetaQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{20}
}

func (x *ListMetaQueriesRequest) GetNameFilter() string {
	if x != nil && x.NameFilter != nil {
		return *x.NameFilter
	}
	return ""
}

func (x *ListMetaQueriesRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListMetaQueriesRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ListMetaQueriesRequest) GetHasName() bool {
	if x != nil && x.HasName != nil {
		return *x.HasName
	}
	return false
}

func (x *ListMetaQueriesRequest) GetCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListMetaQueriesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListMetaQueriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesResponse) Reset() {
	*x = ListMetaQueriesResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesResponse) ProtoMessage() {}

func (x *ListMetaQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{21}
}

func (x *ListMetaQueriesResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type ListLatestMetaQueriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasName       *bool                  `protobuf:"varint,1,opt,name=has_name,json=hasName,proto3,oneof" json:"has_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLatestMetaQueriesRequest) Reset() {
	*x = ListLatestMetaQueriesRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLatestMetaQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLatestMetaQueriesRequest) ProtoMessage() {}

func (x *ListLatestMetaQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLatestMetaQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListLatestMetaQueriesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{22}
}

func (x *ListLatestMetaQueriesRequest) GetHasName() bool {
	if x != nil && x.HasName != nil {
		return *x.HasName
	}
	return false
}

type ListLatestMetaQueriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLatestMetaQueriesResponse) Reset() {
	*x = ListLatestMetaQueriesResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLatestMetaQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLatestMetaQueriesResponse) ProtoMessage() {}

func (x *ListLatestMetaQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLatestMetaQueriesResponse.ProtoReflect.Descriptor instead.
func (*ListLatestMetaQueriesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{23}
}

func (x *ListLatestMetaQueriesResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type GetMetaQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueryId   string                 `protobuf:"bytes,1,opt,name=meta_query_id,json=metaQueryId,proto3" json:"meta_query_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaQueryRequest) Reset() {
	*x = GetMetaQueryRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaQueryRequest) ProtoMessage() {}

func (x *GetMetaQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaQueryRequest.ProtoReflect.Descriptor instead.
func (*GetMetaQueryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{24}
}

func (x *GetMetaQueryRequest) GetMetaQueryId() string {
	if x != nil {
		return x.MetaQueryId
	}
	return ""
}

type GetMetaQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQuery     *MetaQuery             `protobuf:"bytes,1,opt,name=meta_query,json=metaQuery,proto3" json:"meta_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaQueryResponse) Reset() {
	*x = GetMetaQueryResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaQueryResponse) ProtoMessage() {}

func (x *GetMetaQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaQueryResponse.ProtoReflect.Descriptor instead.
func (*GetMetaQueryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{25}
}

func (x *GetMetaQueryResponse) GetMetaQuery() *MetaQuery {
	if x != nil {
		return x.MetaQuery
	}
	return nil
}

type GetMetaQueryByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueryName string                 `protobuf:"bytes,1,opt,name=meta_query_name,json=metaQueryName,proto3" json:"meta_query_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaQueryByNameRequest) Reset() {
	*x = GetMetaQueryByNameRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaQueryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaQueryByNameRequest) ProtoMessage() {}

func (x *GetMetaQueryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaQueryByNameRequest.ProtoReflect.Descriptor instead.
func (*GetMetaQueryByNameRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{26}
}

func (x *GetMetaQueryByNameRequest) GetMetaQueryName() string {
	if x != nil {
		return x.MetaQueryName
	}
	return ""
}

type GetMetaQueryByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQuery     *MetaQuery             `protobuf:"bytes,1,opt,name=meta_query,json=metaQuery,proto3" json:"meta_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaQueryByNameResponse) Reset() {
	*x = GetMetaQueryByNameResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaQueryByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaQueryByNameResponse) ProtoMessage() {}

func (x *GetMetaQueryByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaQueryByNameResponse.ProtoReflect.Descriptor instead.
func (*GetMetaQueryByNameResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{27}
}

func (x *GetMetaQueryByNameResponse) GetMetaQuery() *MetaQuery {
	if x != nil {
		return x.MetaQuery
	}
	return nil
}

type ListMetaQueriesByIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueryIds  []string               `protobuf:"bytes,1,rep,name=meta_query_ids,json=metaQueryIds,proto3" json:"meta_query_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesByIdsRequest) Reset() {
	*x = ListMetaQueriesByIdsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesByIdsRequest) ProtoMessage() {}

func (x *ListMetaQueriesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesByIdsRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{28}
}

func (x *ListMetaQueriesByIdsRequest) GetMetaQueryIds() []string {
	if x != nil {
		return x.MetaQueryIds
	}
	return nil
}

type ListMetaQueriesByIdsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesByIdsResponse) Reset() {
	*x = ListMetaQueriesByIdsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesByIdsResponse) ProtoMessage() {}

func (x *ListMetaQueriesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesByIdsResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{29}
}

func (x *ListMetaQueriesByIdsResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type ListArchivedMetaQueriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArchivedMetaQueriesRequest) Reset() {
	*x = ListArchivedMetaQueriesRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArchivedMetaQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedMetaQueriesRequest) ProtoMessage() {}

func (x *ListArchivedMetaQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedMetaQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListArchivedMetaQueriesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{30}
}

type ListArchivedMetaQueriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArchivedMetaQueriesResponse) Reset() {
	*x = ListArchivedMetaQueriesResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArchivedMetaQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedMetaQueriesResponse) ProtoMessage() {}

func (x *ListArchivedMetaQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedMetaQueriesResponse.ProtoReflect.Descriptor instead.
func (*ListArchivedMetaQueriesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{31}
}

func (x *ListArchivedMetaQueriesResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type ListMetaQueriesForResolverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResolverFqn   string                 `protobuf:"bytes,1,opt,name=resolver_fqn,json=resolverFqn,proto3" json:"resolver_fqn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesForResolverRequest) Reset() {
	*x = ListMetaQueriesForResolverRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesForResolverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesForResolverRequest) ProtoMessage() {}

func (x *ListMetaQueriesForResolverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesForResolverRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesForResolverRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{32}
}

func (x *ListMetaQueriesForResolverRequest) GetResolverFqn() string {
	if x != nil {
		return x.ResolverFqn
	}
	return ""
}

type ListMetaQueriesForResolverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesForResolverResponse) Reset() {
	*x = ListMetaQueriesForResolverResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesForResolverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesForResolverResponse) ProtoMessage() {}

func (x *ListMetaQueriesForResolverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesForResolverResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesForResolverResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{33}
}

func (x *ListMetaQueriesForResolverResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type ListMetaQueriesForFeatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeatureFqn    string                 `protobuf:"bytes,1,opt,name=feature_fqn,json=featureFqn,proto3" json:"feature_fqn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesForFeatureRequest) Reset() {
	*x = ListMetaQueriesForFeatureRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesForFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesForFeatureRequest) ProtoMessage() {}

func (x *ListMetaQueriesForFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesForFeatureRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesForFeatureRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{34}
}

func (x *ListMetaQueriesForFeatureRequest) GetFeatureFqn() string {
	if x != nil {
		return x.FeatureFqn
	}
	return ""
}

type ListMetaQueriesForFeatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueries   []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_queries,json=metaQueries,proto3" json:"meta_queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueriesForFeatureResponse) Reset() {
	*x = ListMetaQueriesForFeatureResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueriesForFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueriesForFeatureResponse) ProtoMessage() {}

func (x *ListMetaQueriesForFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueriesForFeatureResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueriesForFeatureResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{35}
}

func (x *ListMetaQueriesForFeatureResponse) GetMetaQueries() []*MetaQuery {
	if x != nil {
		return x.MetaQueries
	}
	return nil
}

type ListMetaQueryVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaQueryName string                 `protobuf:"bytes,1,opt,name=meta_query_name,json=metaQueryName,proto3" json:"meta_query_name,omitempty"`
	Cursor        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetaQueryVersionsRequest) Reset() {
	*x = ListMetaQueryVersionsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueryVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueryVersionsRequest) ProtoMessage() {}

func (x *ListMetaQueryVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueryVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListMetaQueryVersionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{36}
}

func (x *ListMetaQueryVersionsRequest) GetMetaQueryName() string {
	if x != nil {
		return x.MetaQueryName
	}
	return ""
}

func (x *ListMetaQueryVersionsRequest) GetCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListMetaQueryVersionsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListMetaQueryVersionsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MetaQueryVersions []*MetaQuery           `protobuf:"bytes,1,rep,name=meta_query_versions,json=metaQueryVersions,proto3" json:"meta_query_versions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListMetaQueryVersionsResponse) Reset() {
	*x = ListMetaQueryVersionsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetaQueryVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetaQueryVersionsResponse) ProtoMessage() {}

func (x *ListMetaQueryVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetaQueryVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListMetaQueryVersionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{37}
}

func (x *ListMetaQueryVersionsResponse) GetMetaQueryVersions() []*MetaQuery {
	if x != nil {
		return x.MetaQueryVersions
	}
	return nil
}

var File_chalk_server_v1_queries_proto protoreflect.FileDescriptor

const file_chalk_server_v1_queries_proto_rawDesc = "" +
	"\n" +
	"\x1dchalk/server/v1/queries.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a)chalk/chart/v1/densetimeserieschart.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"F\n" +
	"!GetQueryPerformanceSummaryRequest\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\"\x95\x01\n" +
	"\"GetQueryPerformanceSummaryResponse\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x124\n" +
	"\x13performance_summary\x18\x02 \x01(\tH\x00R\x12performanceSummary\x88\x01\x01B\x16\n" +
	"\x14_performance_summary\"\x8c\x01\n" +
	"\x18ListQueryErrorsPageToken\x12$\n" +
	"\x0enumeric_id_hwm\x18\x01 \x01(\x03R\fnumericIdHwm\x12J\n" +
	"\x13error_timestamp_hwm\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x11errorTimestampHwm\"\x99\x02\n" +
	"\x11QueryErrorFilters\x12&\n" +
	"\foperation_id\x18\x01 \x01(\tH\x00R\voperationId\x88\x01\x01\x12$\n" +
	"\vfeature_fqn\x18\x02 \x01(\tH\x01R\n" +
	"featureFqn\x88\x01\x01\x12&\n" +
	"\fresolver_fqn\x18\x03 \x01(\tH\x02R\vresolverFqn\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_name\x18\x04 \x01(\tH\x03R\tqueryName\x88\x01\x01\x12\x1d\n" +
	"\amessage\x18\x05 \x01(\tH\x04R\amessage\x88\x01\x01B\x0f\n" +
	"\r_operation_idB\x0e\n" +
	"\f_feature_fqnB\x0f\n" +
	"\r_resolver_fqnB\r\n" +
	"\v_query_nameB\n" +
	"\n" +
	"\b_message\"\x8e\a\n" +
	"\x0eQueryErrorMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x123\n" +
	"\x13display_primary_key\x18\x05 \x01(\tH\x00R\x11displayPrimaryKey\x88\x01\x01\x12:\n" +
	"\x17display_primary_key_fqn\x18\x06 \x01(\tH\x01R\x14displayPrimaryKeyFqn\x88\x01\x01\x12\x1d\n" +
	"\afeature\x18\a \x01(\tH\x02R\afeature\x88\x01\x01\x12\x1f\n" +
	"\bresolver\x18\b \x01(\tH\x03R\bresolver\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_name\x18\t \x01(\tH\x04R\tqueryName\x88\x01\x01\x12*\n" +
	"\x0eexception_kind\x18\n" +
	" \x01(\tH\x05R\rexceptionKind\x88\x01\x01\x120\n" +
	"\x11exception_message\x18\v \x01(\tH\x06R\x10exceptionMessage\x88\x01\x01\x126\n" +
	"\x14exception_stacktrace\x18\f \x01(\tH\aR\x13exceptionStacktrace\x88\x01\x01\x12G\n" +
	"\x1dexception_internal_stacktrace\x18\r \x01(\tH\bR\x1bexceptionInternalStacktrace\x88\x01\x01\x12&\n" +
	"\foperation_id\x18\x0e \x01(\tH\tR\voperationId\x88\x01\x01\x12(\n" +
	"\rdeployment_id\x18\x0f \x01(\tH\n" +
	"R\fdeploymentId\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\x16\n" +
	"\x14_display_primary_keyB\x1a\n" +
	"\x18_display_primary_key_fqnB\n" +
	"\n" +
	"\b_featureB\v\n" +
	"\t_resolverB\r\n" +
	"\v_query_nameB\x11\n" +
	"\x0f_exception_kindB\x14\n" +
	"\x12_exception_messageB\x17\n" +
	"\x15_exception_stacktraceB \n" +
	"\x1e_exception_internal_stacktraceB\x0f\n" +
	"\r_operation_idB\x10\n" +
	"\x0e_deployment_id\"\xab\x02\n" +
	"\x16ListQueryErrorsRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12<\n" +
	"\afilters\x18\x03 \x01(\v2\".chalk.server.v1.QueryErrorFiltersR\afilters\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05H\x00R\bpageSize\x88\x01\x01\x12\"\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tH\x01R\tpageToken\x88\x01\x01B\f\n" +
	"\n" +
	"_page_sizeB\r\n" +
	"\v_page_token\"\x9e\x01\n" +
	"\x17ListQueryErrorsResponse\x12B\n" +
	"\fquery_errors\x18\x01 \x03(\v2\x1f.chalk.server.v1.QueryErrorMetaR\vqueryErrors\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token\"\xe7\x02\n" +
	"\x1aGetQueryErrorsChartRequest\x12V\n" +
	"\x19start_timestamp_inclusive\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x17startTimestampInclusive\x12W\n" +
	"\x17end_timestamp_exclusive\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x15endTimestampExclusive\x88\x01\x01\x12>\n" +
	"\rwindow_period\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\fwindowPeriod\x12<\n" +
	"\afilters\x18\x04 \x01(\v2\".chalk.server.v1.QueryErrorFiltersR\afiltersB\x1a\n" +
	"\x18_end_timestamp_exclusive\"Y\n" +
	"\x1bGetQueryErrorsChartResponse\x12:\n" +
	"\x05chart\x18\x01 \x01(\v2$.chalk.chart.v1.DenseTimeSeriesChartR\x05chart\"9\n" +
	"\x13GetQueryPlanRequest\x12\"\n" +
	"\rquery_plan_id\x18\x01 \x01(\tR\vqueryPlanId\"\xc1\x01\n" +
	"\tQueryPlan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12#\n" +
	"\rdeployment_id\x18\x03 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"query_plan\x18\x04 \x01(\tR\tqueryPlan\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"Q\n" +
	"\x14GetQueryPlanResponse\x129\n" +
	"\n" +
	"query_plan\x18\x01 \x01(\v2\x1a.chalk.server.v1.QueryPlanR\tqueryPlan\"\xe4\x01\n" +
	"\x14AggregatedQueryError\x12B\n" +
	"\fsample_error\x18\x01 \x01(\v2\x1f.chalk.server.v1.QueryErrorMetaR\vsampleError\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x129\n" +
	"\n" +
	"first_seen\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x127\n" +
	"\tlast_seen\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\"\xb0\x02\n" +
	"\x1bAggregateQueryErrorsRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12<\n" +
	"\afilters\x18\x03 \x01(\v2\".chalk.server.v1.QueryErrorFiltersR\afilters\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05H\x00R\bpageSize\x88\x01\x01\x12\"\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tH\x01R\tpageToken\x88\x01\x01B\f\n" +
	"\n" +
	"_page_sizeB\r\n" +
	"\v_page_token\"\xb3\x01\n" +
	"\x1cAggregateQueryErrorsResponse\x12R\n" +
	"\x11aggregated_errors\x18\x01 \x03(\v2%.chalk.server.v1.AggregatedQueryErrorR\x10aggregatedErrors\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token\"\xac\x04\n" +
	"\fMetaQueryRun\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\rmeta_query_id\x18\x02 \x01(\tR\vmetaQueryId\x12\x1f\n" +
	"\vexternal_id\x18\x03 \x01(\tR\n" +
	"externalId\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12'\n" +
	"\rquery_plan_id\x18\x05 \x01(\tH\x00R\vqueryPlanId\x88\x01\x01\x12*\n" +
	"\x0ecorrelation_id\x18\x06 \x01(\tH\x01R\rcorrelationId\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"has_errors\x18\a \x01(\bR\thasErrors\x12\x1e\n" +
	"\bagent_id\x18\b \x01(\tH\x02R\aagentId\x88\x01\x01\x12$\n" +
	"\vbranch_name\x18\t \x01(\tH\x03R\n" +
	"branchName\x88\x01\x01\x12(\n" +
	"\rdeployment_id\x18\n" +
	" \x01(\tH\x04R\fdeploymentId\x88\x01\x01\x12&\n" +
	"\x0fhas_plan_stages\x18\v \x01(\bR\rhasPlanStages\x12\x1f\n" +
	"\bduration\x18\f \x01(\x01H\x05R\bduration\x88\x01\x01B\x10\n" +
	"\x0e_query_plan_idB\x11\n" +
	"\x0f_correlation_idB\v\n" +
	"\t_agent_idB\x0e\n" +
	"\f_branch_nameB\x10\n" +
	"\x0e_deployment_idB\v\n" +
	"\t_duration\"\x82\x01\n" +
	"\x14MetaQueryRunWithMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\x03run\x18\x02 \x01(\v2\x1d.chalk.server.v1.MetaQueryRunR\x03run\x12\x1d\n" +
	"\alatency\x18\x03 \x01(\x01H\x00R\alatency\x88\x01\x01B\n" +
	"\n" +
	"\b_latency\"\xa1\x06\n" +
	"\x18ListMetaQueryRunsRequest\x12'\n" +
	"\x0finclude_latency\x18\x01 \x01(\bR\x0eincludeLatency\x12)\n" +
	"\x0emin_latency_ms\x18\x02 \x01(\x01H\x00R\fminLatencyMs\x88\x01\x01\x12'\n" +
	"\rquery_plan_id\x18\x03 \x01(\tH\x01R\vqueryPlanId\x88\x01\x01\x12'\n" +
	"\rmeta_query_id\x18\x04 \x01(\x05H\x02R\vmetaQueryId\x88\x01\x01\x12+\n" +
	"\x0fmeta_query_name\x18\x05 \x01(\tH\x03R\rmetaQueryName\x88\x01\x01\x12 \n" +
	"\tid_filter\x18\x06 \x01(\tH\x04R\bidFilter\x88\x01\x01\x12(\n" +
	"\rbranch_filter\x18\a \x01(\tH\x05R\fbranchFilter\x88\x01\x01\x12\x1e\n" +
	"\bagent_id\x18\b \x01(\tH\x06R\aagentId\x88\x01\x01\x12%\n" +
	"\froot_ns_pkey\x18\t \x01(\tH\aR\n" +
	"rootNsPkey\x88\x01\x01\x127\n" +
	"\x06cursor\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampH\bR\x06cursor\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\v \x01(\x05H\tR\x05limit\x88\x01\x01\x125\n" +
	"\x05start\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\n" +
	"R\x05start\x88\x01\x01\x121\n" +
	"\x03end\x18\r \x01(\v2\x1a.google.protobuf.TimestampH\vR\x03end\x88\x01\x01\x12\"\n" +
	"\n" +
	"has_errors\x18\x0e \x01(\bH\fR\thasErrors\x88\x01\x01B\x11\n" +
	"\x0f_min_latency_msB\x10\n" +
	"\x0e_query_plan_idB\x10\n" +
	"\x0e_meta_query_idB\x12\n" +
	"\x10_meta_query_nameB\f\n" +
	"\n" +
	"_id_filterB\x10\n" +
	"\x0e_branch_filterB\v\n" +
	"\t_agent_idB\x0f\n" +
	"\r_root_ns_pkeyB\t\n" +
	"\a_cursorB\b\n" +
	"\x06_limitB\b\n" +
	"\x06_startB\x06\n" +
	"\x04_endB\r\n" +
	"\v_has_errors\"a\n" +
	"\x19ListMetaQueryRunsResponse\x12D\n" +
	"\n" +
	"query_runs\x18\x01 \x03(\v2%.chalk.server.v1.MetaQueryRunWithMetaR\tqueryRuns\"\xe2\x04\n" +
	"\tMetaQuery\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\n" +
	"query_name\x18\x02 \x01(\tH\x00R\tqueryName\x88\x01\x01\x12%\n" +
	"\x0einput_features\x18\x03 \x03(\tR\rinputFeatures\x12'\n" +
	"\x0foutput_features\x18\x04 \x03(\tR\x0eoutputFeatures\x12(\n" +
	"\x10output_root_fqns\x18\x05 \x03(\tR\x0eoutputRootFqns\x120\n" +
	"\x14query_features_count\x18\x06 \x01(\x05R\x12queryFeaturesCount\x12'\n" +
	"\x0fquery_resolvers\x18\a \x03(\tR\x0equeryResolvers\x12\x19\n" +
	"\x05owner\x18\b \x01(\tH\x01R\x05owner\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12D\n" +
	"\x10last_observed_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x0elastObservedAt\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12@\n" +
	"\varchived_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\x02R\n" +
	"archivedAt\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_hash\x18\r \x01(\tH\x03R\tqueryHash\x88\x01\x01B\r\n" +
	"\v_query_nameB\b\n" +
	"\x06_ownerB\x0e\n" +
	"\f_archived_atB\r\n" +
	"\v_query_hash\"\xe0\x02\n" +
	"\x16ListMetaQueriesRequest\x12$\n" +
	"\vname_filter\x18\x01 \x01(\tH\x00R\n" +
	"nameFilter\x88\x01\x01\x125\n" +
	"\x05start\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x05start\x88\x01\x01\x121\n" +
	"\x03end\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\x03end\x88\x01\x01\x12\x1e\n" +
	"\bhas_name\x18\x04 \x01(\bH\x03R\ahasName\x88\x01\x01\x127\n" +
	"\x06cursor\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x04R\x06cursor\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x06 \x01(\x05H\x05R\x05limit\x88\x01\x01B\x0e\n" +
	"\f_name_filterB\b\n" +
	"\x06_startB\x06\n" +
	"\x04_endB\v\n" +
	"\t_has_nameB\t\n" +
	"\a_cursorB\b\n" +
	"\x06_limit\"X\n" +
	"\x17ListMetaQueriesResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\"K\n" +
	"\x1cListLatestMetaQueriesRequest\x12\x1e\n" +
	"\bhas_name\x18\x01 \x01(\bH\x00R\ahasName\x88\x01\x01B\v\n" +
	"\t_has_name\"^\n" +
	"\x1dListLatestMetaQueriesResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\"9\n" +
	"\x13GetMetaQueryRequest\x12\"\n" +
	"\rmeta_query_id\x18\x01 \x01(\tR\vmetaQueryId\"Q\n" +
	"\x14GetMetaQueryResponse\x129\n" +
	"\n" +
	"meta_query\x18\x01 \x01(\v2\x1a.chalk.server.v1.MetaQueryR\tmetaQuery\"C\n" +
	"\x19GetMetaQueryByNameRequest\x12&\n" +
	"\x0fmeta_query_name\x18\x01 \x01(\tR\rmetaQueryName\"W\n" +
	"\x1aGetMetaQueryByNameResponse\x129\n" +
	"\n" +
	"meta_query\x18\x01 \x01(\v2\x1a.chalk.server.v1.MetaQueryR\tmetaQuery\"C\n" +
	"\x1bListMetaQueriesByIdsRequest\x12$\n" +
	"\x0emeta_query_ids\x18\x01 \x03(\tR\fmetaQueryIds\"]\n" +
	"\x1cListMetaQueriesByIdsResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\" \n" +
	"\x1eListArchivedMetaQueriesRequest\"`\n" +
	"\x1fListArchivedMetaQueriesResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\"F\n" +
	"!ListMetaQueriesForResolverRequest\x12!\n" +
	"\fresolver_fqn\x18\x01 \x01(\tR\vresolverFqn\"c\n" +
	"\"ListMetaQueriesForResolverResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\"C\n" +
	" ListMetaQueriesForFeatureRequest\x12\x1f\n" +
	"\vfeature_fqn\x18\x01 \x01(\tR\n" +
	"featureFqn\"b\n" +
	"!ListMetaQueriesForFeatureResponse\x12=\n" +
	"\fmeta_queries\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\vmetaQueries\"\xaf\x01\n" +
	"\x1cListMetaQueryVersionsRequest\x12&\n" +
	"\x0fmeta_query_name\x18\x01 \x01(\tR\rmetaQueryName\x127\n" +
	"\x06cursor\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x06cursor\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x01R\x05limit\x88\x01\x01B\t\n" +
	"\a_cursorB\b\n" +
	"\x06_limit\"k\n" +
	"\x1dListMetaQueryVersionsResponse\x12J\n" +
	"\x13meta_query_versions\x18\x01 \x03(\v2\x1a.chalk.server.v1.MetaQueryR\x11metaQueryVersions2\x9c\x0e\n" +
	"\x0eQueriesService\x12\x8a\x01\n" +
	"\x1aGetQueryPerformanceSummary\x122.chalk.server.v1.GetQueryPerformanceSummaryRequest\x1a3.chalk.server.v1.GetQueryPerformanceSummaryResponse\"\x03\x80}\x06\x12i\n" +
	"\x0fListQueryErrors\x12'.chalk.server.v1.ListQueryErrorsRequest\x1a(.chalk.server.v1.ListQueryErrorsResponse\"\x03\x80}\x06\x12u\n" +
	"\x13GetQueryErrorsChart\x12+.chalk.server.v1.GetQueryErrorsChartRequest\x1a,.chalk.server.v1.GetQueryErrorsChartResponse\"\x03\x80}\x06\x12`\n" +
	"\fGetQueryPlan\x12$.chalk.server.v1.GetQueryPlanRequest\x1a%.chalk.server.v1.GetQueryPlanResponse\"\x03\x80}\x06\x12x\n" +
	"\x14AggregateQueryErrors\x12,.chalk.server.v1.AggregateQueryErrorsRequest\x1a-.chalk.server.v1.AggregateQueryErrorsResponse\"\x03\x80}\x06\x12o\n" +
	"\x11ListMetaQueryRuns\x12).chalk.server.v1.ListMetaQueryRunsRequest\x1a*.chalk.server.v1.ListMetaQueryRunsResponse\"\x03\x80}\x03\x12i\n" +
	"\x0fListMetaQueries\x12'.chalk.server.v1.ListMetaQueriesRequest\x1a(.chalk.server.v1.ListMetaQueriesResponse\"\x03\x80}\x03\x12{\n" +
	"\x15ListLatestMetaQueries\x12-.chalk.server.v1.ListLatestMetaQueriesRequest\x1a..chalk.server.v1.ListLatestMetaQueriesResponse\"\x03\x80}\x03\x12`\n" +
	"\fGetMetaQuery\x12$.chalk.server.v1.GetMetaQueryRequest\x1a%.chalk.server.v1.GetMetaQueryResponse\"\x03\x80}\x03\x12r\n" +
	"\x12GetMetaQueryByName\x12*.chalk.server.v1.GetMetaQueryByNameRequest\x1a+.chalk.server.v1.GetMetaQueryByNameResponse\"\x03\x80}\x03\x12x\n" +
	"\x14ListMetaQueriesByIds\x12,.chalk.server.v1.ListMetaQueriesByIdsRequest\x1a-.chalk.server.v1.ListMetaQueriesByIdsResponse\"\x03\x80}\x03\x12\x81\x01\n" +
	"\x17ListArchivedMetaQueries\x12/.chalk.server.v1.ListArchivedMetaQueriesRequest\x1a0.chalk.server.v1.ListArchivedMetaQueriesResponse\"\x03\x80}\x03\x12\x8a\x01\n" +
	"\x1aListMetaQueriesForResolver\x122.chalk.server.v1.ListMetaQueriesForResolverRequest\x1a3.chalk.server.v1.ListMetaQueriesForResolverResponse\"\x03\x80}\x03\x12\x87\x01\n" +
	"\x19ListMetaQueriesForFeature\x121.chalk.server.v1.ListMetaQueriesForFeatureRequest\x1a2.chalk.server.v1.ListMetaQueriesForFeatureResponse\"\x03\x80}\x03\x12{\n" +
	"\x15ListMetaQueryVersions\x12-.chalk.server.v1.ListMetaQueryVersionsRequest\x1a..chalk.server.v1.ListMetaQueryVersionsResponse\"\x03\x80}\x03B\xbc\x01\n" +
	"\x13com.chalk.server.v1B\fQueriesProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_queries_proto_rawDescOnce sync.Once
	file_chalk_server_v1_queries_proto_rawDescData []byte
)

func file_chalk_server_v1_queries_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_queries_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_queries_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_queries_proto_rawDesc), len(file_chalk_server_v1_queries_proto_rawDesc)))
	})
	return file_chalk_server_v1_queries_proto_rawDescData
}

var file_chalk_server_v1_queries_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_chalk_server_v1_queries_proto_goTypes = []any{
	(*GetQueryPerformanceSummaryRequest)(nil),  // 0: chalk.server.v1.GetQueryPerformanceSummaryRequest
	(*GetQueryPerformanceSummaryResponse)(nil), // 1: chalk.server.v1.GetQueryPerformanceSummaryResponse
	(*ListQueryErrorsPageToken)(nil),           // 2: chalk.server.v1.ListQueryErrorsPageToken
	(*QueryErrorFilters)(nil),                  // 3: chalk.server.v1.QueryErrorFilters
	(*QueryErrorMeta)(nil),                     // 4: chalk.server.v1.QueryErrorMeta
	(*ListQueryErrorsRequest)(nil),             // 5: chalk.server.v1.ListQueryErrorsRequest
	(*ListQueryErrorsResponse)(nil),            // 6: chalk.server.v1.ListQueryErrorsResponse
	(*GetQueryErrorsChartRequest)(nil),         // 7: chalk.server.v1.GetQueryErrorsChartRequest
	(*GetQueryErrorsChartResponse)(nil),        // 8: chalk.server.v1.GetQueryErrorsChartResponse
	(*GetQueryPlanRequest)(nil),                // 9: chalk.server.v1.GetQueryPlanRequest
	(*QueryPlan)(nil),                          // 10: chalk.server.v1.QueryPlan
	(*GetQueryPlanResponse)(nil),               // 11: chalk.server.v1.GetQueryPlanResponse
	(*AggregatedQueryError)(nil),               // 12: chalk.server.v1.AggregatedQueryError
	(*AggregateQueryErrorsRequest)(nil),        // 13: chalk.server.v1.AggregateQueryErrorsRequest
	(*AggregateQueryErrorsResponse)(nil),       // 14: chalk.server.v1.AggregateQueryErrorsResponse
	(*MetaQueryRun)(nil),                       // 15: chalk.server.v1.MetaQueryRun
	(*MetaQueryRunWithMeta)(nil),               // 16: chalk.server.v1.MetaQueryRunWithMeta
	(*ListMetaQueryRunsRequest)(nil),           // 17: chalk.server.v1.ListMetaQueryRunsRequest
	(*ListMetaQueryRunsResponse)(nil),          // 18: chalk.server.v1.ListMetaQueryRunsResponse
	(*MetaQuery)(nil),                          // 19: chalk.server.v1.MetaQuery
	(*ListMetaQueriesRequest)(nil),             // 20: chalk.server.v1.ListMetaQueriesRequest
	(*ListMetaQueriesResponse)(nil),            // 21: chalk.server.v1.ListMetaQueriesResponse
	(*ListLatestMetaQueriesRequest)(nil),       // 22: chalk.server.v1.ListLatestMetaQueriesRequest
	(*ListLatestMetaQueriesResponse)(nil),      // 23: chalk.server.v1.ListLatestMetaQueriesResponse
	(*GetMetaQueryRequest)(nil),                // 24: chalk.server.v1.GetMetaQueryRequest
	(*GetMetaQueryResponse)(nil),               // 25: chalk.server.v1.GetMetaQueryResponse
	(*GetMetaQueryByNameRequest)(nil),          // 26: chalk.server.v1.GetMetaQueryByNameRequest
	(*GetMetaQueryByNameResponse)(nil),         // 27: chalk.server.v1.GetMetaQueryByNameResponse
	(*ListMetaQueriesByIdsRequest)(nil),        // 28: chalk.server.v1.ListMetaQueriesByIdsRequest
	(*ListMetaQueriesByIdsResponse)(nil),       // 29: chalk.server.v1.ListMetaQueriesByIdsResponse
	(*ListArchivedMetaQueriesRequest)(nil),     // 30: chalk.server.v1.ListArchivedMetaQueriesRequest
	(*ListArchivedMetaQueriesResponse)(nil),    // 31: chalk.server.v1.ListArchivedMetaQueriesResponse
	(*ListMetaQueriesForResolverRequest)(nil),  // 32: chalk.server.v1.ListMetaQueriesForResolverRequest
	(*ListMetaQueriesForResolverResponse)(nil), // 33: chalk.server.v1.ListMetaQueriesForResolverResponse
	(*ListMetaQueriesForFeatureRequest)(nil),   // 34: chalk.server.v1.ListMetaQueriesForFeatureRequest
	(*ListMetaQueriesForFeatureResponse)(nil),  // 35: chalk.server.v1.ListMetaQueriesForFeatureResponse
	(*ListMetaQueryVersionsRequest)(nil),       // 36: chalk.server.v1.ListMetaQueryVersionsRequest
	(*ListMetaQueryVersionsResponse)(nil),      // 37: chalk.server.v1.ListMetaQueryVersionsResponse
	(*timestamppb.Timestamp)(nil),              // 38: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                // 39: google.protobuf.Duration
	(*v1.DenseTimeSeriesChart)(nil),            // 40: chalk.chart.v1.DenseTimeSeriesChart
}
var file_chalk_server_v1_queries_proto_depIdxs = []int32{
	38, // 0: chalk.server.v1.ListQueryErrorsPageToken.error_timestamp_hwm:type_name -> google.protobuf.Timestamp
	38, // 1: chalk.server.v1.QueryErrorMeta.created_at:type_name -> google.protobuf.Timestamp
	38, // 2: chalk.server.v1.ListQueryErrorsRequest.start_date:type_name -> google.protobuf.Timestamp
	38, // 3: chalk.server.v1.ListQueryErrorsRequest.end_date:type_name -> google.protobuf.Timestamp
	3,  // 4: chalk.server.v1.ListQueryErrorsRequest.filters:type_name -> chalk.server.v1.QueryErrorFilters
	4,  // 5: chalk.server.v1.ListQueryErrorsResponse.query_errors:type_name -> chalk.server.v1.QueryErrorMeta
	38, // 6: chalk.server.v1.GetQueryErrorsChartRequest.start_timestamp_inclusive:type_name -> google.protobuf.Timestamp
	38, // 7: chalk.server.v1.GetQueryErrorsChartRequest.end_timestamp_exclusive:type_name -> google.protobuf.Timestamp
	39, // 8: chalk.server.v1.GetQueryErrorsChartRequest.window_period:type_name -> google.protobuf.Duration
	3,  // 9: chalk.server.v1.GetQueryErrorsChartRequest.filters:type_name -> chalk.server.v1.QueryErrorFilters
	40, // 10: chalk.server.v1.GetQueryErrorsChartResponse.chart:type_name -> chalk.chart.v1.DenseTimeSeriesChart
	38, // 11: chalk.server.v1.QueryPlan.created_at:type_name -> google.protobuf.Timestamp
	10, // 12: chalk.server.v1.GetQueryPlanResponse.query_plan:type_name -> chalk.server.v1.QueryPlan
	4,  // 13: chalk.server.v1.AggregatedQueryError.sample_error:type_name -> chalk.server.v1.QueryErrorMeta
	38, // 14: chalk.server.v1.AggregatedQueryError.first_seen:type_name -> google.protobuf.Timestamp
	38, // 15: chalk.server.v1.AggregatedQueryError.last_seen:type_name -> google.protobuf.Timestamp
	38, // 16: chalk.server.v1.AggregateQueryErrorsRequest.start_date:type_name -> google.protobuf.Timestamp
	38, // 17: chalk.server.v1.AggregateQueryErrorsRequest.end_date:type_name -> google.protobuf.Timestamp
	3,  // 18: chalk.server.v1.AggregateQueryErrorsRequest.filters:type_name -> chalk.server.v1.QueryErrorFilters
	12, // 19: chalk.server.v1.AggregateQueryErrorsResponse.aggregated_errors:type_name -> chalk.server.v1.AggregatedQueryError
	38, // 20: chalk.server.v1.MetaQueryRun.created_at:type_name -> google.protobuf.Timestamp
	15, // 21: chalk.server.v1.MetaQueryRunWithMeta.run:type_name -> chalk.server.v1.MetaQueryRun
	38, // 22: chalk.server.v1.ListMetaQueryRunsRequest.cursor:type_name -> google.protobuf.Timestamp
	38, // 23: chalk.server.v1.ListMetaQueryRunsRequest.start:type_name -> google.protobuf.Timestamp
	38, // 24: chalk.server.v1.ListMetaQueryRunsRequest.end:type_name -> google.protobuf.Timestamp
	16, // 25: chalk.server.v1.ListMetaQueryRunsResponse.query_runs:type_name -> chalk.server.v1.MetaQueryRunWithMeta
	38, // 26: chalk.server.v1.MetaQuery.last_observed_at:type_name -> google.protobuf.Timestamp
	38, // 27: chalk.server.v1.MetaQuery.created_at:type_name -> google.protobuf.Timestamp
	38, // 28: chalk.server.v1.MetaQuery.archived_at:type_name -> google.protobuf.Timestamp
	38, // 29: chalk.server.v1.ListMetaQueriesRequest.start:type_name -> google.protobuf.Timestamp
	38, // 30: chalk.server.v1.ListMetaQueriesRequest.end:type_name -> google.protobuf.Timestamp
	38, // 31: chalk.server.v1.ListMetaQueriesRequest.cursor:type_name -> google.protobuf.Timestamp
	19, // 32: chalk.server.v1.ListMetaQueriesResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	19, // 33: chalk.server.v1.ListLatestMetaQueriesResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	19, // 34: chalk.server.v1.GetMetaQueryResponse.meta_query:type_name -> chalk.server.v1.MetaQuery
	19, // 35: chalk.server.v1.GetMetaQueryByNameResponse.meta_query:type_name -> chalk.server.v1.MetaQuery
	19, // 36: chalk.server.v1.ListMetaQueriesByIdsResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	19, // 37: chalk.server.v1.ListArchivedMetaQueriesResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	19, // 38: chalk.server.v1.ListMetaQueriesForResolverResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	19, // 39: chalk.server.v1.ListMetaQueriesForFeatureResponse.meta_queries:type_name -> chalk.server.v1.MetaQuery
	38, // 40: chalk.server.v1.ListMetaQueryVersionsRequest.cursor:type_name -> google.protobuf.Timestamp
	19, // 41: chalk.server.v1.ListMetaQueryVersionsResponse.meta_query_versions:type_name -> chalk.server.v1.MetaQuery
	0,  // 42: chalk.server.v1.QueriesService.GetQueryPerformanceSummary:input_type -> chalk.server.v1.GetQueryPerformanceSummaryRequest
	5,  // 43: chalk.server.v1.QueriesService.ListQueryErrors:input_type -> chalk.server.v1.ListQueryErrorsRequest
	7,  // 44: chalk.server.v1.QueriesService.GetQueryErrorsChart:input_type -> chalk.server.v1.GetQueryErrorsChartRequest
	9,  // 45: chalk.server.v1.QueriesService.GetQueryPlan:input_type -> chalk.server.v1.GetQueryPlanRequest
	13, // 46: chalk.server.v1.QueriesService.AggregateQueryErrors:input_type -> chalk.server.v1.AggregateQueryErrorsRequest
	17, // 47: chalk.server.v1.QueriesService.ListMetaQueryRuns:input_type -> chalk.server.v1.ListMetaQueryRunsRequest
	20, // 48: chalk.server.v1.QueriesService.ListMetaQueries:input_type -> chalk.server.v1.ListMetaQueriesRequest
	22, // 49: chalk.server.v1.QueriesService.ListLatestMetaQueries:input_type -> chalk.server.v1.ListLatestMetaQueriesRequest
	24, // 50: chalk.server.v1.QueriesService.GetMetaQuery:input_type -> chalk.server.v1.GetMetaQueryRequest
	26, // 51: chalk.server.v1.QueriesService.GetMetaQueryByName:input_type -> chalk.server.v1.GetMetaQueryByNameRequest
	28, // 52: chalk.server.v1.QueriesService.ListMetaQueriesByIds:input_type -> chalk.server.v1.ListMetaQueriesByIdsRequest
	30, // 53: chalk.server.v1.QueriesService.ListArchivedMetaQueries:input_type -> chalk.server.v1.ListArchivedMetaQueriesRequest
	32, // 54: chalk.server.v1.QueriesService.ListMetaQueriesForResolver:input_type -> chalk.server.v1.ListMetaQueriesForResolverRequest
	34, // 55: chalk.server.v1.QueriesService.ListMetaQueriesForFeature:input_type -> chalk.server.v1.ListMetaQueriesForFeatureRequest
	36, // 56: chalk.server.v1.QueriesService.ListMetaQueryVersions:input_type -> chalk.server.v1.ListMetaQueryVersionsRequest
	1,  // 57: chalk.server.v1.QueriesService.GetQueryPerformanceSummary:output_type -> chalk.server.v1.GetQueryPerformanceSummaryResponse
	6,  // 58: chalk.server.v1.QueriesService.ListQueryErrors:output_type -> chalk.server.v1.ListQueryErrorsResponse
	8,  // 59: chalk.server.v1.QueriesService.GetQueryErrorsChart:output_type -> chalk.server.v1.GetQueryErrorsChartResponse
	11, // 60: chalk.server.v1.QueriesService.GetQueryPlan:output_type -> chalk.server.v1.GetQueryPlanResponse
	14, // 61: chalk.server.v1.QueriesService.AggregateQueryErrors:output_type -> chalk.server.v1.AggregateQueryErrorsResponse
	18, // 62: chalk.server.v1.QueriesService.ListMetaQueryRuns:output_type -> chalk.server.v1.ListMetaQueryRunsResponse
	21, // 63: chalk.server.v1.QueriesService.ListMetaQueries:output_type -> chalk.server.v1.ListMetaQueriesResponse
	23, // 64: chalk.server.v1.QueriesService.ListLatestMetaQueries:output_type -> chalk.server.v1.ListLatestMetaQueriesResponse
	25, // 65: chalk.server.v1.QueriesService.GetMetaQuery:output_type -> chalk.server.v1.GetMetaQueryResponse
	27, // 66: chalk.server.v1.QueriesService.GetMetaQueryByName:output_type -> chalk.server.v1.GetMetaQueryByNameResponse
	29, // 67: chalk.server.v1.QueriesService.ListMetaQueriesByIds:output_type -> chalk.server.v1.ListMetaQueriesByIdsResponse
	31, // 68: chalk.server.v1.QueriesService.ListArchivedMetaQueries:output_type -> chalk.server.v1.ListArchivedMetaQueriesResponse
	33, // 69: chalk.server.v1.QueriesService.ListMetaQueriesForResolver:output_type -> chalk.server.v1.ListMetaQueriesForResolverResponse
	35, // 70: chalk.server.v1.QueriesService.ListMetaQueriesForFeature:output_type -> chalk.server.v1.ListMetaQueriesForFeatureResponse
	37, // 71: chalk.server.v1.QueriesService.ListMetaQueryVersions:output_type -> chalk.server.v1.ListMetaQueryVersionsResponse
	57, // [57:72] is the sub-list for method output_type
	42, // [42:57] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_queries_proto_init() }
func file_chalk_server_v1_queries_proto_init() {
	if File_chalk_server_v1_queries_proto != nil {
		return
	}
	file_chalk_server_v1_queries_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[3].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[4].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[5].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[6].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[7].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[13].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[14].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[15].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[16].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[17].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[19].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[20].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[22].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[36].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_queries_proto_rawDesc), len(file_chalk_server_v1_queries_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_queries_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_queries_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_queries_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_queries_proto = out.File
	file_chalk_server_v1_queries_proto_goTypes = nil
	file_chalk_server_v1_queries_proto_depIdxs = nil
}
