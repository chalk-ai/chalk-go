// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/queries.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/chart/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQueryPerformanceSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationId   string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPerformanceSummaryRequest) Reset() {
	*x = GetQueryPerformanceSummaryRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPerformanceSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPerformanceSummaryRequest) ProtoMessage() {}

func (x *GetQueryPerformanceSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPerformanceSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPerformanceSummaryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueryPerformanceSummaryRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetQueryPerformanceSummaryResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OperationId        string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	PerformanceSummary *string                `protobuf:"bytes,2,opt,name=performance_summary,json=performanceSummary,proto3,oneof" json:"performance_summary,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetQueryPerformanceSummaryResponse) Reset() {
	*x = GetQueryPerformanceSummaryResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPerformanceSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPerformanceSummaryResponse) ProtoMessage() {}

func (x *GetQueryPerformanceSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPerformanceSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPerformanceSummaryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueryPerformanceSummaryResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetQueryPerformanceSummaryResponse) GetPerformanceSummary() string {
	if x != nil && x.PerformanceSummary != nil {
		return *x.PerformanceSummary
	}
	return ""
}

type ListQueryErrorsPageToken struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NumericIdHwm      int64                  `protobuf:"varint,1,opt,name=numeric_id_hwm,json=numericIdHwm,proto3" json:"numeric_id_hwm,omitempty"`
	ErrorTimestampHwm *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=error_timestamp_hwm,json=errorTimestampHwm,proto3" json:"error_timestamp_hwm,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListQueryErrorsPageToken) Reset() {
	*x = ListQueryErrorsPageToken{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsPageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsPageToken) ProtoMessage() {}

func (x *ListQueryErrorsPageToken) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsPageToken.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsPageToken) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{2}
}

func (x *ListQueryErrorsPageToken) GetNumericIdHwm() int64 {
	if x != nil {
		return x.NumericIdHwm
	}
	return 0
}

func (x *ListQueryErrorsPageToken) GetErrorTimestampHwm() *timestamppb.Timestamp {
	if x != nil {
		return x.ErrorTimestampHwm
	}
	return nil
}

type QueryErrorFilters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationId   *string                `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3,oneof" json:"operation_id,omitempty"`
	FeatureFqn    *string                `protobuf:"bytes,2,opt,name=feature_fqn,json=featureFqn,proto3,oneof" json:"feature_fqn,omitempty"`
	ResolverFqn   *string                `protobuf:"bytes,3,opt,name=resolver_fqn,json=resolverFqn,proto3,oneof" json:"resolver_fqn,omitempty"`
	QueryName     *string                `protobuf:"bytes,4,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	Message       *string                `protobuf:"bytes,5,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryErrorFilters) Reset() {
	*x = QueryErrorFilters{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryErrorFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrorFilters) ProtoMessage() {}

func (x *QueryErrorFilters) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrorFilters.ProtoReflect.Descriptor instead.
func (*QueryErrorFilters) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{3}
}

func (x *QueryErrorFilters) GetOperationId() string {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return ""
}

func (x *QueryErrorFilters) GetFeatureFqn() string {
	if x != nil && x.FeatureFqn != nil {
		return *x.FeatureFqn
	}
	return ""
}

func (x *QueryErrorFilters) GetResolverFqn() string {
	if x != nil && x.ResolverFqn != nil {
		return *x.ResolverFqn
	}
	return ""
}

func (x *QueryErrorFilters) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *QueryErrorFilters) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type QueryErrorMeta struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Id                          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                        string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Category                    string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Message                     string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	DisplayPrimaryKey           *string                `protobuf:"bytes,5,opt,name=display_primary_key,json=displayPrimaryKey,proto3,oneof" json:"display_primary_key,omitempty"`
	DisplayPrimaryKeyFqn        *string                `protobuf:"bytes,6,opt,name=display_primary_key_fqn,json=displayPrimaryKeyFqn,proto3,oneof" json:"display_primary_key_fqn,omitempty"`
	Feature                     *string                `protobuf:"bytes,7,opt,name=feature,proto3,oneof" json:"feature,omitempty"`
	Resolver                    *string                `protobuf:"bytes,8,opt,name=resolver,proto3,oneof" json:"resolver,omitempty"`
	QueryName                   *string                `protobuf:"bytes,9,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	ExceptionKind               *string                `protobuf:"bytes,10,opt,name=exception_kind,json=exceptionKind,proto3,oneof" json:"exception_kind,omitempty"`
	ExceptionMessage            *string                `protobuf:"bytes,11,opt,name=exception_message,json=exceptionMessage,proto3,oneof" json:"exception_message,omitempty"`
	ExceptionStacktrace         *string                `protobuf:"bytes,12,opt,name=exception_stacktrace,json=exceptionStacktrace,proto3,oneof" json:"exception_stacktrace,omitempty"`
	ExceptionInternalStacktrace *string                `protobuf:"bytes,13,opt,name=exception_internal_stacktrace,json=exceptionInternalStacktrace,proto3,oneof" json:"exception_internal_stacktrace,omitempty"`
	OperationId                 *string                `protobuf:"bytes,14,opt,name=operation_id,json=operationId,proto3,oneof" json:"operation_id,omitempty"`
	DeploymentId                *string                `protobuf:"bytes,15,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
	CreatedAt                   *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *QueryErrorMeta) Reset() {
	*x = QueryErrorMeta{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryErrorMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrorMeta) ProtoMessage() {}

func (x *QueryErrorMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrorMeta.ProtoReflect.Descriptor instead.
func (*QueryErrorMeta) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{4}
}

func (x *QueryErrorMeta) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryErrorMeta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryErrorMeta) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *QueryErrorMeta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryErrorMeta) GetDisplayPrimaryKey() string {
	if x != nil && x.DisplayPrimaryKey != nil {
		return *x.DisplayPrimaryKey
	}
	return ""
}

func (x *QueryErrorMeta) GetDisplayPrimaryKeyFqn() string {
	if x != nil && x.DisplayPrimaryKeyFqn != nil {
		return *x.DisplayPrimaryKeyFqn
	}
	return ""
}

func (x *QueryErrorMeta) GetFeature() string {
	if x != nil && x.Feature != nil {
		return *x.Feature
	}
	return ""
}

func (x *QueryErrorMeta) GetResolver() string {
	if x != nil && x.Resolver != nil {
		return *x.Resolver
	}
	return ""
}

func (x *QueryErrorMeta) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionKind() string {
	if x != nil && x.ExceptionKind != nil {
		return *x.ExceptionKind
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionMessage() string {
	if x != nil && x.ExceptionMessage != nil {
		return *x.ExceptionMessage
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionStacktrace() string {
	if x != nil && x.ExceptionStacktrace != nil {
		return *x.ExceptionStacktrace
	}
	return ""
}

func (x *QueryErrorMeta) GetExceptionInternalStacktrace() string {
	if x != nil && x.ExceptionInternalStacktrace != nil {
		return *x.ExceptionInternalStacktrace
	}
	return ""
}

func (x *QueryErrorMeta) GetOperationId() string {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return ""
}

func (x *QueryErrorMeta) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *QueryErrorMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListQueryErrorsRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Filters   *QueryErrorFilters     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	PageSize  *int32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// This page_token is a b64-encoded ListQueryErrorsPageToken message
	PageToken     *string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueryErrorsRequest) Reset() {
	*x = ListQueryErrorsRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsRequest) ProtoMessage() {}

func (x *ListQueryErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsRequest.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{5}
}

func (x *ListQueryErrorsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetFilters() *QueryErrorFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListQueryErrorsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListQueryErrorsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type ListQueryErrorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryErrors   []*QueryErrorMeta      `protobuf:"bytes,1,rep,name=query_errors,json=queryErrors,proto3" json:"query_errors,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueryErrorsResponse) Reset() {
	*x = ListQueryErrorsResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueryErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueryErrorsResponse) ProtoMessage() {}

func (x *ListQueryErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueryErrorsResponse.ProtoReflect.Descriptor instead.
func (*ListQueryErrorsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{6}
}

func (x *ListQueryErrorsResponse) GetQueryErrors() []*QueryErrorMeta {
	if x != nil {
		return x.QueryErrors
	}
	return nil
}

func (x *ListQueryErrorsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetQueryErrorsChartRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	StartTimestampInclusive *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_timestamp_inclusive,json=startTimestampInclusive,proto3" json:"start_timestamp_inclusive,omitempty"`
	// If not specified, assumes the current timestamp
	// To avoid awkward small window buckets at the end, specify this.
	EndTimestampExclusive *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_timestamp_exclusive,json=endTimestampExclusive,proto3,oneof" json:"end_timestamp_exclusive,omitempty"`
	// The size of each time bucket + how far apart time points are in the chart
	// Ideally a divisor of the total window between end and start ms
	// If not, the bucket start-aligned with end_timestamp_exclusive will be of size total_window % window_period
	WindowPeriod  *durationpb.Duration `protobuf:"bytes,3,opt,name=window_period,json=windowPeriod,proto3" json:"window_period,omitempty"`
	Filters       *QueryErrorFilters   `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryErrorsChartRequest) Reset() {
	*x = GetQueryErrorsChartRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryErrorsChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryErrorsChartRequest) ProtoMessage() {}

func (x *GetQueryErrorsChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryErrorsChartRequest.ProtoReflect.Descriptor instead.
func (*GetQueryErrorsChartRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{7}
}

func (x *GetQueryErrorsChartRequest) GetStartTimestampInclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestampInclusive
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetEndTimestampExclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestampExclusive
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetWindowPeriod() *durationpb.Duration {
	if x != nil {
		return x.WindowPeriod
	}
	return nil
}

func (x *GetQueryErrorsChartRequest) GetFilters() *QueryErrorFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetQueryErrorsChartResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Chart         *v1.DenseTimeSeriesChart `protobuf:"bytes,1,opt,name=chart,proto3" json:"chart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryErrorsChartResponse) Reset() {
	*x = GetQueryErrorsChartResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryErrorsChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryErrorsChartResponse) ProtoMessage() {}

func (x *GetQueryErrorsChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryErrorsChartResponse.ProtoReflect.Descriptor instead.
func (*GetQueryErrorsChartResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{8}
}

func (x *GetQueryErrorsChartResponse) GetChart() *v1.DenseTimeSeriesChart {
	if x != nil {
		return x.Chart
	}
	return nil
}

type GetQueryPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryPlanId   string                 `protobuf:"bytes,1,opt,name=query_plan_id,json=queryPlanId,proto3" json:"query_plan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPlanRequest) Reset() {
	*x = GetQueryPlanRequest{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanRequest) ProtoMessage() {}

func (x *GetQueryPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPlanRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{9}
}

func (x *GetQueryPlanRequest) GetQueryPlanId() string {
	if x != nil {
		return x.QueryPlanId
	}
	return ""
}

type QueryPlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DeploymentId  string                 `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	QueryPlan     string                 `protobuf:"bytes,4,opt,name=query_plan,json=queryPlan,proto3" json:"query_plan,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPlan) Reset() {
	*x = QueryPlan{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlan) ProtoMessage() {}

func (x *QueryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlan.ProtoReflect.Descriptor instead.
func (*QueryPlan) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryPlan) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *QueryPlan) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *QueryPlan) GetQueryPlan() string {
	if x != nil {
		return x.QueryPlan
	}
	return ""
}

func (x *QueryPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetQueryPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryPlan     *QueryPlan             `protobuf:"bytes,1,opt,name=query_plan,json=queryPlan,proto3" json:"query_plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryPlanResponse) Reset() {
	*x = GetQueryPlanResponse{}
	mi := &file_chalk_server_v1_queries_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanResponse) ProtoMessage() {}

func (x *GetQueryPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_queries_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPlanResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_queries_proto_rawDescGZIP(), []int{11}
}

func (x *GetQueryPlanResponse) GetQueryPlan() *QueryPlan {
	if x != nil {
		return x.QueryPlan
	}
	return nil
}

var File_chalk_server_v1_queries_proto protoreflect.FileDescriptor

const file_chalk_server_v1_queries_proto_rawDesc = "" +
	"\n" +
	"\x1dchalk/server/v1/queries.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a)chalk/chart/v1/densetimeserieschart.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"F\n" +
	"!GetQueryPerformanceSummaryRequest\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\"\x95\x01\n" +
	"\"GetQueryPerformanceSummaryResponse\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x124\n" +
	"\x13performance_summary\x18\x02 \x01(\tH\x00R\x12performanceSummary\x88\x01\x01B\x16\n" +
	"\x14_performance_summary\"\x8c\x01\n" +
	"\x18ListQueryErrorsPageToken\x12$\n" +
	"\x0enumeric_id_hwm\x18\x01 \x01(\x03R\fnumericIdHwm\x12J\n" +
	"\x13error_timestamp_hwm\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x11errorTimestampHwm\"\x99\x02\n" +
	"\x11QueryErrorFilters\x12&\n" +
	"\foperation_id\x18\x01 \x01(\tH\x00R\voperationId\x88\x01\x01\x12$\n" +
	"\vfeature_fqn\x18\x02 \x01(\tH\x01R\n" +
	"featureFqn\x88\x01\x01\x12&\n" +
	"\fresolver_fqn\x18\x03 \x01(\tH\x02R\vresolverFqn\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_name\x18\x04 \x01(\tH\x03R\tqueryName\x88\x01\x01\x12\x1d\n" +
	"\amessage\x18\x05 \x01(\tH\x04R\amessage\x88\x01\x01B\x0f\n" +
	"\r_operation_idB\x0e\n" +
	"\f_feature_fqnB\x0f\n" +
	"\r_resolver_fqnB\r\n" +
	"\v_query_nameB\n" +
	"\n" +
	"\b_message\"\x8e\a\n" +
	"\x0eQueryErrorMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x123\n" +
	"\x13display_primary_key\x18\x05 \x01(\tH\x00R\x11displayPrimaryKey\x88\x01\x01\x12:\n" +
	"\x17display_primary_key_fqn\x18\x06 \x01(\tH\x01R\x14displayPrimaryKeyFqn\x88\x01\x01\x12\x1d\n" +
	"\afeature\x18\a \x01(\tH\x02R\afeature\x88\x01\x01\x12\x1f\n" +
	"\bresolver\x18\b \x01(\tH\x03R\bresolver\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_name\x18\t \x01(\tH\x04R\tqueryName\x88\x01\x01\x12*\n" +
	"\x0eexception_kind\x18\n" +
	" \x01(\tH\x05R\rexceptionKind\x88\x01\x01\x120\n" +
	"\x11exception_message\x18\v \x01(\tH\x06R\x10exceptionMessage\x88\x01\x01\x126\n" +
	"\x14exception_stacktrace\x18\f \x01(\tH\aR\x13exceptionStacktrace\x88\x01\x01\x12G\n" +
	"\x1dexception_internal_stacktrace\x18\r \x01(\tH\bR\x1bexceptionInternalStacktrace\x88\x01\x01\x12&\n" +
	"\foperation_id\x18\x0e \x01(\tH\tR\voperationId\x88\x01\x01\x12(\n" +
	"\rdeployment_id\x18\x0f \x01(\tH\n" +
	"R\fdeploymentId\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\x16\n" +
	"\x14_display_primary_keyB\x1a\n" +
	"\x18_display_primary_key_fqnB\n" +
	"\n" +
	"\b_featureB\v\n" +
	"\t_resolverB\r\n" +
	"\v_query_nameB\x11\n" +
	"\x0f_exception_kindB\x14\n" +
	"\x12_exception_messageB\x17\n" +
	"\x15_exception_stacktraceB \n" +
	"\x1e_exception_internal_stacktraceB\x0f\n" +
	"\r_operation_idB\x10\n" +
	"\x0e_deployment_id\"\xab\x02\n" +
	"\x16ListQueryErrorsRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12<\n" +
	"\afilters\x18\x03 \x01(\v2\".chalk.server.v1.QueryErrorFiltersR\afilters\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05H\x00R\bpageSize\x88\x01\x01\x12\"\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tH\x01R\tpageToken\x88\x01\x01B\f\n" +
	"\n" +
	"_page_sizeB\r\n" +
	"\v_page_token\"\x9e\x01\n" +
	"\x17ListQueryErrorsResponse\x12B\n" +
	"\fquery_errors\x18\x01 \x03(\v2\x1f.chalk.server.v1.QueryErrorMetaR\vqueryErrors\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token\"\xe7\x02\n" +
	"\x1aGetQueryErrorsChartRequest\x12V\n" +
	"\x19start_timestamp_inclusive\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x17startTimestampInclusive\x12W\n" +
	"\x17end_timestamp_exclusive\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x15endTimestampExclusive\x88\x01\x01\x12>\n" +
	"\rwindow_period\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\fwindowPeriod\x12<\n" +
	"\afilters\x18\x04 \x01(\v2\".chalk.server.v1.QueryErrorFiltersR\afiltersB\x1a\n" +
	"\x18_end_timestamp_exclusive\"Y\n" +
	"\x1bGetQueryErrorsChartResponse\x12:\n" +
	"\x05chart\x18\x01 \x01(\v2$.chalk.chart.v1.DenseTimeSeriesChartR\x05chart\"9\n" +
	"\x13GetQueryPlanRequest\x12\"\n" +
	"\rquery_plan_id\x18\x01 \x01(\tR\vqueryPlanId\"\xc1\x01\n" +
	"\tQueryPlan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12#\n" +
	"\rdeployment_id\x18\x03 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"query_plan\x18\x04 \x01(\tR\tqueryPlan\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"Q\n" +
	"\x14GetQueryPlanResponse\x129\n" +
	"\n" +
	"query_plan\x18\x01 \x01(\v2\x1a.chalk.server.v1.QueryPlanR\tqueryPlan2\xe1\x03\n" +
	"\x0eQueriesService\x12\x8a\x01\n" +
	"\x1aGetQueryPerformanceSummary\x122.chalk.server.v1.GetQueryPerformanceSummaryRequest\x1a3.chalk.server.v1.GetQueryPerformanceSummaryResponse\"\x03\x80}\x06\x12i\n" +
	"\x0fListQueryErrors\x12'.chalk.server.v1.ListQueryErrorsRequest\x1a(.chalk.server.v1.ListQueryErrorsResponse\"\x03\x80}\x06\x12u\n" +
	"\x13GetQueryErrorsChart\x12+.chalk.server.v1.GetQueryErrorsChartRequest\x1a,.chalk.server.v1.GetQueryErrorsChartResponse\"\x03\x80}\x06\x12`\n" +
	"\fGetQueryPlan\x12$.chalk.server.v1.GetQueryPlanRequest\x1a%.chalk.server.v1.GetQueryPlanResponse\"\x03\x80}\x06B\xbc\x01\n" +
	"\x13com.chalk.server.v1B\fQueriesProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_queries_proto_rawDescOnce sync.Once
	file_chalk_server_v1_queries_proto_rawDescData []byte
)

func file_chalk_server_v1_queries_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_queries_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_queries_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_queries_proto_rawDesc), len(file_chalk_server_v1_queries_proto_rawDesc)))
	})
	return file_chalk_server_v1_queries_proto_rawDescData
}

var file_chalk_server_v1_queries_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_chalk_server_v1_queries_proto_goTypes = []any{
	(*GetQueryPerformanceSummaryRequest)(nil),  // 0: chalk.server.v1.GetQueryPerformanceSummaryRequest
	(*GetQueryPerformanceSummaryResponse)(nil), // 1: chalk.server.v1.GetQueryPerformanceSummaryResponse
	(*ListQueryErrorsPageToken)(nil),           // 2: chalk.server.v1.ListQueryErrorsPageToken
	(*QueryErrorFilters)(nil),                  // 3: chalk.server.v1.QueryErrorFilters
	(*QueryErrorMeta)(nil),                     // 4: chalk.server.v1.QueryErrorMeta
	(*ListQueryErrorsRequest)(nil),             // 5: chalk.server.v1.ListQueryErrorsRequest
	(*ListQueryErrorsResponse)(nil),            // 6: chalk.server.v1.ListQueryErrorsResponse
	(*GetQueryErrorsChartRequest)(nil),         // 7: chalk.server.v1.GetQueryErrorsChartRequest
	(*GetQueryErrorsChartResponse)(nil),        // 8: chalk.server.v1.GetQueryErrorsChartResponse
	(*GetQueryPlanRequest)(nil),                // 9: chalk.server.v1.GetQueryPlanRequest
	(*QueryPlan)(nil),                          // 10: chalk.server.v1.QueryPlan
	(*GetQueryPlanResponse)(nil),               // 11: chalk.server.v1.GetQueryPlanResponse
	(*timestamppb.Timestamp)(nil),              // 12: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                // 13: google.protobuf.Duration
	(*v1.DenseTimeSeriesChart)(nil),            // 14: chalk.chart.v1.DenseTimeSeriesChart
}
var file_chalk_server_v1_queries_proto_depIdxs = []int32{
	12, // 0: chalk.server.v1.ListQueryErrorsPageToken.error_timestamp_hwm:type_name -> google.protobuf.Timestamp
	12, // 1: chalk.server.v1.QueryErrorMeta.created_at:type_name -> google.protobuf.Timestamp
	12, // 2: chalk.server.v1.ListQueryErrorsRequest.start_date:type_name -> google.protobuf.Timestamp
	12, // 3: chalk.server.v1.ListQueryErrorsRequest.end_date:type_name -> google.protobuf.Timestamp
	3,  // 4: chalk.server.v1.ListQueryErrorsRequest.filters:type_name -> chalk.server.v1.QueryErrorFilters
	4,  // 5: chalk.server.v1.ListQueryErrorsResponse.query_errors:type_name -> chalk.server.v1.QueryErrorMeta
	12, // 6: chalk.server.v1.GetQueryErrorsChartRequest.start_timestamp_inclusive:type_name -> google.protobuf.Timestamp
	12, // 7: chalk.server.v1.GetQueryErrorsChartRequest.end_timestamp_exclusive:type_name -> google.protobuf.Timestamp
	13, // 8: chalk.server.v1.GetQueryErrorsChartRequest.window_period:type_name -> google.protobuf.Duration
	3,  // 9: chalk.server.v1.GetQueryErrorsChartRequest.filters:type_name -> chalk.server.v1.QueryErrorFilters
	14, // 10: chalk.server.v1.GetQueryErrorsChartResponse.chart:type_name -> chalk.chart.v1.DenseTimeSeriesChart
	12, // 11: chalk.server.v1.QueryPlan.created_at:type_name -> google.protobuf.Timestamp
	10, // 12: chalk.server.v1.GetQueryPlanResponse.query_plan:type_name -> chalk.server.v1.QueryPlan
	0,  // 13: chalk.server.v1.QueriesService.GetQueryPerformanceSummary:input_type -> chalk.server.v1.GetQueryPerformanceSummaryRequest
	5,  // 14: chalk.server.v1.QueriesService.ListQueryErrors:input_type -> chalk.server.v1.ListQueryErrorsRequest
	7,  // 15: chalk.server.v1.QueriesService.GetQueryErrorsChart:input_type -> chalk.server.v1.GetQueryErrorsChartRequest
	9,  // 16: chalk.server.v1.QueriesService.GetQueryPlan:input_type -> chalk.server.v1.GetQueryPlanRequest
	1,  // 17: chalk.server.v1.QueriesService.GetQueryPerformanceSummary:output_type -> chalk.server.v1.GetQueryPerformanceSummaryResponse
	6,  // 18: chalk.server.v1.QueriesService.ListQueryErrors:output_type -> chalk.server.v1.ListQueryErrorsResponse
	8,  // 19: chalk.server.v1.QueriesService.GetQueryErrorsChart:output_type -> chalk.server.v1.GetQueryErrorsChartResponse
	11, // 20: chalk.server.v1.QueriesService.GetQueryPlan:output_type -> chalk.server.v1.GetQueryPlanResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_queries_proto_init() }
func file_chalk_server_v1_queries_proto_init() {
	if File_chalk_server_v1_queries_proto != nil {
		return
	}
	file_chalk_server_v1_queries_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[3].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[4].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[5].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[6].OneofWrappers = []any{}
	file_chalk_server_v1_queries_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_queries_proto_rawDesc), len(file_chalk_server_v1_queries_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_queries_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_queries_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_queries_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_queries_proto = out.File
	file_chalk_server_v1_queries_proto_goTypes = nil
	file_chalk_server_v1_queries_proto_depIdxs = nil
}
