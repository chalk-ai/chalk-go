// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/status.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckStatus int32

const (
	HealthCheckStatus_HEALTH_CHECK_STATUS_UNSPECIFIED HealthCheckStatus = 0
	HealthCheckStatus_HEALTH_CHECK_STATUS_OK          HealthCheckStatus = 1
	HealthCheckStatus_HEALTH_CHECK_STATUS_FAILING     HealthCheckStatus = 2
)

// Enum value maps for HealthCheckStatus.
var (
	HealthCheckStatus_name = map[int32]string{
		0: "HEALTH_CHECK_STATUS_UNSPECIFIED",
		1: "HEALTH_CHECK_STATUS_OK",
		2: "HEALTH_CHECK_STATUS_FAILING",
	}
	HealthCheckStatus_value = map[string]int32{
		"HEALTH_CHECK_STATUS_UNSPECIFIED": 0,
		"HEALTH_CHECK_STATUS_OK":          1,
		"HEALTH_CHECK_STATUS_FAILING":     2,
	}
)

func (x HealthCheckStatus) Enum() *HealthCheckStatus {
	p := new(HealthCheckStatus)
	*p = x
	return p
}

func (x HealthCheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_status_proto_enumTypes[0].Descriptor()
}

func (HealthCheckStatus) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_status_proto_enumTypes[0]
}

func (x HealthCheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckStatus.Descriptor instead.
func (HealthCheckStatus) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{0}
}

type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        HealthCheckStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=chalk.server.v1.HealthCheckStatus" json:"status,omitempty"`
	Message       *string                `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Latency       *durationpb.Duration   `protobuf:"bytes,4,opt,name=latency,proto3,oneof" json:"latency,omitempty"`
	KubeData      *structpb.Struct       `protobuf:"bytes,5,opt,name=kube_data,json=kubeData,proto3,oneof" json:"kube_data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetStatus() HealthCheckStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckStatus_HEALTH_CHECK_STATUS_UNSPECIFIED
}

func (x *HealthCheck) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *HealthCheck) GetLatency() *durationpb.Duration {
	if x != nil {
		return x.Latency
	}
	return nil
}

func (x *HealthCheck) GetKubeData() *structpb.Struct {
	if x != nil {
		return x.KubeData
	}
	return nil
}

func (x *HealthCheck) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type HealthCheckFilters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All of these fields are optional. If any are specified, they will be AND'd together in a where clause
	// Any len-zero options will be ignored. If multiple options are specified for a given key, they will be OR'd together
	// i.e. works similarly to how you filter products on Amazon -- (size 8 or size 9) AND (color == blue OR color == "red")
	Name          []string            `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	Status        []HealthCheckStatus `protobuf:"varint,2,rep,packed,name=status,proto3,enum=chalk.server.v1.HealthCheckStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckFilters) Reset() {
	*x = HealthCheckFilters{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckFilters) ProtoMessage() {}

func (x *HealthCheckFilters) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckFilters.ProtoReflect.Descriptor instead.
func (*HealthCheckFilters) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckFilters) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *HealthCheckFilters) GetStatus() []HealthCheckStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type CheckHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filters       *HealthCheckFilters    `protobuf:"bytes,1,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckHealthRequest) Reset() {
	*x = CheckHealthRequest{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthRequest) ProtoMessage() {}

func (x *CheckHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{2}
}

func (x *CheckHealthRequest) GetFilters() *HealthCheckFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type CheckHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Checks        []*HealthCheck         `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckHealthResponse) Reset() {
	*x = CheckHealthResponse{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResponse) ProtoMessage() {}

func (x *CheckHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{3}
}

func (x *CheckHealthResponse) GetChecks() []*HealthCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type GetHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filters       *HealthCheckFilters    `protobuf:"bytes,1,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthRequest) Reset() {
	*x = GetHealthRequest{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRequest) ProtoMessage() {}

func (x *GetHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRequest.ProtoReflect.Descriptor instead.
func (*GetHealthRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{4}
}

func (x *GetHealthRequest) GetFilters() *HealthCheckFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Checks        []*HealthCheck         `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthResponse) Reset() {
	*x = GetHealthResponse{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResponse) ProtoMessage() {}

func (x *GetHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResponse.ProtoReflect.Descriptor instead.
func (*GetHealthResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{5}
}

func (x *GetHealthResponse) GetChecks() []*HealthCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type GetClusterMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMetricsRequest) Reset() {
	*x = GetClusterMetricsRequest{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMetricsRequest) ProtoMessage() {}

func (x *GetClusterMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetClusterMetricsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{6}
}

type GetClusterMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       string                 `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMetricsResponse) Reset() {
	*x = GetClusterMetricsResponse{}
	mi := &file_chalk_server_v1_status_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMetricsResponse) ProtoMessage() {}

func (x *GetClusterMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_status_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetClusterMetricsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_status_proto_rawDescGZIP(), []int{7}
}

func (x *GetClusterMetricsResponse) GetMetrics() string {
	if x != nil {
		return x.Metrics
	}
	return ""
}

var File_chalk_server_v1_status_proto protoreflect.FileDescriptor

const file_chalk_server_v1_status_proto_rawDesc = "" +
	"\n" +
	"\x1cchalk/server/v1/status.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x9c\x03\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12:\n" +
	"\x06status\x18\x02 \x01(\x0e2\".chalk.server.v1.HealthCheckStatusR\x06status\x12\x1d\n" +
	"\amessage\x18\x03 \x01(\tH\x00R\amessage\x88\x01\x01\x128\n" +
	"\alatency\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x01R\alatency\x88\x01\x01\x129\n" +
	"\tkube_data\x18\x05 \x01(\v2\x17.google.protobuf.StructH\x02R\bkubeData\x88\x01\x01\x12F\n" +
	"\bmetadata\x18\x06 \x03(\v2*.chalk.server.v1.HealthCheck.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\n" +
	"\n" +
	"\b_messageB\n" +
	"\n" +
	"\b_latencyB\f\n" +
	"\n" +
	"_kube_data\"d\n" +
	"\x12HealthCheckFilters\x12\x12\n" +
	"\x04name\x18\x01 \x03(\tR\x04name\x12:\n" +
	"\x06status\x18\x02 \x03(\x0e2\".chalk.server.v1.HealthCheckStatusR\x06status\"d\n" +
	"\x12CheckHealthRequest\x12B\n" +
	"\afilters\x18\x01 \x01(\v2#.chalk.server.v1.HealthCheckFiltersH\x00R\afilters\x88\x01\x01B\n" +
	"\n" +
	"\b_filters\"K\n" +
	"\x13CheckHealthResponse\x124\n" +
	"\x06checks\x18\x01 \x03(\v2\x1c.chalk.server.v1.HealthCheckR\x06checks\"b\n" +
	"\x10GetHealthRequest\x12B\n" +
	"\afilters\x18\x01 \x01(\v2#.chalk.server.v1.HealthCheckFiltersH\x00R\afilters\x88\x01\x01B\n" +
	"\n" +
	"\b_filters\"I\n" +
	"\x11GetHealthResponse\x124\n" +
	"\x06checks\x18\x01 \x03(\v2\x1c.chalk.server.v1.HealthCheckR\x06checks\"\x1a\n" +
	"\x18GetClusterMetricsRequest\"5\n" +
	"\x19GetClusterMetricsResponse\x12\x18\n" +
	"\ametrics\x18\x01 \x01(\tR\ametrics*u\n" +
	"\x11HealthCheckStatus\x12#\n" +
	"\x1fHEALTH_CHECK_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16HEALTH_CHECK_STATUS_OK\x10\x01\x12\x1f\n" +
	"\x1bHEALTH_CHECK_STATUS_FAILING\x10\x022\xc1\x02\n" +
	"\rHealthService\x12`\n" +
	"\vCheckHealth\x12#.chalk.server.v1.CheckHealthRequest\x1a$.chalk.server.v1.CheckHealthResponse\"\x06\x80}\x01\x90\x02\x01\x12Z\n" +
	"\tGetHealth\x12!.chalk.server.v1.GetHealthRequest\x1a\".chalk.server.v1.GetHealthResponse\"\x06\x80}\x02\x90\x02\x01\x12r\n" +
	"\x11GetClusterMetrics\x12).chalk.server.v1.GetClusterMetricsRequest\x1a*.chalk.server.v1.GetClusterMetricsResponse\"\x06\x80}\x02\x90\x02\x01B\xbb\x01\n" +
	"\x13com.chalk.server.v1B\vStatusProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_status_proto_rawDescOnce sync.Once
	file_chalk_server_v1_status_proto_rawDescData []byte
)

func file_chalk_server_v1_status_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_status_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_status_proto_rawDesc), len(file_chalk_server_v1_status_proto_rawDesc)))
	})
	return file_chalk_server_v1_status_proto_rawDescData
}

var file_chalk_server_v1_status_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_server_v1_status_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chalk_server_v1_status_proto_goTypes = []any{
	(HealthCheckStatus)(0),            // 0: chalk.server.v1.HealthCheckStatus
	(*HealthCheck)(nil),               // 1: chalk.server.v1.HealthCheck
	(*HealthCheckFilters)(nil),        // 2: chalk.server.v1.HealthCheckFilters
	(*CheckHealthRequest)(nil),        // 3: chalk.server.v1.CheckHealthRequest
	(*CheckHealthResponse)(nil),       // 4: chalk.server.v1.CheckHealthResponse
	(*GetHealthRequest)(nil),          // 5: chalk.server.v1.GetHealthRequest
	(*GetHealthResponse)(nil),         // 6: chalk.server.v1.GetHealthResponse
	(*GetClusterMetricsRequest)(nil),  // 7: chalk.server.v1.GetClusterMetricsRequest
	(*GetClusterMetricsResponse)(nil), // 8: chalk.server.v1.GetClusterMetricsResponse
	nil,                               // 9: chalk.server.v1.HealthCheck.MetadataEntry
	(*durationpb.Duration)(nil),       // 10: google.protobuf.Duration
	(*structpb.Struct)(nil),           // 11: google.protobuf.Struct
}
var file_chalk_server_v1_status_proto_depIdxs = []int32{
	0,  // 0: chalk.server.v1.HealthCheck.status:type_name -> chalk.server.v1.HealthCheckStatus
	10, // 1: chalk.server.v1.HealthCheck.latency:type_name -> google.protobuf.Duration
	11, // 2: chalk.server.v1.HealthCheck.kube_data:type_name -> google.protobuf.Struct
	9,  // 3: chalk.server.v1.HealthCheck.metadata:type_name -> chalk.server.v1.HealthCheck.MetadataEntry
	0,  // 4: chalk.server.v1.HealthCheckFilters.status:type_name -> chalk.server.v1.HealthCheckStatus
	2,  // 5: chalk.server.v1.CheckHealthRequest.filters:type_name -> chalk.server.v1.HealthCheckFilters
	1,  // 6: chalk.server.v1.CheckHealthResponse.checks:type_name -> chalk.server.v1.HealthCheck
	2,  // 7: chalk.server.v1.GetHealthRequest.filters:type_name -> chalk.server.v1.HealthCheckFilters
	1,  // 8: chalk.server.v1.GetHealthResponse.checks:type_name -> chalk.server.v1.HealthCheck
	3,  // 9: chalk.server.v1.HealthService.CheckHealth:input_type -> chalk.server.v1.CheckHealthRequest
	5,  // 10: chalk.server.v1.HealthService.GetHealth:input_type -> chalk.server.v1.GetHealthRequest
	7,  // 11: chalk.server.v1.HealthService.GetClusterMetrics:input_type -> chalk.server.v1.GetClusterMetricsRequest
	4,  // 12: chalk.server.v1.HealthService.CheckHealth:output_type -> chalk.server.v1.CheckHealthResponse
	6,  // 13: chalk.server.v1.HealthService.GetHealth:output_type -> chalk.server.v1.GetHealthResponse
	8,  // 14: chalk.server.v1.HealthService.GetClusterMetrics:output_type -> chalk.server.v1.GetClusterMetricsResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_status_proto_init() }
func file_chalk_server_v1_status_proto_init() {
	if File_chalk_server_v1_status_proto != nil {
		return
	}
	file_chalk_server_v1_status_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_status_proto_msgTypes[2].OneofWrappers = []any{}
	file_chalk_server_v1_status_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_status_proto_rawDesc), len(file_chalk_server_v1_status_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_status_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_status_proto_depIdxs,
		EnumInfos:         file_chalk_server_v1_status_proto_enumTypes,
		MessageInfos:      file_chalk_server_v1_status_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_status_proto = out.File
	file_chalk_server_v1_status_proto_goTypes = nil
	file_chalk_server_v1_status_proto_depIdxs = nil
}
