// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/server/v1/cloud_credentials.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CloudCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId string `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind   string `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"` // "gcp" or "aws"
	// The spec field contains either AWSCloudConfig or GCPCloudConfig as JSON
	Spec      *structpb.Struct       `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CloudCredentials) Reset() {
	*x = CloudCredentials{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudCredentials) ProtoMessage() {}

func (x *CloudCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudCredentials.ProtoReflect.Descriptor instead.
func (*CloudCredentials) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{0}
}

func (x *CloudCredentials) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudCredentials) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *CloudCredentials) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudCredentials) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CloudCredentials) GetSpec() *structpb.Struct {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CloudCredentials) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CloudCredentials) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCloudCredentialsRequest) Reset() {
	*x = ListCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudCredentialsRequest) ProtoMessage() {}

func (x *ListCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ListCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{1}
}

type ListCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*CloudCredentials `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *ListCloudCredentialsResponse) Reset() {
	*x = ListCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudCredentialsResponse) ProtoMessage() {}

func (x *ListCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*ListCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{2}
}

func (x *ListCloudCredentialsResponse) GetCredentials() []*CloudCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type CreateCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"` // "gcp" or "aws"
	// Must be a valid AWSCloudConfig or GCPCloudConfig based on kind
	//
	// Types that are assignable to Config:
	//
	//	*CreateCloudCredentialsRequest_AwsConfig
	//	*CreateCloudCredentialsRequest_GcpConfig
	Config isCreateCloudCredentialsRequest_Config `protobuf_oneof:"config"`
}

func (x *CreateCloudCredentialsRequest) Reset() {
	*x = CreateCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudCredentialsRequest) ProtoMessage() {}

func (x *CreateCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCloudCredentialsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCloudCredentialsRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (m *CreateCloudCredentialsRequest) GetConfig() isCreateCloudCredentialsRequest_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *CreateCloudCredentialsRequest) GetAwsConfig() *AWSCloudConfig {
	if x, ok := x.GetConfig().(*CreateCloudCredentialsRequest_AwsConfig); ok {
		return x.AwsConfig
	}
	return nil
}

func (x *CreateCloudCredentialsRequest) GetGcpConfig() *GCPCloudConfig {
	if x, ok := x.GetConfig().(*CreateCloudCredentialsRequest_GcpConfig); ok {
		return x.GcpConfig
	}
	return nil
}

type isCreateCloudCredentialsRequest_Config interface {
	isCreateCloudCredentialsRequest_Config()
}

type CreateCloudCredentialsRequest_AwsConfig struct {
	AwsConfig *AWSCloudConfig `protobuf:"bytes,3,opt,name=aws_config,json=awsConfig,proto3,oneof"`
}

type CreateCloudCredentialsRequest_GcpConfig struct {
	GcpConfig *GCPCloudConfig `protobuf:"bytes,4,opt,name=gcp_config,json=gcpConfig,proto3,oneof"`
}

func (*CreateCloudCredentialsRequest_AwsConfig) isCreateCloudCredentialsRequest_Config() {}

func (*CreateCloudCredentialsRequest_GcpConfig) isCreateCloudCredentialsRequest_Config() {}

type CreateCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials *CloudCredentials `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *CreateCloudCredentialsResponse) Reset() {
	*x = CreateCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudCredentialsResponse) ProtoMessage() {}

func (x *CreateCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*CreateCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCloudCredentialsResponse) GetCredentials() *CloudCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DeleteCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCloudCredentialsRequest) Reset() {
	*x = DeleteCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudCredentialsRequest) ProtoMessage() {}

func (x *DeleteCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*DeleteCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCloudCredentialsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCloudCredentialsResponse) Reset() {
	*x = DeleteCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudCredentialsResponse) ProtoMessage() {}

func (x *DeleteCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*DeleteCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{6}
}

var File_chalk_server_v1_cloud_credentials_proto protoreflect.FileDescriptor

var file_chalk_server_v1_cloud_credentials_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x63, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x40, 0x0a, 0x0a, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x40, 0x0a, 0x0a, 0x67, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x50, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x67, 0x63, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x65, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe1, 0x03, 0x0a, 0x1e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x06, 0x80, 0x7d, 0x02, 0x90, 0x02, 0x01, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x80, 0x7d, 0x0a, 0x8a, 0xd3, 0x0e, 0x1d, 0x08, 0x02, 0x12, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x80, 0x7d, 0x0a, 0x8a, 0xd3, 0x0e, 0x1d, 0x08, 0x02,
	0x12, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x20,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42, 0xc5, 0x01, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x42, 0x15, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x61,
	0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02, 0x0f,
	0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_server_v1_cloud_credentials_proto_rawDescOnce sync.Once
	file_chalk_server_v1_cloud_credentials_proto_rawDescData = file_chalk_server_v1_cloud_credentials_proto_rawDesc
)

func file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_cloud_credentials_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_cloud_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_server_v1_cloud_credentials_proto_rawDescData)
	})
	return file_chalk_server_v1_cloud_credentials_proto_rawDescData
}

var file_chalk_server_v1_cloud_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chalk_server_v1_cloud_credentials_proto_goTypes = []any{
	(*CloudCredentials)(nil),               // 0: chalk.server.v1.CloudCredentials
	(*ListCloudCredentialsRequest)(nil),    // 1: chalk.server.v1.ListCloudCredentialsRequest
	(*ListCloudCredentialsResponse)(nil),   // 2: chalk.server.v1.ListCloudCredentialsResponse
	(*CreateCloudCredentialsRequest)(nil),  // 3: chalk.server.v1.CreateCloudCredentialsRequest
	(*CreateCloudCredentialsResponse)(nil), // 4: chalk.server.v1.CreateCloudCredentialsResponse
	(*DeleteCloudCredentialsRequest)(nil),  // 5: chalk.server.v1.DeleteCloudCredentialsRequest
	(*DeleteCloudCredentialsResponse)(nil), // 6: chalk.server.v1.DeleteCloudCredentialsResponse
	(*structpb.Struct)(nil),                // 7: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),          // 8: google.protobuf.Timestamp
	(*AWSCloudConfig)(nil),                 // 9: chalk.server.v1.AWSCloudConfig
	(*GCPCloudConfig)(nil),                 // 10: chalk.server.v1.GCPCloudConfig
}
var file_chalk_server_v1_cloud_credentials_proto_depIdxs = []int32{
	7,  // 0: chalk.server.v1.CloudCredentials.spec:type_name -> google.protobuf.Struct
	8,  // 1: chalk.server.v1.CloudCredentials.created_at:type_name -> google.protobuf.Timestamp
	8,  // 2: chalk.server.v1.CloudCredentials.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: chalk.server.v1.ListCloudCredentialsResponse.credentials:type_name -> chalk.server.v1.CloudCredentials
	9,  // 4: chalk.server.v1.CreateCloudCredentialsRequest.aws_config:type_name -> chalk.server.v1.AWSCloudConfig
	10, // 5: chalk.server.v1.CreateCloudCredentialsRequest.gcp_config:type_name -> chalk.server.v1.GCPCloudConfig
	0,  // 6: chalk.server.v1.CreateCloudCredentialsResponse.credentials:type_name -> chalk.server.v1.CloudCredentials
	1,  // 7: chalk.server.v1.CloudAccountCredentialsService.ListCloudCredentials:input_type -> chalk.server.v1.ListCloudCredentialsRequest
	3,  // 8: chalk.server.v1.CloudAccountCredentialsService.CreateCloudCredentials:input_type -> chalk.server.v1.CreateCloudCredentialsRequest
	5,  // 9: chalk.server.v1.CloudAccountCredentialsService.DeleteCloudCredentials:input_type -> chalk.server.v1.DeleteCloudCredentialsRequest
	2,  // 10: chalk.server.v1.CloudAccountCredentialsService.ListCloudCredentials:output_type -> chalk.server.v1.ListCloudCredentialsResponse
	4,  // 11: chalk.server.v1.CloudAccountCredentialsService.CreateCloudCredentials:output_type -> chalk.server.v1.CreateCloudCredentialsResponse
	6,  // 12: chalk.server.v1.CloudAccountCredentialsService.DeleteCloudCredentials:output_type -> chalk.server.v1.DeleteCloudCredentialsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_cloud_credentials_proto_init() }
func file_chalk_server_v1_cloud_credentials_proto_init() {
	if File_chalk_server_v1_cloud_credentials_proto != nil {
		return
	}
	file_chalk_server_v1_environment_proto_init()
	file_chalk_server_v1_cloud_credentials_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateCloudCredentialsRequest_AwsConfig)(nil),
		(*CreateCloudCredentialsRequest_GcpConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_server_v1_cloud_credentials_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_cloud_credentials_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_cloud_credentials_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_cloud_credentials_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_cloud_credentials_proto = out.File
	file_chalk_server_v1_cloud_credentials_proto_rawDesc = nil
	file_chalk_server_v1_cloud_credentials_proto_goTypes = nil
	file_chalk_server_v1_cloud_credentials_proto_depIdxs = nil
}
