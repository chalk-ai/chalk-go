// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/server/v1/cloud_credentials.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCloudCredentialsRequest) Reset() {
	*x = ListCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudCredentialsRequest) ProtoMessage() {}

func (x *ListCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ListCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{0}
}

type ListCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*CloudCredentialsResponse `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *ListCloudCredentialsResponse) Reset() {
	*x = ListCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudCredentialsResponse) ProtoMessage() {}

func (x *ListCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*ListCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{1}
}

func (x *ListCloudCredentialsResponse) GetCredentials() []*CloudCredentialsResponse {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type CloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId    string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind      string                 `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"` // "gcp" or "aws"
	Spec      *CloudConfig           `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CloudCredentialsResponse) Reset() {
	*x = CloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudCredentialsResponse) ProtoMessage() {}

func (x *CloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*CloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{2}
}

func (x *CloudCredentialsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudCredentialsResponse) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *CloudCredentialsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudCredentialsResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CloudCredentialsResponse) GetSpec() *CloudConfig {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CloudCredentialsResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CloudCredentialsResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind   string       `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"` // "gcp" or "aws"
	Config *CloudConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CloudCredentialsRequest) Reset() {
	*x = CloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudCredentialsRequest) ProtoMessage() {}

func (x *CloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*CloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{3}
}

func (x *CloudCredentialsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudCredentialsRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CloudCredentialsRequest) GetConfig() *CloudConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials *CloudCredentialsRequest `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *CreateCloudCredentialsRequest) Reset() {
	*x = CreateCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudCredentialsRequest) ProtoMessage() {}

func (x *CreateCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCloudCredentialsRequest) GetCredentials() *CloudCredentialsRequest {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type CreateCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials *CloudCredentialsResponse `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *CreateCloudCredentialsResponse) Reset() {
	*x = CreateCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudCredentialsResponse) ProtoMessage() {}

func (x *CreateCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*CreateCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCloudCredentialsResponse) GetCredentials() *CloudCredentialsResponse {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type GetCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCloudCredentialsRequest) Reset() {
	*x = GetCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudCredentialsRequest) ProtoMessage() {}

func (x *GetCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GetCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{6}
}

func (x *GetCloudCredentialsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials *CloudCredentialsResponse `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *GetCloudCredentialsResponse) Reset() {
	*x = GetCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudCredentialsResponse) ProtoMessage() {}

func (x *GetCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GetCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{7}
}

func (x *GetCloudCredentialsResponse) GetCredentials() *CloudCredentialsResponse {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DeleteCloudCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCloudCredentialsRequest) Reset() {
	*x = DeleteCloudCredentialsRequest{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCloudCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudCredentialsRequest) ProtoMessage() {}

func (x *DeleteCloudCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudCredentialsRequest.ProtoReflect.Descriptor instead.
func (*DeleteCloudCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCloudCredentialsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCloudCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCloudCredentialsResponse) Reset() {
	*x = DeleteCloudCredentialsResponse{}
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCloudCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudCredentialsResponse) ProtoMessage() {}

func (x *DeleteCloudCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cloud_credentials_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudCredentialsResponse.ProtoReflect.Descriptor instead.
func (*DeleteCloudCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP(), []int{9}
}

var File_chalk_server_v1_cloud_credentials_proto protoreflect.FileDescriptor

var file_chalk_server_v1_cloud_credentials_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x17,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6b, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68,
	0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x22, 0x6d, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x6a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdb,
	0x04, 0x0a, 0x1e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x7b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x80, 0x7d, 0x02, 0x90, 0x02, 0x01, 0x12, 0x78,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x06, 0x80, 0x7d, 0x02, 0x90, 0x02, 0x01, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x80, 0x7d, 0x1a, 0x8a, 0xd3, 0x0e, 0x1d, 0x08, 0x02, 0x12,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x80, 0x7d, 0x1a, 0x8a, 0xd3, 0x0e, 0x1d, 0x08,
	0x02, 0x12, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x20, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42, 0xc5, 0x01, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x42, 0x15, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d,
	0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02,
	0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_server_v1_cloud_credentials_proto_rawDescOnce sync.Once
	file_chalk_server_v1_cloud_credentials_proto_rawDescData = file_chalk_server_v1_cloud_credentials_proto_rawDesc
)

func file_chalk_server_v1_cloud_credentials_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_cloud_credentials_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_cloud_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_server_v1_cloud_credentials_proto_rawDescData)
	})
	return file_chalk_server_v1_cloud_credentials_proto_rawDescData
}

var file_chalk_server_v1_cloud_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chalk_server_v1_cloud_credentials_proto_goTypes = []any{
	(*ListCloudCredentialsRequest)(nil),    // 0: chalk.server.v1.ListCloudCredentialsRequest
	(*ListCloudCredentialsResponse)(nil),   // 1: chalk.server.v1.ListCloudCredentialsResponse
	(*CloudCredentialsResponse)(nil),       // 2: chalk.server.v1.CloudCredentialsResponse
	(*CloudCredentialsRequest)(nil),        // 3: chalk.server.v1.CloudCredentialsRequest
	(*CreateCloudCredentialsRequest)(nil),  // 4: chalk.server.v1.CreateCloudCredentialsRequest
	(*CreateCloudCredentialsResponse)(nil), // 5: chalk.server.v1.CreateCloudCredentialsResponse
	(*GetCloudCredentialsRequest)(nil),     // 6: chalk.server.v1.GetCloudCredentialsRequest
	(*GetCloudCredentialsResponse)(nil),    // 7: chalk.server.v1.GetCloudCredentialsResponse
	(*DeleteCloudCredentialsRequest)(nil),  // 8: chalk.server.v1.DeleteCloudCredentialsRequest
	(*DeleteCloudCredentialsResponse)(nil), // 9: chalk.server.v1.DeleteCloudCredentialsResponse
	(*CloudConfig)(nil),                    // 10: chalk.server.v1.CloudConfig
	(*timestamppb.Timestamp)(nil),          // 11: google.protobuf.Timestamp
}
var file_chalk_server_v1_cloud_credentials_proto_depIdxs = []int32{
	2,  // 0: chalk.server.v1.ListCloudCredentialsResponse.credentials:type_name -> chalk.server.v1.CloudCredentialsResponse
	10, // 1: chalk.server.v1.CloudCredentialsResponse.spec:type_name -> chalk.server.v1.CloudConfig
	11, // 2: chalk.server.v1.CloudCredentialsResponse.created_at:type_name -> google.protobuf.Timestamp
	11, // 3: chalk.server.v1.CloudCredentialsResponse.updated_at:type_name -> google.protobuf.Timestamp
	10, // 4: chalk.server.v1.CloudCredentialsRequest.config:type_name -> chalk.server.v1.CloudConfig
	3,  // 5: chalk.server.v1.CreateCloudCredentialsRequest.credentials:type_name -> chalk.server.v1.CloudCredentialsRequest
	2,  // 6: chalk.server.v1.CreateCloudCredentialsResponse.credentials:type_name -> chalk.server.v1.CloudCredentialsResponse
	2,  // 7: chalk.server.v1.GetCloudCredentialsResponse.credentials:type_name -> chalk.server.v1.CloudCredentialsResponse
	0,  // 8: chalk.server.v1.CloudAccountCredentialsService.ListCloudCredentials:input_type -> chalk.server.v1.ListCloudCredentialsRequest
	6,  // 9: chalk.server.v1.CloudAccountCredentialsService.GetCloudCredentials:input_type -> chalk.server.v1.GetCloudCredentialsRequest
	4,  // 10: chalk.server.v1.CloudAccountCredentialsService.CreateCloudCredentials:input_type -> chalk.server.v1.CreateCloudCredentialsRequest
	8,  // 11: chalk.server.v1.CloudAccountCredentialsService.DeleteCloudCredentials:input_type -> chalk.server.v1.DeleteCloudCredentialsRequest
	1,  // 12: chalk.server.v1.CloudAccountCredentialsService.ListCloudCredentials:output_type -> chalk.server.v1.ListCloudCredentialsResponse
	7,  // 13: chalk.server.v1.CloudAccountCredentialsService.GetCloudCredentials:output_type -> chalk.server.v1.GetCloudCredentialsResponse
	5,  // 14: chalk.server.v1.CloudAccountCredentialsService.CreateCloudCredentials:output_type -> chalk.server.v1.CreateCloudCredentialsResponse
	9,  // 15: chalk.server.v1.CloudAccountCredentialsService.DeleteCloudCredentials:output_type -> chalk.server.v1.DeleteCloudCredentialsResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_cloud_credentials_proto_init() }
func file_chalk_server_v1_cloud_credentials_proto_init() {
	if File_chalk_server_v1_cloud_credentials_proto != nil {
		return
	}
	file_chalk_server_v1_environment_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_server_v1_cloud_credentials_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_cloud_credentials_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_cloud_credentials_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_cloud_credentials_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_cloud_credentials_proto = out.File
	file_chalk_server_v1_cloud_credentials_proto_rawDesc = nil
	file_chalk_server_v1_cloud_credentials_proto_goTypes = nil
	file_chalk_server_v1_cloud_credentials_proto_depIdxs = nil
}
