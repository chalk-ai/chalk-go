// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: chalk/server/v1/named_query.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddNamedQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnvironmentId  string                          `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DeploymentId   string                          `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	QueryVersion   *string                         `protobuf:"bytes,4,opt,name=query_version,json=queryVersion,proto3,oneof" json:"query_version,omitempty"`
	Input          []string                        `protobuf:"bytes,5,rep,name=input,proto3" json:"input,omitempty"`
	Output         []string                        `protobuf:"bytes,6,rep,name=output,proto3" json:"output,omitempty"`
	Tags           []string                        `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Description    *string                         `protobuf:"bytes,8,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Owner          *string                         `protobuf:"bytes,9,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Meta           map[string]string               `protobuf:"bytes,10,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Staleness      map[string]*durationpb.Duration `protobuf:"bytes,11,rep,name=staleness,proto3" json:"staleness,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PlannerOptions map[string]string               `protobuf:"bytes,12,rep,name=planner_options,json=plannerOptions,proto3" json:"planner_options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FileName       string                          `protobuf:"bytes,13,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *AddNamedQueryRequest) Reset() {
	*x = AddNamedQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNamedQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNamedQueryRequest) ProtoMessage() {}

func (x *AddNamedQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNamedQueryRequest.ProtoReflect.Descriptor instead.
func (*AddNamedQueryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{0}
}

func (x *AddNamedQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNamedQueryRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *AddNamedQueryRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *AddNamedQueryRequest) GetQueryVersion() string {
	if x != nil && x.QueryVersion != nil {
		return *x.QueryVersion
	}
	return ""
}

func (x *AddNamedQueryRequest) GetInput() []string {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *AddNamedQueryRequest) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *AddNamedQueryRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AddNamedQueryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *AddNamedQueryRequest) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *AddNamedQueryRequest) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AddNamedQueryRequest) GetStaleness() map[string]*durationpb.Duration {
	if x != nil {
		return x.Staleness
	}
	return nil
}

func (x *AddNamedQueryRequest) GetPlannerOptions() map[string]string {
	if x != nil {
		return x.PlannerOptions
	}
	return nil
}

func (x *AddNamedQueryRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type AddNamedQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamedQuery *v1.NamedQuery `protobuf:"bytes,1,opt,name=named_query,json=namedQuery,proto3" json:"named_query,omitempty"`
}

func (x *AddNamedQueryResponse) Reset() {
	*x = AddNamedQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNamedQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNamedQueryResponse) ProtoMessage() {}

func (x *AddNamedQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNamedQueryResponse.ProtoReflect.Descriptor instead.
func (*AddNamedQueryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{1}
}

func (x *AddNamedQueryResponse) GetNamedQuery() *v1.NamedQuery {
	if x != nil {
		return x.NamedQuery
	}
	return nil
}

type GetAllNamedQueriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
}

func (x *GetAllNamedQueriesRequest) Reset() {
	*x = GetAllNamedQueriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNamedQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNamedQueriesRequest) ProtoMessage() {}

func (x *GetAllNamedQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNamedQueriesRequest.ProtoReflect.Descriptor instead.
func (*GetAllNamedQueriesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllNamedQueriesRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetAllNamedQueriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamedQueries []*v1.NamedQuery `protobuf:"bytes,1,rep,name=named_queries,json=namedQueries,proto3" json:"named_queries,omitempty"`
}

func (x *GetAllNamedQueriesResponse) Reset() {
	*x = GetAllNamedQueriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNamedQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNamedQueriesResponse) ProtoMessage() {}

func (x *GetAllNamedQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNamedQueriesResponse.ProtoReflect.Descriptor instead.
func (*GetAllNamedQueriesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllNamedQueriesResponse) GetNamedQueries() []*v1.NamedQuery {
	if x != nil {
		return x.NamedQueries
	}
	return nil
}

type GetAllNamedQueriesActiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllNamedQueriesActiveDeploymentRequest) Reset() {
	*x = GetAllNamedQueriesActiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNamedQueriesActiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNamedQueriesActiveDeploymentRequest) ProtoMessage() {}

func (x *GetAllNamedQueriesActiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNamedQueriesActiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetAllNamedQueriesActiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{4}
}

type GetAllNamedQueriesActiveDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamedQueries []*v1.NamedQuery `protobuf:"bytes,1,rep,name=named_queries,json=namedQueries,proto3" json:"named_queries,omitempty"`
}

func (x *GetAllNamedQueriesActiveDeploymentResponse) Reset() {
	*x = GetAllNamedQueriesActiveDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chalk_server_v1_named_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllNamedQueriesActiveDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNamedQueriesActiveDeploymentResponse) ProtoMessage() {}

func (x *GetAllNamedQueriesActiveDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_named_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNamedQueriesActiveDeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetAllNamedQueriesActiveDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_named_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllNamedQueriesActiveDeploymentResponse) GetNamedQueries() []*v1.NamedQuery {
	if x != nil {
		return x.NamedQueries
	}
	return nil
}

var File_chalk_server_v1_named_query_proto protoreflect.FileDescriptor

var file_chalk_server_v1_named_query_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbf, 0x06, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x52, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x62, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x57, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x40, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x29, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x32, 0x9a, 0x03, 0x0a, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x80, 0x7d, 0x0b,
	0x90, 0x02, 0x01, 0x12, 0xa5, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x06, 0x80, 0x7d, 0x0b, 0x90, 0x02, 0x01, 0x12, 0x66, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x80, 0x7d, 0x0c,
	0x90, 0x02, 0x02, 0x42, 0xbf, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b,
	0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa,
	0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_server_v1_named_query_proto_rawDescOnce sync.Once
	file_chalk_server_v1_named_query_proto_rawDescData = file_chalk_server_v1_named_query_proto_rawDesc
)

func file_chalk_server_v1_named_query_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_named_query_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_named_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_server_v1_named_query_proto_rawDescData)
	})
	return file_chalk_server_v1_named_query_proto_rawDescData
}

var file_chalk_server_v1_named_query_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chalk_server_v1_named_query_proto_goTypes = []any{
	(*AddNamedQueryRequest)(nil),                       // 0: chalk.server.v1.AddNamedQueryRequest
	(*AddNamedQueryResponse)(nil),                      // 1: chalk.server.v1.AddNamedQueryResponse
	(*GetAllNamedQueriesRequest)(nil),                  // 2: chalk.server.v1.GetAllNamedQueriesRequest
	(*GetAllNamedQueriesResponse)(nil),                 // 3: chalk.server.v1.GetAllNamedQueriesResponse
	(*GetAllNamedQueriesActiveDeploymentRequest)(nil),  // 4: chalk.server.v1.GetAllNamedQueriesActiveDeploymentRequest
	(*GetAllNamedQueriesActiveDeploymentResponse)(nil), // 5: chalk.server.v1.GetAllNamedQueriesActiveDeploymentResponse
	nil,                         // 6: chalk.server.v1.AddNamedQueryRequest.MetaEntry
	nil,                         // 7: chalk.server.v1.AddNamedQueryRequest.StalenessEntry
	nil,                         // 8: chalk.server.v1.AddNamedQueryRequest.PlannerOptionsEntry
	(*v1.NamedQuery)(nil),       // 9: chalk.graph.v1.NamedQuery
	(*durationpb.Duration)(nil), // 10: google.protobuf.Duration
}
var file_chalk_server_v1_named_query_proto_depIdxs = []int32{
	6,  // 0: chalk.server.v1.AddNamedQueryRequest.meta:type_name -> chalk.server.v1.AddNamedQueryRequest.MetaEntry
	7,  // 1: chalk.server.v1.AddNamedQueryRequest.staleness:type_name -> chalk.server.v1.AddNamedQueryRequest.StalenessEntry
	8,  // 2: chalk.server.v1.AddNamedQueryRequest.planner_options:type_name -> chalk.server.v1.AddNamedQueryRequest.PlannerOptionsEntry
	9,  // 3: chalk.server.v1.AddNamedQueryResponse.named_query:type_name -> chalk.graph.v1.NamedQuery
	9,  // 4: chalk.server.v1.GetAllNamedQueriesResponse.named_queries:type_name -> chalk.graph.v1.NamedQuery
	9,  // 5: chalk.server.v1.GetAllNamedQueriesActiveDeploymentResponse.named_queries:type_name -> chalk.graph.v1.NamedQuery
	10, // 6: chalk.server.v1.AddNamedQueryRequest.StalenessEntry.value:type_name -> google.protobuf.Duration
	2,  // 7: chalk.server.v1.NamedQueryService.GetAllNamedQueries:input_type -> chalk.server.v1.GetAllNamedQueriesRequest
	4,  // 8: chalk.server.v1.NamedQueryService.GetAllNamedQueriesActiveDeployment:input_type -> chalk.server.v1.GetAllNamedQueriesActiveDeploymentRequest
	0,  // 9: chalk.server.v1.NamedQueryService.AddNamedQuery:input_type -> chalk.server.v1.AddNamedQueryRequest
	3,  // 10: chalk.server.v1.NamedQueryService.GetAllNamedQueries:output_type -> chalk.server.v1.GetAllNamedQueriesResponse
	5,  // 11: chalk.server.v1.NamedQueryService.GetAllNamedQueriesActiveDeployment:output_type -> chalk.server.v1.GetAllNamedQueriesActiveDeploymentResponse
	1,  // 12: chalk.server.v1.NamedQueryService.AddNamedQuery:output_type -> chalk.server.v1.AddNamedQueryResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_named_query_proto_init() }
func file_chalk_server_v1_named_query_proto_init() {
	if File_chalk_server_v1_named_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chalk_server_v1_named_query_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddNamedQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_server_v1_named_query_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddNamedQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_server_v1_named_query_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllNamedQueriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_server_v1_named_query_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllNamedQueriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_server_v1_named_query_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllNamedQueriesActiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chalk_server_v1_named_query_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllNamedQueriesActiveDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chalk_server_v1_named_query_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_server_v1_named_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_named_query_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_named_query_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_named_query_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_named_query_proto = out.File
	file_chalk_server_v1_named_query_proto_rawDesc = nil
	file_chalk_server_v1_named_query_proto_goTypes = nil
	file_chalk_server_v1_named_query_proto_depIdxs = nil
}
