// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/server/v1/scheduler.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManualTriggerScheduledQueryRequest struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	CronQueryId          int64                      `protobuf:"varint,1,opt,name=cron_query_id,json=cronQueryId,proto3" json:"cron_query_id,omitempty"`
	PlannerOptions       map[string]*structpb.Value `protobuf:"bytes,2,rep,name=planner_options,json=plannerOptions,proto3" json:"planner_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IncrementalResolvers []string                   `protobuf:"bytes,3,rep,name=incremental_resolvers,json=incrementalResolvers,proto3" json:"incremental_resolvers,omitempty"`
	MaxSamples           *int64                     `protobuf:"varint,4,opt,name=max_samples,json=maxSamples,proto3,oneof" json:"max_samples,omitempty"`
	EnvOverrides         map[string]string          `protobuf:"bytes,5,rep,name=env_overrides,json=envOverrides,proto3" json:"env_overrides,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ManualTriggerScheduledQueryRequest) Reset() {
	*x = ManualTriggerScheduledQueryRequest{}
	mi := &file_chalk_server_v1_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualTriggerScheduledQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualTriggerScheduledQueryRequest) ProtoMessage() {}

func (x *ManualTriggerScheduledQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualTriggerScheduledQueryRequest.ProtoReflect.Descriptor instead.
func (*ManualTriggerScheduledQueryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *ManualTriggerScheduledQueryRequest) GetCronQueryId() int64 {
	if x != nil {
		return x.CronQueryId
	}
	return 0
}

func (x *ManualTriggerScheduledQueryRequest) GetPlannerOptions() map[string]*structpb.Value {
	if x != nil {
		return x.PlannerOptions
	}
	return nil
}

func (x *ManualTriggerScheduledQueryRequest) GetIncrementalResolvers() []string {
	if x != nil {
		return x.IncrementalResolvers
	}
	return nil
}

func (x *ManualTriggerScheduledQueryRequest) GetMaxSamples() int64 {
	if x != nil && x.MaxSamples != nil {
		return *x.MaxSamples
	}
	return 0
}

func (x *ManualTriggerScheduledQueryRequest) GetEnvOverrides() map[string]string {
	if x != nil {
		return x.EnvOverrides
	}
	return nil
}

type ManualTriggerScheduledQueryResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ScheduledQueryRun *ScheduledQueryRun     `protobuf:"bytes,1,opt,name=scheduled_query_run,json=scheduledQueryRun,proto3" json:"scheduled_query_run,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ManualTriggerScheduledQueryResponse) Reset() {
	*x = ManualTriggerScheduledQueryResponse{}
	mi := &file_chalk_server_v1_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualTriggerScheduledQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualTriggerScheduledQueryResponse) ProtoMessage() {}

func (x *ManualTriggerScheduledQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualTriggerScheduledQueryResponse.ProtoReflect.Descriptor instead.
func (*ManualTriggerScheduledQueryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *ManualTriggerScheduledQueryResponse) GetScheduledQueryRun() *ScheduledQueryRun {
	if x != nil {
		return x.ScheduledQueryRun
	}
	return nil
}

var File_chalk_server_v1_scheduler_proto protoreflect.FileDescriptor

const file_chalk_server_v1_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x1fchalk/server/v1/scheduler.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a)chalk/server/v1/scheduled_query_run.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xad\x04\n" +
	"\"ManualTriggerScheduledQueryRequest\x12\"\n" +
	"\rcron_query_id\x18\x01 \x01(\x03R\vcronQueryId\x12p\n" +
	"\x0fplanner_options\x18\x02 \x03(\v2G.chalk.server.v1.ManualTriggerScheduledQueryRequest.PlannerOptionsEntryR\x0eplannerOptions\x123\n" +
	"\x15incremental_resolvers\x18\x03 \x03(\tR\x14incrementalResolvers\x12$\n" +
	"\vmax_samples\x18\x04 \x01(\x03H\x00R\n" +
	"maxSamples\x88\x01\x01\x12j\n" +
	"\renv_overrides\x18\x05 \x03(\v2E.chalk.server.v1.ManualTriggerScheduledQueryRequest.EnvOverridesEntryR\fenvOverrides\x1aY\n" +
	"\x13PlannerOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1a?\n" +
	"\x11EnvOverridesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_max_samples\"y\n" +
	"#ManualTriggerScheduledQueryResponse\x12R\n" +
	"\x13scheduled_query_run\x18\x01 \x01(\v2\".chalk.server.v1.ScheduledQueryRunR\x11scheduledQueryRun2\xa2\x01\n" +
	"\x10SchedulerService\x12\x8d\x01\n" +
	"\x1bManualTriggerScheduledQuery\x123.chalk.server.v1.ManualTriggerScheduledQueryRequest\x1a4.chalk.server.v1.ManualTriggerScheduledQueryResponse\"\x03\x80}\x11B\xbe\x01\n" +
	"\x13com.chalk.server.v1B\x0eSchedulerProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_scheduler_proto_rawDescOnce sync.Once
	file_chalk_server_v1_scheduler_proto_rawDescData []byte
)

func file_chalk_server_v1_scheduler_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_scheduler_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_scheduler_proto_rawDesc), len(file_chalk_server_v1_scheduler_proto_rawDesc)))
	})
	return file_chalk_server_v1_scheduler_proto_rawDescData
}

var file_chalk_server_v1_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chalk_server_v1_scheduler_proto_goTypes = []any{
	(*ManualTriggerScheduledQueryRequest)(nil),  // 0: chalk.server.v1.ManualTriggerScheduledQueryRequest
	(*ManualTriggerScheduledQueryResponse)(nil), // 1: chalk.server.v1.ManualTriggerScheduledQueryResponse
	nil,                       // 2: chalk.server.v1.ManualTriggerScheduledQueryRequest.PlannerOptionsEntry
	nil,                       // 3: chalk.server.v1.ManualTriggerScheduledQueryRequest.EnvOverridesEntry
	(*ScheduledQueryRun)(nil), // 4: chalk.server.v1.ScheduledQueryRun
	(*structpb.Value)(nil),    // 5: google.protobuf.Value
}
var file_chalk_server_v1_scheduler_proto_depIdxs = []int32{
	2, // 0: chalk.server.v1.ManualTriggerScheduledQueryRequest.planner_options:type_name -> chalk.server.v1.ManualTriggerScheduledQueryRequest.PlannerOptionsEntry
	3, // 1: chalk.server.v1.ManualTriggerScheduledQueryRequest.env_overrides:type_name -> chalk.server.v1.ManualTriggerScheduledQueryRequest.EnvOverridesEntry
	4, // 2: chalk.server.v1.ManualTriggerScheduledQueryResponse.scheduled_query_run:type_name -> chalk.server.v1.ScheduledQueryRun
	5, // 3: chalk.server.v1.ManualTriggerScheduledQueryRequest.PlannerOptionsEntry.value:type_name -> google.protobuf.Value
	0, // 4: chalk.server.v1.SchedulerService.ManualTriggerScheduledQuery:input_type -> chalk.server.v1.ManualTriggerScheduledQueryRequest
	1, // 5: chalk.server.v1.SchedulerService.ManualTriggerScheduledQuery:output_type -> chalk.server.v1.ManualTriggerScheduledQueryResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_scheduler_proto_init() }
func file_chalk_server_v1_scheduler_proto_init() {
	if File_chalk_server_v1_scheduler_proto != nil {
		return
	}
	file_chalk_server_v1_scheduled_query_run_proto_init()
	file_chalk_server_v1_scheduler_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_scheduler_proto_rawDesc), len(file_chalk_server_v1_scheduler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_scheduler_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_scheduler_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_scheduler_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_scheduler_proto = out.File
	file_chalk_server_v1_scheduler_proto_goTypes = nil
	file_chalk_server_v1_scheduler_proto_depIdxs = nil
}
