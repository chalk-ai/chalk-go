// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/flare.proto

package serverv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Flare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Agent         *v1.DisplayAgent       `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flare) Reset() {
	*x = Flare{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flare) ProtoMessage() {}

func (x *Flare) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flare.ProtoReflect.Descriptor instead.
func (*Flare) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{0}
}

func (x *Flare) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flare) GetAgent() *v1.DisplayAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Flare) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListFlaresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlaresRequest) Reset() {
	*x = ListFlaresRequest{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlaresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlaresRequest) ProtoMessage() {}

func (x *ListFlaresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlaresRequest.ProtoReflect.Descriptor instead.
func (*ListFlaresRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{1}
}

type ListFlaresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flares        []*Flare               `protobuf:"bytes,1,rep,name=flares,proto3" json:"flares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlaresResponse) Reset() {
	*x = ListFlaresResponse{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlaresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlaresResponse) ProtoMessage() {}

func (x *ListFlaresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlaresResponse.ProtoReflect.Descriptor instead.
func (*ListFlaresResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{2}
}

func (x *ListFlaresResponse) GetFlares() []*Flare {
	if x != nil {
		return x.Flares
	}
	return nil
}

type GetFlareDownloadLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlareDownloadLinkRequest) Reset() {
	*x = GetFlareDownloadLinkRequest{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlareDownloadLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlareDownloadLinkRequest) ProtoMessage() {}

func (x *GetFlareDownloadLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlareDownloadLinkRequest.ProtoReflect.Descriptor instead.
func (*GetFlareDownloadLinkRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{3}
}

func (x *GetFlareDownloadLinkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFlareDownloadLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedUri     string                 `protobuf:"bytes,1,opt,name=signed_uri,json=signedUri,proto3" json:"signed_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlareDownloadLinkResponse) Reset() {
	*x = GetFlareDownloadLinkResponse{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlareDownloadLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlareDownloadLinkResponse) ProtoMessage() {}

func (x *GetFlareDownloadLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlareDownloadLinkResponse.ProtoReflect.Descriptor instead.
func (*GetFlareDownloadLinkResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{4}
}

func (x *GetFlareDownloadLinkResponse) GetSignedUri() string {
	if x != nil {
		return x.SignedUri
	}
	return ""
}

type UploadFlareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Archive       []byte                 `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFlareRequest) Reset() {
	*x = UploadFlareRequest{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFlareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFlareRequest) ProtoMessage() {}

func (x *UploadFlareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFlareRequest.ProtoReflect.Descriptor instead.
func (*UploadFlareRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFlareRequest) GetArchive() []byte {
	if x != nil {
		return x.Archive
	}
	return nil
}

type UploadFlareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFlareResponse) Reset() {
	*x = UploadFlareResponse{}
	mi := &file_chalk_server_v1_flare_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFlareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFlareResponse) ProtoMessage() {}

func (x *UploadFlareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_flare_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFlareResponse.ProtoReflect.Descriptor instead.
func (*UploadFlareResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_flare_proto_rawDescGZIP(), []int{6}
}

func (x *UploadFlareResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_chalk_server_v1_flare_proto protoreflect.FileDescriptor

const file_chalk_server_v1_flare_proto_rawDesc = "" +
	"\n" +
	"\x1bchalk/server/v1/flare.proto\x12\x0fchalk.server.v1\x1a chalk/auth/v1/displayagent.proto\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x85\x01\n" +
	"\x05Flare\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x05agent\x18\x02 \x01(\v2\x1b.chalk.auth.v1.DisplayAgentR\x05agent\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x13\n" +
	"\x11ListFlaresRequest\"D\n" +
	"\x12ListFlaresResponse\x12.\n" +
	"\x06flares\x18\x01 \x03(\v2\x16.chalk.server.v1.FlareR\x06flares\"-\n" +
	"\x1bGetFlareDownloadLinkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"=\n" +
	"\x1cGetFlareDownloadLinkResponse\x12\x1d\n" +
	"\n" +
	"signed_uri\x18\x01 \x01(\tR\tsignedUri\".\n" +
	"\x12UploadFlareRequest\x12\x18\n" +
	"\aarchive\x18\x02 \x01(\fR\aarchive\")\n" +
	"\x13UploadFlareResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name2\xc3\x02\n" +
	"\fFlareService\x12]\n" +
	"\vUploadFlare\x12#.chalk.server.v1.UploadFlareRequest\x1a$.chalk.server.v1.UploadFlareResponse\"\x03\x80}\x02\x12Z\n" +
	"\n" +
	"ListFlares\x12\".chalk.server.v1.ListFlaresRequest\x1a#.chalk.server.v1.ListFlaresResponse\"\x03\x80}\v\x12x\n" +
	"\x14GetFlareDownloadLink\x12,.chalk.server.v1.GetFlareDownloadLinkRequest\x1a-.chalk.server.v1.GetFlareDownloadLinkResponse\"\x03\x80}\vB\xba\x01\n" +
	"\x13com.chalk.server.v1B\n" +
	"FlareProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_flare_proto_rawDescOnce sync.Once
	file_chalk_server_v1_flare_proto_rawDescData []byte
)

func file_chalk_server_v1_flare_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_flare_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_flare_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_flare_proto_rawDesc), len(file_chalk_server_v1_flare_proto_rawDesc)))
	})
	return file_chalk_server_v1_flare_proto_rawDescData
}

var file_chalk_server_v1_flare_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chalk_server_v1_flare_proto_goTypes = []any{
	(*Flare)(nil),                        // 0: chalk.server.v1.Flare
	(*ListFlaresRequest)(nil),            // 1: chalk.server.v1.ListFlaresRequest
	(*ListFlaresResponse)(nil),           // 2: chalk.server.v1.ListFlaresResponse
	(*GetFlareDownloadLinkRequest)(nil),  // 3: chalk.server.v1.GetFlareDownloadLinkRequest
	(*GetFlareDownloadLinkResponse)(nil), // 4: chalk.server.v1.GetFlareDownloadLinkResponse
	(*UploadFlareRequest)(nil),           // 5: chalk.server.v1.UploadFlareRequest
	(*UploadFlareResponse)(nil),          // 6: chalk.server.v1.UploadFlareResponse
	(*v1.DisplayAgent)(nil),              // 7: chalk.auth.v1.DisplayAgent
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
}
var file_chalk_server_v1_flare_proto_depIdxs = []int32{
	7, // 0: chalk.server.v1.Flare.agent:type_name -> chalk.auth.v1.DisplayAgent
	8, // 1: chalk.server.v1.Flare.created_at:type_name -> google.protobuf.Timestamp
	0, // 2: chalk.server.v1.ListFlaresResponse.flares:type_name -> chalk.server.v1.Flare
	5, // 3: chalk.server.v1.FlareService.UploadFlare:input_type -> chalk.server.v1.UploadFlareRequest
	1, // 4: chalk.server.v1.FlareService.ListFlares:input_type -> chalk.server.v1.ListFlaresRequest
	3, // 5: chalk.server.v1.FlareService.GetFlareDownloadLink:input_type -> chalk.server.v1.GetFlareDownloadLinkRequest
	6, // 6: chalk.server.v1.FlareService.UploadFlare:output_type -> chalk.server.v1.UploadFlareResponse
	2, // 7: chalk.server.v1.FlareService.ListFlares:output_type -> chalk.server.v1.ListFlaresResponse
	4, // 8: chalk.server.v1.FlareService.GetFlareDownloadLink:output_type -> chalk.server.v1.GetFlareDownloadLinkResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_flare_proto_init() }
func file_chalk_server_v1_flare_proto_init() {
	if File_chalk_server_v1_flare_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_flare_proto_rawDesc), len(file_chalk_server_v1_flare_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_flare_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_flare_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_flare_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_flare_proto = out.File
	file_chalk_server_v1_flare_proto_goTypes = nil
	file_chalk_server_v1_flare_proto_depIdxs = nil
}
