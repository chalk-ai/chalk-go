// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/datasets.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DatasetRevisionStatus int32

const (
	DatasetRevisionStatus_DATASET_REVISION_STATUS_UNSPECIFIED DatasetRevisionStatus = 0
	DatasetRevisionStatus_DATASET_REVISION_STATUS_UNKNOWN     DatasetRevisionStatus = 1
	DatasetRevisionStatus_DATASET_REVISION_STATUS_WORKING     DatasetRevisionStatus = 2
	DatasetRevisionStatus_DATASET_REVISION_STATUS_COMPLETED   DatasetRevisionStatus = 3
	DatasetRevisionStatus_DATASET_REVISION_STATUS_FAILED      DatasetRevisionStatus = 4
	DatasetRevisionStatus_DATASET_REVISION_STATUS_CANCELED    DatasetRevisionStatus = 5
	DatasetRevisionStatus_DATASET_REVISION_STATUS_QUEUED      DatasetRevisionStatus = 6
)

// Enum value maps for DatasetRevisionStatus.
var (
	DatasetRevisionStatus_name = map[int32]string{
		0: "DATASET_REVISION_STATUS_UNSPECIFIED",
		1: "DATASET_REVISION_STATUS_UNKNOWN",
		2: "DATASET_REVISION_STATUS_WORKING",
		3: "DATASET_REVISION_STATUS_COMPLETED",
		4: "DATASET_REVISION_STATUS_FAILED",
		5: "DATASET_REVISION_STATUS_CANCELED",
		6: "DATASET_REVISION_STATUS_QUEUED",
	}
	DatasetRevisionStatus_value = map[string]int32{
		"DATASET_REVISION_STATUS_UNSPECIFIED": 0,
		"DATASET_REVISION_STATUS_UNKNOWN":     1,
		"DATASET_REVISION_STATUS_WORKING":     2,
		"DATASET_REVISION_STATUS_COMPLETED":   3,
		"DATASET_REVISION_STATUS_FAILED":      4,
		"DATASET_REVISION_STATUS_CANCELED":    5,
		"DATASET_REVISION_STATUS_QUEUED":      6,
	}
)

func (x DatasetRevisionStatus) Enum() *DatasetRevisionStatus {
	p := new(DatasetRevisionStatus)
	*p = x
	return p
}

func (x DatasetRevisionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatasetRevisionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_datasets_proto_enumTypes[0].Descriptor()
}

func (DatasetRevisionStatus) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_datasets_proto_enumTypes[0]
}

func (x DatasetRevisionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatasetRevisionStatus.Descriptor instead.
func (DatasetRevisionStatus) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{0}
}

type DatasetVersion int32

const (
	DatasetVersion_DATASET_VERSION_UNSPECIFIED                               DatasetVersion = 0
	DatasetVersion_DATASET_VERSION_UNKNOWN                                   DatasetVersion = 1
	DatasetVersion_DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES    DatasetVersion = 2
	DatasetVersion_DATASET_VERSION_DATASET_WRITER                            DatasetVersion = 3
	DatasetVersion_DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES_V2 DatasetVersion = 4
	DatasetVersion_DATASET_VERSION_COMPUTE_RESOLVER_OUTPUT_V1                DatasetVersion = 5
	DatasetVersion_DATASET_VERSION_NATIVE_DTYPES                             DatasetVersion = 6
	DatasetVersion_DATASET_VERSION_NATIVE_COLUMN_NAMES                       DatasetVersion = 7
)

// Enum value maps for DatasetVersion.
var (
	DatasetVersion_name = map[int32]string{
		0: "DATASET_VERSION_UNSPECIFIED",
		1: "DATASET_VERSION_UNKNOWN",
		2: "DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES",
		3: "DATASET_VERSION_DATASET_WRITER",
		4: "DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES_V2",
		5: "DATASET_VERSION_COMPUTE_RESOLVER_OUTPUT_V1",
		6: "DATASET_VERSION_NATIVE_DTYPES",
		7: "DATASET_VERSION_NATIVE_COLUMN_NAMES",
	}
	DatasetVersion_value = map[string]int32{
		"DATASET_VERSION_UNSPECIFIED":                               0,
		"DATASET_VERSION_UNKNOWN":                                   1,
		"DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES":    2,
		"DATASET_VERSION_DATASET_WRITER":                            3,
		"DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES_V2": 4,
		"DATASET_VERSION_COMPUTE_RESOLVER_OUTPUT_V1":                5,
		"DATASET_VERSION_NATIVE_DTYPES":                             6,
		"DATASET_VERSION_NATIVE_COLUMN_NAMES":                       7,
	}
)

func (x DatasetVersion) Enum() *DatasetVersion {
	p := new(DatasetVersion)
	*p = x
	return p
}

func (x DatasetVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatasetVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_datasets_proto_enumTypes[1].Descriptor()
}

func (DatasetVersion) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_datasets_proto_enumTypes[1]
}

func (x DatasetVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatasetVersion.Descriptor instead.
func (DatasetVersion) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{1}
}

type OfflineQueryGivensVersion int32

const (
	OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_UNSPECIFIED                        OfflineQueryGivensVersion = 0
	OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_UNKNOWN                            OfflineQueryGivensVersion = 1
	OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_NATIVE_TS_FEATURE_FOR_ROOT_NS      OfflineQueryGivensVersion = 2
	OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME                 OfflineQueryGivensVersion = 3
	OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME_WITH_URI_PREFIX OfflineQueryGivensVersion = 4
)

// Enum value maps for OfflineQueryGivensVersion.
var (
	OfflineQueryGivensVersion_name = map[int32]string{
		0: "OFFLINE_QUERY_GIVENS_VERSION_UNSPECIFIED",
		1: "OFFLINE_QUERY_GIVENS_VERSION_UNKNOWN",
		2: "OFFLINE_QUERY_GIVENS_VERSION_NATIVE_TS_FEATURE_FOR_ROOT_NS",
		3: "OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME",
		4: "OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME_WITH_URI_PREFIX",
	}
	OfflineQueryGivensVersion_value = map[string]int32{
		"OFFLINE_QUERY_GIVENS_VERSION_UNSPECIFIED":                        0,
		"OFFLINE_QUERY_GIVENS_VERSION_UNKNOWN":                            1,
		"OFFLINE_QUERY_GIVENS_VERSION_NATIVE_TS_FEATURE_FOR_ROOT_NS":      2,
		"OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME":                 3,
		"OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME_WITH_URI_PREFIX": 4,
	}
)

func (x OfflineQueryGivensVersion) Enum() *OfflineQueryGivensVersion {
	p := new(OfflineQueryGivensVersion)
	*p = x
	return p
}

func (x OfflineQueryGivensVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OfflineQueryGivensVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_server_v1_datasets_proto_enumTypes[2].Descriptor()
}

func (OfflineQueryGivensVersion) Type() protoreflect.EnumType {
	return &file_chalk_server_v1_datasets_proto_enumTypes[2]
}

func (x OfflineQueryGivensVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OfflineQueryGivensVersion.Descriptor instead.
func (OfflineQueryGivensVersion) EnumDescriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{2}
}

type DatasetRevisionMeta struct {
	state                       protoimpl.MessageState     `protogen:"open.v1"`
	NumericId                   int64                      `protobuf:"varint,1,opt,name=numeric_id,json=numericId,proto3" json:"numeric_id,omitempty"`
	OfflineQueryId              string                     `protobuf:"bytes,2,opt,name=offline_query_id,json=offlineQueryId,proto3" json:"offline_query_id,omitempty"`
	DatasetId                   string                     `protobuf:"bytes,3,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	GivensUri                   *string                    `protobuf:"bytes,4,opt,name=givens_uri,json=givensUri,proto3,oneof" json:"givens_uri,omitempty"`
	GivensVersion               *OfflineQueryGivensVersion `protobuf:"varint,5,opt,name=givens_version,json=givensVersion,proto3,enum=chalk.server.v1.OfflineQueryGivensVersion,oneof" json:"givens_version,omitempty"`
	OutputUri                   *string                    `protobuf:"bytes,6,opt,name=output_uri,json=outputUri,proto3,oneof" json:"output_uri,omitempty"`
	OutputVersion               *DatasetVersion            `protobuf:"varint,7,opt,name=output_version,json=outputVersion,proto3,enum=chalk.server.v1.DatasetVersion,oneof" json:"output_version,omitempty"`
	BranchName                  *string                    `protobuf:"bytes,8,opt,name=branch_name,json=branchName,proto3,oneof" json:"branch_name,omitempty"`
	NumRows                     *int64                     `protobuf:"varint,9,opt,name=num_rows,json=numRows,proto3,oneof" json:"num_rows,omitempty"`
	PhysicalSizeBytes           *int64                     `protobuf:"varint,10,opt,name=physical_size_bytes,json=physicalSizeBytes,proto3,oneof" json:"physical_size_bytes,omitempty"`
	OutputColumns               []string                   `protobuf:"bytes,11,rep,name=output_columns,json=outputColumns,proto3" json:"output_columns,omitempty"`
	OutputFqns                  []string                   `protobuf:"bytes,12,rep,name=output_fqns,json=outputFqns,proto3" json:"output_fqns,omitempty"`
	AgentId                     *string                    `protobuf:"bytes,13,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	CompletedAt                 *timestamppb.Timestamp     `protobuf:"bytes,14,opt,name=completed_at,json=completedAt,proto3,oneof" json:"completed_at,omitempty"`
	NumShards                   *int64                     `protobuf:"varint,15,opt,name=num_shards,json=numShards,proto3,oneof" json:"num_shards,omitempty"`
	NumComputers                *int64                     `protobuf:"varint,16,opt,name=num_computers,json=numComputers,proto3,oneof" json:"num_computers,omitempty"`
	Metadata                    *structpb.Value            `protobuf:"bytes,17,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	Status                      *DatasetRevisionStatus     `protobuf:"varint,18,opt,name=status,proto3,enum=chalk.server.v1.DatasetRevisionStatus,oneof" json:"status,omitempty"` // possibly deprecated?
	NumRowsCalculated           *int64                     `protobuf:"varint,19,opt,name=num_rows_calculated,json=numRowsCalculated,proto3,oneof" json:"num_rows_calculated,omitempty"`
	PhysicalSizeBytesCalculated *int64                     `protobuf:"varint,20,opt,name=physical_size_bytes_calculated,json=physicalSizeBytesCalculated,proto3,oneof" json:"physical_size_bytes_calculated,omitempty"`
	CreatedAt                   *timestamppb.Timestamp     `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DatasetRevisionMeta) Reset() {
	*x = DatasetRevisionMeta{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetRevisionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetRevisionMeta) ProtoMessage() {}

func (x *DatasetRevisionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetRevisionMeta.ProtoReflect.Descriptor instead.
func (*DatasetRevisionMeta) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{0}
}

func (x *DatasetRevisionMeta) GetNumericId() int64 {
	if x != nil {
		return x.NumericId
	}
	return 0
}

func (x *DatasetRevisionMeta) GetOfflineQueryId() string {
	if x != nil {
		return x.OfflineQueryId
	}
	return ""
}

func (x *DatasetRevisionMeta) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *DatasetRevisionMeta) GetGivensUri() string {
	if x != nil && x.GivensUri != nil {
		return *x.GivensUri
	}
	return ""
}

func (x *DatasetRevisionMeta) GetGivensVersion() OfflineQueryGivensVersion {
	if x != nil && x.GivensVersion != nil {
		return *x.GivensVersion
	}
	return OfflineQueryGivensVersion_OFFLINE_QUERY_GIVENS_VERSION_UNSPECIFIED
}

func (x *DatasetRevisionMeta) GetOutputUri() string {
	if x != nil && x.OutputUri != nil {
		return *x.OutputUri
	}
	return ""
}

func (x *DatasetRevisionMeta) GetOutputVersion() DatasetVersion {
	if x != nil && x.OutputVersion != nil {
		return *x.OutputVersion
	}
	return DatasetVersion_DATASET_VERSION_UNSPECIFIED
}

func (x *DatasetRevisionMeta) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *DatasetRevisionMeta) GetNumRows() int64 {
	if x != nil && x.NumRows != nil {
		return *x.NumRows
	}
	return 0
}

func (x *DatasetRevisionMeta) GetPhysicalSizeBytes() int64 {
	if x != nil && x.PhysicalSizeBytes != nil {
		return *x.PhysicalSizeBytes
	}
	return 0
}

func (x *DatasetRevisionMeta) GetOutputColumns() []string {
	if x != nil {
		return x.OutputColumns
	}
	return nil
}

func (x *DatasetRevisionMeta) GetOutputFqns() []string {
	if x != nil {
		return x.OutputFqns
	}
	return nil
}

func (x *DatasetRevisionMeta) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *DatasetRevisionMeta) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *DatasetRevisionMeta) GetNumShards() int64 {
	if x != nil && x.NumShards != nil {
		return *x.NumShards
	}
	return 0
}

func (x *DatasetRevisionMeta) GetNumComputers() int64 {
	if x != nil && x.NumComputers != nil {
		return *x.NumComputers
	}
	return 0
}

func (x *DatasetRevisionMeta) GetMetadata() *structpb.Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DatasetRevisionMeta) GetStatus() DatasetRevisionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return DatasetRevisionStatus_DATASET_REVISION_STATUS_UNSPECIFIED
}

func (x *DatasetRevisionMeta) GetNumRowsCalculated() int64 {
	if x != nil && x.NumRowsCalculated != nil {
		return *x.NumRowsCalculated
	}
	return 0
}

func (x *DatasetRevisionMeta) GetPhysicalSizeBytesCalculated() int64 {
	if x != nil && x.PhysicalSizeBytesCalculated != nil {
		return *x.PhysicalSizeBytesCalculated
	}
	return 0
}

func (x *DatasetRevisionMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DatasetMeta struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId      string                 `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DatasetName        *string                `protobuf:"bytes,3,opt,name=dataset_name,json=datasetName,proto3,oneof" json:"dataset_name,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MostRecentRevision *DatasetRevisionMeta   `protobuf:"bytes,7,opt,name=most_recent_revision,json=mostRecentRevision,proto3,oneof" json:"most_recent_revision,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DatasetMeta) Reset() {
	*x = DatasetMeta{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetMeta) ProtoMessage() {}

func (x *DatasetMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetMeta.ProtoReflect.Descriptor instead.
func (*DatasetMeta) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{1}
}

func (x *DatasetMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatasetMeta) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *DatasetMeta) GetDatasetName() string {
	if x != nil && x.DatasetName != nil {
		return *x.DatasetName
	}
	return ""
}

func (x *DatasetMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DatasetMeta) GetMostRecentRevision() *DatasetRevisionMeta {
	if x != nil {
		return x.MostRecentRevision
	}
	return nil
}

type ListDatasetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        *string                `protobuf:"bytes,1,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit         *int32                 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Search        *string                `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetsRequest) Reset() {
	*x = ListDatasetsRequest{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsRequest) ProtoMessage() {}

func (x *ListDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{2}
}

func (x *ListDatasetsRequest) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

func (x *ListDatasetsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListDatasetsRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

type ListDatasetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasets      []*DatasetMeta         `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
	Cursor        *string                `protobuf:"bytes,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetsResponse) Reset() {
	*x = ListDatasetsResponse{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse) ProtoMessage() {}

func (x *ListDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{3}
}

func (x *ListDatasetsResponse) GetDatasets() []*DatasetMeta {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *ListDatasetsResponse) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

type GetDatasetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetRequest) Reset() {
	*x = GetDatasetRequest{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRequest) ProtoMessage() {}

func (x *GetDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{4}
}

func (x *GetDatasetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDatasetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dataset       *DatasetMeta           `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetResponse) Reset() {
	*x = GetDatasetResponse{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetResponse) ProtoMessage() {}

func (x *GetDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{5}
}

func (x *GetDatasetResponse) GetDataset() *DatasetMeta {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type ListDatasetRevisionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatasetId     string                 `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Cursor        *string                `protobuf:"bytes,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetRevisionsRequest) Reset() {
	*x = ListDatasetRevisionsRequest{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetRevisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetRevisionsRequest) ProtoMessage() {}

func (x *ListDatasetRevisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetRevisionsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetRevisionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{6}
}

func (x *ListDatasetRevisionsRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ListDatasetRevisionsRequest) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

func (x *ListDatasetRevisionsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListDatasetRevisionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revisions     []*DatasetRevisionMeta `protobuf:"bytes,1,rep,name=revisions,proto3" json:"revisions,omitempty"`
	Cursor        *string                `protobuf:"bytes,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasetRevisionsResponse) Reset() {
	*x = ListDatasetRevisionsResponse{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasetRevisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetRevisionsResponse) ProtoMessage() {}

func (x *ListDatasetRevisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetRevisionsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetRevisionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{7}
}

func (x *ListDatasetRevisionsResponse) GetRevisions() []*DatasetRevisionMeta {
	if x != nil {
		return x.Revisions
	}
	return nil
}

func (x *ListDatasetRevisionsResponse) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

type GetDatasetRevisionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetRevisionRequest) Reset() {
	*x = GetDatasetRevisionRequest{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRevisionRequest) ProtoMessage() {}

func (x *GetDatasetRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetRevisionRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{8}
}

func (x *GetDatasetRevisionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDatasetRevisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      *DatasetRevisionMeta   `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetRevisionResponse) Reset() {
	*x = GetDatasetRevisionResponse{}
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetRevisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRevisionResponse) ProtoMessage() {}

func (x *GetDatasetRevisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_datasets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRevisionResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetRevisionResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_datasets_proto_rawDescGZIP(), []int{9}
}

func (x *GetDatasetRevisionResponse) GetRevision() *DatasetRevisionMeta {
	if x != nil {
		return x.Revision
	}
	return nil
}

var File_chalk_server_v1_datasets_proto protoreflect.FileDescriptor

const file_chalk_server_v1_datasets_proto_rawDesc = "" +
	"\n" +
	"\x1echalk/server/v1/datasets.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb6\n" +
	"\n" +
	"\x13DatasetRevisionMeta\x12\x1d\n" +
	"\n" +
	"numeric_id\x18\x01 \x01(\x03R\tnumericId\x12(\n" +
	"\x10offline_query_id\x18\x02 \x01(\tR\x0eofflineQueryId\x12\x1d\n" +
	"\n" +
	"dataset_id\x18\x03 \x01(\tR\tdatasetId\x12\"\n" +
	"\n" +
	"givens_uri\x18\x04 \x01(\tH\x00R\tgivensUri\x88\x01\x01\x12V\n" +
	"\x0egivens_version\x18\x05 \x01(\x0e2*.chalk.server.v1.OfflineQueryGivensVersionH\x01R\rgivensVersion\x88\x01\x01\x12\"\n" +
	"\n" +
	"output_uri\x18\x06 \x01(\tH\x02R\toutputUri\x88\x01\x01\x12K\n" +
	"\x0eoutput_version\x18\a \x01(\x0e2\x1f.chalk.server.v1.DatasetVersionH\x03R\routputVersion\x88\x01\x01\x12$\n" +
	"\vbranch_name\x18\b \x01(\tH\x04R\n" +
	"branchName\x88\x01\x01\x12\x1e\n" +
	"\bnum_rows\x18\t \x01(\x03H\x05R\anumRows\x88\x01\x01\x123\n" +
	"\x13physical_size_bytes\x18\n" +
	" \x01(\x03H\x06R\x11physicalSizeBytes\x88\x01\x01\x12%\n" +
	"\x0eoutput_columns\x18\v \x03(\tR\routputColumns\x12\x1f\n" +
	"\voutput_fqns\x18\f \x03(\tR\n" +
	"outputFqns\x12\x1e\n" +
	"\bagent_id\x18\r \x01(\tH\aR\aagentId\x88\x01\x01\x12B\n" +
	"\fcompleted_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampH\bR\vcompletedAt\x88\x01\x01\x12\"\n" +
	"\n" +
	"num_shards\x18\x0f \x01(\x03H\tR\tnumShards\x88\x01\x01\x12(\n" +
	"\rnum_computers\x18\x10 \x01(\x03H\n" +
	"R\fnumComputers\x88\x01\x01\x127\n" +
	"\bmetadata\x18\x11 \x01(\v2\x16.google.protobuf.ValueH\vR\bmetadata\x88\x01\x01\x12C\n" +
	"\x06status\x18\x12 \x01(\x0e2&.chalk.server.v1.DatasetRevisionStatusH\fR\x06status\x88\x01\x01\x123\n" +
	"\x13num_rows_calculated\x18\x13 \x01(\x03H\rR\x11numRowsCalculated\x88\x01\x01\x12H\n" +
	"\x1ephysical_size_bytes_calculated\x18\x14 \x01(\x03H\x0eR\x1bphysicalSizeBytesCalculated\x88\x01\x01\x12>\n" +
	"\n" +
	"created_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampH\x0fR\tcreatedAt\x88\x01\x01B\r\n" +
	"\v_givens_uriB\x11\n" +
	"\x0f_givens_versionB\r\n" +
	"\v_output_uriB\x11\n" +
	"\x0f_output_versionB\x0e\n" +
	"\f_branch_nameB\v\n" +
	"\t_num_rowsB\x16\n" +
	"\x14_physical_size_bytesB\v\n" +
	"\t_agent_idB\x0f\n" +
	"\r_completed_atB\r\n" +
	"\v_num_shardsB\x10\n" +
	"\x0e_num_computersB\v\n" +
	"\t_metadataB\t\n" +
	"\a_statusB\x16\n" +
	"\x14_num_rows_calculatedB!\n" +
	"\x1f_physical_size_bytes_calculatedB\r\n" +
	"\v_created_at\"\xae\x02\n" +
	"\vDatasetMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eenvironment_id\x18\x02 \x01(\tR\renvironmentId\x12&\n" +
	"\fdataset_name\x18\x03 \x01(\tH\x00R\vdatasetName\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12[\n" +
	"\x14most_recent_revision\x18\a \x01(\v2$.chalk.server.v1.DatasetRevisionMetaH\x01R\x12mostRecentRevision\x88\x01\x01B\x0f\n" +
	"\r_dataset_nameB\x17\n" +
	"\x15_most_recent_revision\"\x8a\x01\n" +
	"\x13ListDatasetsRequest\x12\x1b\n" +
	"\x06cursor\x18\x01 \x01(\tH\x00R\x06cursor\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x02 \x01(\x05H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06search\x18\x03 \x01(\tH\x02R\x06search\x88\x01\x01B\t\n" +
	"\a_cursorB\b\n" +
	"\x06_limitB\t\n" +
	"\a_search\"x\n" +
	"\x14ListDatasetsResponse\x128\n" +
	"\bdatasets\x18\x01 \x03(\v2\x1c.chalk.server.v1.DatasetMetaR\bdatasets\x12\x1b\n" +
	"\x06cursor\x18\x02 \x01(\tH\x00R\x06cursor\x88\x01\x01B\t\n" +
	"\a_cursor\"#\n" +
	"\x11GetDatasetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x12GetDatasetResponse\x126\n" +
	"\adataset\x18\x01 \x01(\v2\x1c.chalk.server.v1.DatasetMetaR\adataset\"\x89\x01\n" +
	"\x1bListDatasetRevisionsRequest\x12\x1d\n" +
	"\n" +
	"dataset_id\x18\x01 \x01(\tR\tdatasetId\x12\x1b\n" +
	"\x06cursor\x18\x02 \x01(\tH\x00R\x06cursor\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x01R\x05limit\x88\x01\x01B\t\n" +
	"\a_cursorB\b\n" +
	"\x06_limit\"\x8a\x01\n" +
	"\x1cListDatasetRevisionsResponse\x12B\n" +
	"\trevisions\x18\x01 \x03(\v2$.chalk.server.v1.DatasetRevisionMetaR\trevisions\x12\x1b\n" +
	"\x06cursor\x18\x02 \x01(\tH\x00R\x06cursor\x88\x01\x01B\t\n" +
	"\a_cursor\"+\n" +
	"\x19GetDatasetRevisionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"^\n" +
	"\x1aGetDatasetRevisionResponse\x12@\n" +
	"\brevision\x18\x01 \x01(\v2$.chalk.server.v1.DatasetRevisionMetaR\brevision*\x9f\x02\n" +
	"\x15DatasetRevisionStatus\x12'\n" +
	"#DATASET_REVISION_STATUS_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fDATASET_REVISION_STATUS_UNKNOWN\x10\x01\x12#\n" +
	"\x1fDATASET_REVISION_STATUS_WORKING\x10\x02\x12%\n" +
	"!DATASET_REVISION_STATUS_COMPLETED\x10\x03\x12\"\n" +
	"\x1eDATASET_REVISION_STATUS_FAILED\x10\x04\x12$\n" +
	" DATASET_REVISION_STATUS_CANCELED\x10\x05\x12\"\n" +
	"\x1eDATASET_REVISION_STATUS_QUEUED\x10\x06*\xe9\x02\n" +
	"\x0eDatasetVersion\x12\x1f\n" +
	"\x1bDATASET_VERSION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17DATASET_VERSION_UNKNOWN\x10\x01\x12:\n" +
	"6DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES\x10\x02\x12\"\n" +
	"\x1eDATASET_VERSION_DATASET_WRITER\x10\x03\x12=\n" +
	"9DATASET_VERSION_BIGQUERY_JOB_WITH_B32_ENCODED_COLNAMES_V2\x10\x04\x12.\n" +
	"*DATASET_VERSION_COMPUTE_RESOLVER_OUTPUT_V1\x10\x05\x12!\n" +
	"\x1dDATASET_VERSION_NATIVE_DTYPES\x10\x06\x12'\n" +
	"#DATASET_VERSION_NATIVE_COLUMN_NAMES\x10\a*\xad\x02\n" +
	"\x19OfflineQueryGivensVersion\x12,\n" +
	"(OFFLINE_QUERY_GIVENS_VERSION_UNSPECIFIED\x10\x00\x12(\n" +
	"$OFFLINE_QUERY_GIVENS_VERSION_UNKNOWN\x10\x01\x12>\n" +
	":OFFLINE_QUERY_GIVENS_VERSION_NATIVE_TS_FEATURE_FOR_ROOT_NS\x10\x02\x123\n" +
	"/OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME\x10\x03\x12C\n" +
	"?OFFLINE_QUERY_GIVENS_VERSION_SINGLE_TS_COL_NAME_WITH_URI_PREFIX\x10\x042\xd0\x03\n" +
	"\x16DatasetMetadataService\x12c\n" +
	"\fListDatasets\x12$.chalk.server.v1.ListDatasetsRequest\x1a%.chalk.server.v1.ListDatasetsResponse\"\x06\x80}\x04\x90\x02\x01\x12]\n" +
	"\n" +
	"GetDataset\x12\".chalk.server.v1.GetDatasetRequest\x1a#.chalk.server.v1.GetDatasetResponse\"\x06\x80}\x04\x90\x02\x01\x12{\n" +
	"\x14ListDatasetRevisions\x12,.chalk.server.v1.ListDatasetRevisionsRequest\x1a-.chalk.server.v1.ListDatasetRevisionsResponse\"\x06\x80}\x04\x90\x02\x01\x12u\n" +
	"\x12GetDatasetRevision\x12*.chalk.server.v1.GetDatasetRevisionRequest\x1a+.chalk.server.v1.GetDatasetRevisionResponse\"\x06\x80}\x04\x90\x02\x01B\xbd\x01\n" +
	"\x13com.chalk.server.v1B\rDatasetsProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_datasets_proto_rawDescOnce sync.Once
	file_chalk_server_v1_datasets_proto_rawDescData []byte
)

func file_chalk_server_v1_datasets_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_datasets_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_datasets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_datasets_proto_rawDesc), len(file_chalk_server_v1_datasets_proto_rawDesc)))
	})
	return file_chalk_server_v1_datasets_proto_rawDescData
}

var file_chalk_server_v1_datasets_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_chalk_server_v1_datasets_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chalk_server_v1_datasets_proto_goTypes = []any{
	(DatasetRevisionStatus)(0),           // 0: chalk.server.v1.DatasetRevisionStatus
	(DatasetVersion)(0),                  // 1: chalk.server.v1.DatasetVersion
	(OfflineQueryGivensVersion)(0),       // 2: chalk.server.v1.OfflineQueryGivensVersion
	(*DatasetRevisionMeta)(nil),          // 3: chalk.server.v1.DatasetRevisionMeta
	(*DatasetMeta)(nil),                  // 4: chalk.server.v1.DatasetMeta
	(*ListDatasetsRequest)(nil),          // 5: chalk.server.v1.ListDatasetsRequest
	(*ListDatasetsResponse)(nil),         // 6: chalk.server.v1.ListDatasetsResponse
	(*GetDatasetRequest)(nil),            // 7: chalk.server.v1.GetDatasetRequest
	(*GetDatasetResponse)(nil),           // 8: chalk.server.v1.GetDatasetResponse
	(*ListDatasetRevisionsRequest)(nil),  // 9: chalk.server.v1.ListDatasetRevisionsRequest
	(*ListDatasetRevisionsResponse)(nil), // 10: chalk.server.v1.ListDatasetRevisionsResponse
	(*GetDatasetRevisionRequest)(nil),    // 11: chalk.server.v1.GetDatasetRevisionRequest
	(*GetDatasetRevisionResponse)(nil),   // 12: chalk.server.v1.GetDatasetRevisionResponse
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
	(*structpb.Value)(nil),               // 14: google.protobuf.Value
}
var file_chalk_server_v1_datasets_proto_depIdxs = []int32{
	2,  // 0: chalk.server.v1.DatasetRevisionMeta.givens_version:type_name -> chalk.server.v1.OfflineQueryGivensVersion
	1,  // 1: chalk.server.v1.DatasetRevisionMeta.output_version:type_name -> chalk.server.v1.DatasetVersion
	13, // 2: chalk.server.v1.DatasetRevisionMeta.completed_at:type_name -> google.protobuf.Timestamp
	14, // 3: chalk.server.v1.DatasetRevisionMeta.metadata:type_name -> google.protobuf.Value
	0,  // 4: chalk.server.v1.DatasetRevisionMeta.status:type_name -> chalk.server.v1.DatasetRevisionStatus
	13, // 5: chalk.server.v1.DatasetRevisionMeta.created_at:type_name -> google.protobuf.Timestamp
	13, // 6: chalk.server.v1.DatasetMeta.created_at:type_name -> google.protobuf.Timestamp
	3,  // 7: chalk.server.v1.DatasetMeta.most_recent_revision:type_name -> chalk.server.v1.DatasetRevisionMeta
	4,  // 8: chalk.server.v1.ListDatasetsResponse.datasets:type_name -> chalk.server.v1.DatasetMeta
	4,  // 9: chalk.server.v1.GetDatasetResponse.dataset:type_name -> chalk.server.v1.DatasetMeta
	3,  // 10: chalk.server.v1.ListDatasetRevisionsResponse.revisions:type_name -> chalk.server.v1.DatasetRevisionMeta
	3,  // 11: chalk.server.v1.GetDatasetRevisionResponse.revision:type_name -> chalk.server.v1.DatasetRevisionMeta
	5,  // 12: chalk.server.v1.DatasetMetadataService.ListDatasets:input_type -> chalk.server.v1.ListDatasetsRequest
	7,  // 13: chalk.server.v1.DatasetMetadataService.GetDataset:input_type -> chalk.server.v1.GetDatasetRequest
	9,  // 14: chalk.server.v1.DatasetMetadataService.ListDatasetRevisions:input_type -> chalk.server.v1.ListDatasetRevisionsRequest
	11, // 15: chalk.server.v1.DatasetMetadataService.GetDatasetRevision:input_type -> chalk.server.v1.GetDatasetRevisionRequest
	6,  // 16: chalk.server.v1.DatasetMetadataService.ListDatasets:output_type -> chalk.server.v1.ListDatasetsResponse
	8,  // 17: chalk.server.v1.DatasetMetadataService.GetDataset:output_type -> chalk.server.v1.GetDatasetResponse
	10, // 18: chalk.server.v1.DatasetMetadataService.ListDatasetRevisions:output_type -> chalk.server.v1.ListDatasetRevisionsResponse
	12, // 19: chalk.server.v1.DatasetMetadataService.GetDatasetRevision:output_type -> chalk.server.v1.GetDatasetRevisionResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_datasets_proto_init() }
func file_chalk_server_v1_datasets_proto_init() {
	if File_chalk_server_v1_datasets_proto != nil {
		return
	}
	file_chalk_server_v1_datasets_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_server_v1_datasets_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_server_v1_datasets_proto_msgTypes[2].OneofWrappers = []any{}
	file_chalk_server_v1_datasets_proto_msgTypes[3].OneofWrappers = []any{}
	file_chalk_server_v1_datasets_proto_msgTypes[6].OneofWrappers = []any{}
	file_chalk_server_v1_datasets_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_datasets_proto_rawDesc), len(file_chalk_server_v1_datasets_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_datasets_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_datasets_proto_depIdxs,
		EnumInfos:         file_chalk_server_v1_datasets_proto_enumTypes,
		MessageInfos:      file_chalk_server_v1_datasets_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_datasets_proto = out.File
	file_chalk_server_v1_datasets_proto_goTypes = nil
	file_chalk_server_v1_datasets_proto_depIdxs = nil
}
