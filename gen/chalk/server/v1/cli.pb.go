// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/server/v1/cli.proto

package serverv1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandLineInterfaceVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	DownloadUrl   string                 `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	Arch          string                 `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`
	Generation    int64                  `protobuf:"varint,5,opt,name=generation,proto3" json:"generation,omitempty"`
	Crc32C        uint32                 `protobuf:"varint,6,opt,name=crc32c,proto3" json:"crc32c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandLineInterfaceVersion) Reset() {
	*x = CommandLineInterfaceVersion{}
	mi := &file_chalk_server_v1_cli_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandLineInterfaceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandLineInterfaceVersion) ProtoMessage() {}

func (x *CommandLineInterfaceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cli_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandLineInterfaceVersion.ProtoReflect.Descriptor instead.
func (*CommandLineInterfaceVersion) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cli_proto_rawDescGZIP(), []int{0}
}

func (x *CommandLineInterfaceVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CommandLineInterfaceVersion) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *CommandLineInterfaceVersion) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *CommandLineInterfaceVersion) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *CommandLineInterfaceVersion) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *CommandLineInterfaceVersion) GetCrc32C() uint32 {
	if x != nil {
		return x.Crc32C
	}
	return 0
}

type GetVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Os            *string                `protobuf:"bytes,1,opt,name=os,proto3,oneof" json:"os,omitempty"`
	Arch          *string                `protobuf:"bytes,2,opt,name=arch,proto3,oneof" json:"arch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionsRequest) Reset() {
	*x = GetVersionsRequest{}
	mi := &file_chalk_server_v1_cli_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest) ProtoMessage() {}

func (x *GetVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cli_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cli_proto_rawDescGZIP(), []int{1}
}

func (x *GetVersionsRequest) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *GetVersionsRequest) GetArch() string {
	if x != nil && x.Arch != nil {
		return *x.Arch
	}
	return ""
}

type GetVersionsResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Versions      []*CommandLineInterfaceVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	Latest        *CommandLineInterfaceVersion   `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
	Nightly       *CommandLineInterfaceVersion   `protobuf:"bytes,3,opt,name=nightly,proto3" json:"nightly,omitempty"`
	Minimum       string                         `protobuf:"bytes,4,opt,name=minimum,proto3" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionsResponse) Reset() {
	*x = GetVersionsResponse{}
	mi := &file_chalk_server_v1_cli_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsResponse) ProtoMessage() {}

func (x *GetVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_server_v1_cli_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetVersionsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_server_v1_cli_proto_rawDescGZIP(), []int{2}
}

func (x *GetVersionsResponse) GetVersions() []*CommandLineInterfaceVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *GetVersionsResponse) GetLatest() *CommandLineInterfaceVersion {
	if x != nil {
		return x.Latest
	}
	return nil
}

func (x *GetVersionsResponse) GetNightly() *CommandLineInterfaceVersion {
	if x != nil {
		return x.Nightly
	}
	return nil
}

func (x *GetVersionsResponse) GetMinimum() string {
	if x != nil {
		return x.Minimum
	}
	return ""
}

var File_chalk_server_v1_cli_proto protoreflect.FileDescriptor

const file_chalk_server_v1_cli_proto_rawDesc = "" +
	"\n" +
	"\x19chalk/server/v1/cli.proto\x12\x0fchalk.server.v1\x1a\x1fchalk/auth/v1/permissions.proto\"\xb6\x01\n" +
	"\x1bCommandLineInterfaceVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12!\n" +
	"\fdownload_url\x18\x02 \x01(\tR\vdownloadUrl\x12\x0e\n" +
	"\x02os\x18\x03 \x01(\tR\x02os\x12\x12\n" +
	"\x04arch\x18\x04 \x01(\tR\x04arch\x12\x1e\n" +
	"\n" +
	"generation\x18\x05 \x01(\x03R\n" +
	"generation\x12\x16\n" +
	"\x06crc32c\x18\x06 \x01(\rR\x06crc32c\"R\n" +
	"\x12GetVersionsRequest\x12\x13\n" +
	"\x02os\x18\x01 \x01(\tH\x00R\x02os\x88\x01\x01\x12\x17\n" +
	"\x04arch\x18\x02 \x01(\tH\x01R\x04arch\x88\x01\x01B\x05\n" +
	"\x03_osB\a\n" +
	"\x05_arch\"\x87\x02\n" +
	"\x13GetVersionsResponse\x12H\n" +
	"\bversions\x18\x01 \x03(\v2,.chalk.server.v1.CommandLineInterfaceVersionR\bversions\x12D\n" +
	"\x06latest\x18\x02 \x01(\v2,.chalk.server.v1.CommandLineInterfaceVersionR\x06latest\x12F\n" +
	"\anightly\x18\x03 \x01(\v2,.chalk.server.v1.CommandLineInterfaceVersionR\anightly\x12\x18\n" +
	"\aminimum\x18\x04 \x01(\tR\aminimum2\x7f\n" +
	"\x1bCommandLineInterfaceService\x12`\n" +
	"\vGetVersions\x12#.chalk.server.v1.GetVersionsRequest\x1a$.chalk.server.v1.GetVersionsResponse\"\x06\x80}\x01\x90\x02\x01B\xb8\x01\n" +
	"\x13com.chalk.server.v1B\bCliProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/server/v1;serverv1\xa2\x02\x03CSX\xaa\x02\x0fChalk.Server.V1\xca\x02\x0fChalk\\Server\\V1\xe2\x02\x1bChalk\\Server\\V1\\GPBMetadata\xea\x02\x11Chalk::Server::V1b\x06proto3"

var (
	file_chalk_server_v1_cli_proto_rawDescOnce sync.Once
	file_chalk_server_v1_cli_proto_rawDescData []byte
)

func file_chalk_server_v1_cli_proto_rawDescGZIP() []byte {
	file_chalk_server_v1_cli_proto_rawDescOnce.Do(func() {
		file_chalk_server_v1_cli_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_server_v1_cli_proto_rawDesc), len(file_chalk_server_v1_cli_proto_rawDesc)))
	})
	return file_chalk_server_v1_cli_proto_rawDescData
}

var file_chalk_server_v1_cli_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chalk_server_v1_cli_proto_goTypes = []any{
	(*CommandLineInterfaceVersion)(nil), // 0: chalk.server.v1.CommandLineInterfaceVersion
	(*GetVersionsRequest)(nil),          // 1: chalk.server.v1.GetVersionsRequest
	(*GetVersionsResponse)(nil),         // 2: chalk.server.v1.GetVersionsResponse
}
var file_chalk_server_v1_cli_proto_depIdxs = []int32{
	0, // 0: chalk.server.v1.GetVersionsResponse.versions:type_name -> chalk.server.v1.CommandLineInterfaceVersion
	0, // 1: chalk.server.v1.GetVersionsResponse.latest:type_name -> chalk.server.v1.CommandLineInterfaceVersion
	0, // 2: chalk.server.v1.GetVersionsResponse.nightly:type_name -> chalk.server.v1.CommandLineInterfaceVersion
	1, // 3: chalk.server.v1.CommandLineInterfaceService.GetVersions:input_type -> chalk.server.v1.GetVersionsRequest
	2, // 4: chalk.server.v1.CommandLineInterfaceService.GetVersions:output_type -> chalk.server.v1.GetVersionsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chalk_server_v1_cli_proto_init() }
func file_chalk_server_v1_cli_proto_init() {
	if File_chalk_server_v1_cli_proto != nil {
		return
	}
	file_chalk_server_v1_cli_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_server_v1_cli_proto_rawDesc), len(file_chalk_server_v1_cli_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_server_v1_cli_proto_goTypes,
		DependencyIndexes: file_chalk_server_v1_cli_proto_depIdxs,
		MessageInfos:      file_chalk_server_v1_cli_proto_msgTypes,
	}.Build()
	File_chalk_server_v1_cli_proto = out.File
	file_chalk_server_v1_cli_proto_goTypes = nil
	file_chalk_server_v1_cli_proto_depIdxs = nil
}
