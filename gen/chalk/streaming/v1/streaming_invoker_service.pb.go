// The StreamingInvokerService is used to communicate between the main process and remote (i.e. subprocess) invokers

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/streaming/v1/streaming_invoker_service.proto

package streamingv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamingUnaryInvokeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionName  string                 `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // The name of the function to invoke
	InputTable    []byte                 `protobuf:"bytes,2,opt,name=input_table,json=inputTable,proto3" json:"input_table,omitempty"`       // The input data for the function, serialized as bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingUnaryInvokeRequest) Reset() {
	*x = StreamingUnaryInvokeRequest{}
	mi := &file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingUnaryInvokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingUnaryInvokeRequest) ProtoMessage() {}

func (x *StreamingUnaryInvokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingUnaryInvokeRequest.ProtoReflect.Descriptor instead.
func (*StreamingUnaryInvokeRequest) Descriptor() ([]byte, []int) {
	return file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescGZIP(), []int{0}
}

func (x *StreamingUnaryInvokeRequest) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *StreamingUnaryInvokeRequest) GetInputTable() []byte {
	if x != nil {
		return x.InputTable
	}
	return nil
}

type StreamingUnaryInvokeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OutputTable   []byte                 `protobuf:"bytes,1,opt,name=output_table,json=outputTable,proto3" json:"output_table,omitempty"` // The output data from the function, serialized as bytes
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                        // Timestamp of when the response was generated
	Error         *v1.ChalkError         `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`                          // Optional error if the invocation failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingUnaryInvokeResponse) Reset() {
	*x = StreamingUnaryInvokeResponse{}
	mi := &file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingUnaryInvokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingUnaryInvokeResponse) ProtoMessage() {}

func (x *StreamingUnaryInvokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingUnaryInvokeResponse.ProtoReflect.Descriptor instead.
func (*StreamingUnaryInvokeResponse) Descriptor() ([]byte, []int) {
	return file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescGZIP(), []int{1}
}

func (x *StreamingUnaryInvokeResponse) GetOutputTable() []byte {
	if x != nil {
		return x.OutputTable
	}
	return nil
}

func (x *StreamingUnaryInvokeResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamingUnaryInvokeResponse) GetError() *v1.ChalkError {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_chalk_streaming_v1_streaming_invoker_service_proto protoreflect.FileDescriptor

const file_chalk_streaming_v1_streaming_invoker_service_proto_rawDesc = "" +
	"\n" +
	"2chalk/streaming/v1/streaming_invoker_service.proto\x12\x12chalk.streaming.v1\x1a!chalk/common/v1/chalk_error.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"c\n" +
	"\x1bStreamingUnaryInvokeRequest\x12#\n" +
	"\rfunction_name\x18\x01 \x01(\tR\ffunctionName\x12\x1f\n" +
	"\vinput_table\x18\x02 \x01(\fR\n" +
	"inputTable\"\xbd\x01\n" +
	"\x1cStreamingUnaryInvokeResponse\x12!\n" +
	"\foutput_table\x18\x01 \x01(\fR\voutputTable\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x126\n" +
	"\x05error\x18\x03 \x01(\v2\x1b.chalk.common.v1.ChalkErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error2\x96\x01\n" +
	"\x17StreamingInvokerService\x12{\n" +
	"\x14StreamingUnaryInvoke\x12/.chalk.streaming.v1.StreamingUnaryInvokeRequest\x1a0.chalk.streaming.v1.StreamingUnaryInvokeResponse\"\x00B\xe1\x01\n" +
	"\x16com.chalk.streaming.v1B\x1cStreamingInvokerServiceProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/streaming/v1;streamingv1\xa2\x02\x03CSX\xaa\x02\x12Chalk.Streaming.V1\xca\x02\x12Chalk\\Streaming\\V1\xe2\x02\x1eChalk\\Streaming\\V1\\GPBMetadata\xea\x02\x14Chalk::Streaming::V1b\x06proto3"

var (
	file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescOnce sync.Once
	file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescData []byte
)

func file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescGZIP() []byte {
	file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescOnce.Do(func() {
		file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_streaming_v1_streaming_invoker_service_proto_rawDesc), len(file_chalk_streaming_v1_streaming_invoker_service_proto_rawDesc)))
	})
	return file_chalk_streaming_v1_streaming_invoker_service_proto_rawDescData
}

var file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_streaming_v1_streaming_invoker_service_proto_goTypes = []any{
	(*StreamingUnaryInvokeRequest)(nil),  // 0: chalk.streaming.v1.StreamingUnaryInvokeRequest
	(*StreamingUnaryInvokeResponse)(nil), // 1: chalk.streaming.v1.StreamingUnaryInvokeResponse
	(*timestamppb.Timestamp)(nil),        // 2: google.protobuf.Timestamp
	(*v1.ChalkError)(nil),                // 3: chalk.common.v1.ChalkError
}
var file_chalk_streaming_v1_streaming_invoker_service_proto_depIdxs = []int32{
	2, // 0: chalk.streaming.v1.StreamingUnaryInvokeResponse.timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: chalk.streaming.v1.StreamingUnaryInvokeResponse.error:type_name -> chalk.common.v1.ChalkError
	0, // 2: chalk.streaming.v1.StreamingInvokerService.StreamingUnaryInvoke:input_type -> chalk.streaming.v1.StreamingUnaryInvokeRequest
	1, // 3: chalk.streaming.v1.StreamingInvokerService.StreamingUnaryInvoke:output_type -> chalk.streaming.v1.StreamingUnaryInvokeResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_streaming_v1_streaming_invoker_service_proto_init() }
func file_chalk_streaming_v1_streaming_invoker_service_proto_init() {
	if File_chalk_streaming_v1_streaming_invoker_service_proto != nil {
		return
	}
	file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_streaming_v1_streaming_invoker_service_proto_rawDesc), len(file_chalk_streaming_v1_streaming_invoker_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_streaming_v1_streaming_invoker_service_proto_goTypes,
		DependencyIndexes: file_chalk_streaming_v1_streaming_invoker_service_proto_depIdxs,
		MessageInfos:      file_chalk_streaming_v1_streaming_invoker_service_proto_msgTypes,
	}.Build()
	File_chalk_streaming_v1_streaming_invoker_service_proto = out.File
	file_chalk_streaming_v1_streaming_invoker_service_proto_goTypes = nil
	file_chalk_streaming_v1_streaming_invoker_service_proto_depIdxs = nil
}
