// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/common/v2/table.proto

package commonv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Table struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Table_Feather
	//	*Table_Uri
	Payload       isTable_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table) Reset() {
	*x = Table{}
	mi := &file_chalk_common_v2_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v2_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_chalk_common_v2_table_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetPayload() isTable_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Table) GetFeather() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Table_Feather); ok {
			return x.Feather
		}
	}
	return nil
}

func (x *Table) GetUri() string {
	if x != nil {
		if x, ok := x.Payload.(*Table_Uri); ok {
			return x.Uri
		}
	}
	return ""
}

type isTable_Payload interface {
	isTable_Payload()
}

type Table_Feather struct {
	Feather []byte `protobuf:"bytes,1,opt,name=feather,proto3,oneof"`
}

type Table_Uri struct {
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3,oneof"`
}

func (*Table_Feather) isTable_Payload() {}

func (*Table_Uri) isTable_Payload() {}

var File_chalk_common_v2_table_proto protoreflect.FileDescriptor

const file_chalk_common_v2_table_proto_rawDesc = "" +
	"\n" +
	"\x1bchalk/common/v2/table.proto\x12\x0fchalk.common.v2\"B\n" +
	"\x05Table\x12\x1a\n" +
	"\afeather\x18\x01 \x01(\fH\x00R\afeather\x12\x12\n" +
	"\x03uri\x18\x02 \x01(\tH\x00R\x03uriB\t\n" +
	"\apayloadB\xba\x01\n" +
	"\x13com.chalk.common.v2B\n" +
	"TableProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/common/v2;commonv2\xa2\x02\x03CCX\xaa\x02\x0fChalk.Common.V2\xca\x02\x0fChalk\\Common\\V2\xe2\x02\x1bChalk\\Common\\V2\\GPBMetadata\xea\x02\x11Chalk::Common::V2b\x06proto3"

var (
	file_chalk_common_v2_table_proto_rawDescOnce sync.Once
	file_chalk_common_v2_table_proto_rawDescData []byte
)

func file_chalk_common_v2_table_proto_rawDescGZIP() []byte {
	file_chalk_common_v2_table_proto_rawDescOnce.Do(func() {
		file_chalk_common_v2_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_common_v2_table_proto_rawDesc), len(file_chalk_common_v2_table_proto_rawDesc)))
	})
	return file_chalk_common_v2_table_proto_rawDescData
}

var file_chalk_common_v2_table_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chalk_common_v2_table_proto_goTypes = []any{
	(*Table)(nil), // 0: chalk.common.v2.Table
}
var file_chalk_common_v2_table_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chalk_common_v2_table_proto_init() }
func file_chalk_common_v2_table_proto_init() {
	if File_chalk_common_v2_table_proto != nil {
		return
	}
	file_chalk_common_v2_table_proto_msgTypes[0].OneofWrappers = []any{
		(*Table_Feather)(nil),
		(*Table_Uri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_common_v2_table_proto_rawDesc), len(file_chalk_common_v2_table_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_common_v2_table_proto_goTypes,
		DependencyIndexes: file_chalk_common_v2_table_proto_depIdxs,
		MessageInfos:      file_chalk_common_v2_table_proto_msgTypes,
	}.Build()
	File_chalk_common_v2_table_proto = out.File
	file_chalk_common_v2_table_proto_goTypes = nil
	file_chalk_common_v2_table_proto_depIdxs = nil
}
