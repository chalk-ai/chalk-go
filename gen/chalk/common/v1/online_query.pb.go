// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/common/v1/online_query.proto

package commonv1

import (
	v1 "github.com/chalk-ai/chalk-go/gen/chalk/expression/v1"
	v11 "github.com/chalk-ai/chalk-go/gen/chalk/graph/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatherBodyType int32

const (
	FeatherBodyType_FEATHER_BODY_TYPE_UNSPECIFIED    FeatherBodyType = 0
	FeatherBodyType_FEATHER_BODY_TYPE_TABLE          FeatherBodyType = 1
	FeatherBodyType_FEATHER_BODY_TYPE_RECORD_BATCHES FeatherBodyType = 2
)

// Enum value maps for FeatherBodyType.
var (
	FeatherBodyType_name = map[int32]string{
		0: "FEATHER_BODY_TYPE_UNSPECIFIED",
		1: "FEATHER_BODY_TYPE_TABLE",
		2: "FEATHER_BODY_TYPE_RECORD_BATCHES",
	}
	FeatherBodyType_value = map[string]int32{
		"FEATHER_BODY_TYPE_UNSPECIFIED":    0,
		"FEATHER_BODY_TYPE_TABLE":          1,
		"FEATHER_BODY_TYPE_RECORD_BATCHES": 2,
	}
)

func (x FeatherBodyType) Enum() *FeatherBodyType {
	p := new(FeatherBodyType)
	*p = x
	return p
}

func (x FeatherBodyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatherBodyType) Descriptor() protoreflect.EnumDescriptor {
	return file_chalk_common_v1_online_query_proto_enumTypes[0].Descriptor()
}

func (FeatherBodyType) Type() protoreflect.EnumType {
	return &file_chalk_common_v1_online_query_proto_enumTypes[0]
}

func (x FeatherBodyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatherBodyType.Descriptor instead.
func (FeatherBodyType) EnumDescriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{0}
}

type OnlineQueryRequest struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	Inputs          map[string]*structpb.Value  `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Outputs         []*OutputExpr               `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Now             *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=now,proto3,oneof" json:"now,omitempty"`
	Staleness       map[string]string           `protobuf:"bytes,4,rep,name=staleness,proto3" json:"staleness,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Context         *OnlineQueryContext         `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	ResponseOptions *OnlineQueryResponseOptions `protobuf:"bytes,6,opt,name=response_options,json=responseOptions,proto3" json:"response_options,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OnlineQueryRequest) Reset() {
	*x = OnlineQueryRequest{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryRequest) ProtoMessage() {}

func (x *OnlineQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryRequest.ProtoReflect.Descriptor instead.
func (*OnlineQueryRequest) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{0}
}

func (x *OnlineQueryRequest) GetInputs() map[string]*structpb.Value {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *OnlineQueryRequest) GetOutputs() []*OutputExpr {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *OnlineQueryRequest) GetNow() *timestamppb.Timestamp {
	if x != nil {
		return x.Now
	}
	return nil
}

func (x *OnlineQueryRequest) GetStaleness() map[string]string {
	if x != nil {
		return x.Staleness
	}
	return nil
}

func (x *OnlineQueryRequest) GetContext() *OnlineQueryContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *OnlineQueryRequest) GetResponseOptions() *OnlineQueryResponseOptions {
	if x != nil {
		return x.ResponseOptions
	}
	return nil
}

type OnlineQueryBulkRequest struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	InputsFeather   []byte                      `protobuf:"bytes,1,opt,name=inputs_feather,json=inputsFeather,proto3" json:"inputs_feather,omitempty"`
	Outputs         []*OutputExpr               `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Now             []*timestamppb.Timestamp    `protobuf:"bytes,3,rep,name=now,proto3" json:"now,omitempty"`
	Staleness       map[string]string           `protobuf:"bytes,4,rep,name=staleness,proto3" json:"staleness,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Context         *OnlineQueryContext         `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	ResponseOptions *OnlineQueryResponseOptions `protobuf:"bytes,6,opt,name=response_options,json=responseOptions,proto3" json:"response_options,omitempty"`
	BodyType        FeatherBodyType             `protobuf:"varint,7,opt,name=body_type,json=bodyType,proto3,enum=chalk.common.v1.FeatherBodyType" json:"body_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OnlineQueryBulkRequest) Reset() {
	*x = OnlineQueryBulkRequest{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryBulkRequest) ProtoMessage() {}

func (x *OnlineQueryBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryBulkRequest.ProtoReflect.Descriptor instead.
func (*OnlineQueryBulkRequest) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{1}
}

func (x *OnlineQueryBulkRequest) GetInputsFeather() []byte {
	if x != nil {
		return x.InputsFeather
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetOutputs() []*OutputExpr {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetNow() []*timestamppb.Timestamp {
	if x != nil {
		return x.Now
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetStaleness() map[string]string {
	if x != nil {
		return x.Staleness
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetContext() *OnlineQueryContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetResponseOptions() *OnlineQueryResponseOptions {
	if x != nil {
		return x.ResponseOptions
	}
	return nil
}

func (x *OnlineQueryBulkRequest) GetBodyType() FeatherBodyType {
	if x != nil {
		return x.BodyType
	}
	return FeatherBodyType_FEATHER_BODY_TYPE_UNSPECIFIED
}

type GenericSingleQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Query:
	//
	//	*GenericSingleQuery_SingleRequest
	//	*GenericSingleQuery_BulkRequest
	Query         isGenericSingleQuery_Query `protobuf_oneof:"query"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericSingleQuery) Reset() {
	*x = GenericSingleQuery{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericSingleQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericSingleQuery) ProtoMessage() {}

func (x *GenericSingleQuery) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericSingleQuery.ProtoReflect.Descriptor instead.
func (*GenericSingleQuery) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{2}
}

func (x *GenericSingleQuery) GetQuery() isGenericSingleQuery_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GenericSingleQuery) GetSingleRequest() *OnlineQueryRequest {
	if x != nil {
		if x, ok := x.Query.(*GenericSingleQuery_SingleRequest); ok {
			return x.SingleRequest
		}
	}
	return nil
}

func (x *GenericSingleQuery) GetBulkRequest() *OnlineQueryBulkRequest {
	if x != nil {
		if x, ok := x.Query.(*GenericSingleQuery_BulkRequest); ok {
			return x.BulkRequest
		}
	}
	return nil
}

type isGenericSingleQuery_Query interface {
	isGenericSingleQuery_Query()
}

type GenericSingleQuery_SingleRequest struct {
	SingleRequest *OnlineQueryRequest `protobuf:"bytes,1,opt,name=single_request,json=singleRequest,proto3,oneof"`
}

type GenericSingleQuery_BulkRequest struct {
	BulkRequest *OnlineQueryBulkRequest `protobuf:"bytes,2,opt,name=bulk_request,json=bulkRequest,proto3,oneof"`
}

func (*GenericSingleQuery_SingleRequest) isGenericSingleQuery_Query() {}

func (*GenericSingleQuery_BulkRequest) isGenericSingleQuery_Query() {}

type OnlineQueryMultiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queries       []*GenericSingleQuery  `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryMultiRequest) Reset() {
	*x = OnlineQueryMultiRequest{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryMultiRequest) ProtoMessage() {}

func (x *OnlineQueryMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryMultiRequest.ProtoReflect.Descriptor instead.
func (*OnlineQueryMultiRequest) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{3}
}

func (x *OnlineQueryMultiRequest) GetQueries() []*GenericSingleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type FeatureExpression struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OutputColumnName string                 `protobuf:"bytes,1,opt,name=output_column_name,json=outputColumnName,proto3" json:"output_column_name,omitempty"`
	Namespace        string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Expr             *v1.LogicalExprNode    `protobuf:"bytes,2,opt,name=expr,proto3" json:"expr,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FeatureExpression) Reset() {
	*x = FeatureExpression{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureExpression) ProtoMessage() {}

func (x *FeatureExpression) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureExpression.ProtoReflect.Descriptor instead.
func (*FeatureExpression) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{4}
}

func (x *FeatureExpression) GetOutputColumnName() string {
	if x != nil {
		return x.OutputColumnName
	}
	return ""
}

func (x *FeatureExpression) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FeatureExpression) GetExpr() *v1.LogicalExprNode {
	if x != nil {
		return x.Expr
	}
	return nil
}

// Represent an online query output. Currently these are just single feature FQNs.
// In the future these could be expressions like `User.card.transactions[_.amount < 100]`
type OutputExpr struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Expr:
	//
	//	*OutputExpr_FeatureFqn
	//	*OutputExpr_FeatureExpression
	Expr          isOutputExpr_Expr `protobuf_oneof:"expr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputExpr) Reset() {
	*x = OutputExpr{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputExpr) ProtoMessage() {}

func (x *OutputExpr) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputExpr.ProtoReflect.Descriptor instead.
func (*OutputExpr) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{5}
}

func (x *OutputExpr) GetExpr() isOutputExpr_Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

func (x *OutputExpr) GetFeatureFqn() string {
	if x != nil {
		if x, ok := x.Expr.(*OutputExpr_FeatureFqn); ok {
			return x.FeatureFqn
		}
	}
	return ""
}

func (x *OutputExpr) GetFeatureExpression() *FeatureExpression {
	if x != nil {
		if x, ok := x.Expr.(*OutputExpr_FeatureExpression); ok {
			return x.FeatureExpression
		}
	}
	return nil
}

type isOutputExpr_Expr interface {
	isOutputExpr_Expr()
}

type OutputExpr_FeatureFqn struct {
	FeatureFqn string `protobuf:"bytes,1,opt,name=feature_fqn,json=featureFqn,proto3,oneof"`
}

type OutputExpr_FeatureExpression struct {
	FeatureExpression *FeatureExpression `protobuf:"bytes,2,opt,name=feature_expression,json=featureExpression,proto3,oneof"`
}

func (*OutputExpr_FeatureFqn) isOutputExpr_Expr() {}

func (*OutputExpr_FeatureExpression) isOutputExpr_Expr() {}

// Roughly speaking data in here should affect the query hash key / the query plan
type OnlineQueryContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
	Environment          string   `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"` // environment id is set in the header. This field is not set anymore
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	RequiredResolverTags []string `protobuf:"bytes,3,rep,name=required_resolver_tags,json=requiredResolverTags,proto3" json:"required_resolver_tags,omitempty"`
	// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
	DeploymentId *string `protobuf:"bytes,4,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"` // deployment id is set in the header. This field is not set anymore
	// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
	BranchId         *string `protobuf:"bytes,5,opt,name=branch_id,json=branchId,proto3,oneof" json:"branch_id,omitempty"` // branch_id is set in the header. This field is not set anymore
	CorrelationId    *string `protobuf:"bytes,6,opt,name=correlation_id,json=correlationId,proto3,oneof" json:"correlation_id,omitempty"`
	QueryName        *string `protobuf:"bytes,7,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	QueryNameVersion *string `protobuf:"bytes,8,opt,name=query_name_version,json=queryNameVersion,proto3,oneof" json:"query_name_version,omitempty"`
	// Arbitrary flags for the query such as store_plan_stages
	// If a flag because consistently used it should be moved into an actual field.
	Options map[string]*structpb.Value `protobuf:"bytes,9,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Value metrics will be tagged by the output of the given features
	ValueMetricsTagByFeatures []*OutputExpr `protobuf:"bytes,10,rep,name=value_metrics_tag_by_features,json=valueMetricsTagByFeatures,proto3" json:"value_metrics_tag_by_features,omitempty"`
	// Query context is a dictionary of JSON-serializable values that can be used in resolvers (see https://docs.chalk.ai/api-docs#ChalkContext)
	QueryContext map[string]*structpb.Value `protobuf:"bytes,11,rep,name=query_context,json=queryContext,proto3" json:"query_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional features and resolvers to be used to plan this specific query
	OverlayGraph  *v11.OverlayGraph `protobuf:"bytes,12,opt,name=overlay_graph,json=overlayGraph,proto3,oneof" json:"overlay_graph,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryContext) Reset() {
	*x = OnlineQueryContext{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryContext) ProtoMessage() {}

func (x *OnlineQueryContext) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryContext.ProtoReflect.Descriptor instead.
func (*OnlineQueryContext) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
func (x *OnlineQueryContext) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *OnlineQueryContext) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OnlineQueryContext) GetRequiredResolverTags() []string {
	if x != nil {
		return x.RequiredResolverTags
	}
	return nil
}

// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
func (x *OnlineQueryContext) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

// Deprecated: Marked as deprecated in chalk/common/v1/online_query.proto.
func (x *OnlineQueryContext) GetBranchId() string {
	if x != nil && x.BranchId != nil {
		return *x.BranchId
	}
	return ""
}

func (x *OnlineQueryContext) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *OnlineQueryContext) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *OnlineQueryContext) GetQueryNameVersion() string {
	if x != nil && x.QueryNameVersion != nil {
		return *x.QueryNameVersion
	}
	return ""
}

func (x *OnlineQueryContext) GetOptions() map[string]*structpb.Value {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *OnlineQueryContext) GetValueMetricsTagByFeatures() []*OutputExpr {
	if x != nil {
		return x.ValueMetricsTagByFeatures
	}
	return nil
}

func (x *OnlineQueryContext) GetQueryContext() map[string]*structpb.Value {
	if x != nil {
		return x.QueryContext
	}
	return nil
}

func (x *OnlineQueryContext) GetOverlayGraph() *v11.OverlayGraph {
	if x != nil {
		return x.OverlayGraph
	}
	return nil
}

// Options re: how we construct the response, shouldn't affect the query hash
type OnlineQueryResponseOptions struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	IncludeMeta     bool                    `protobuf:"varint,1,opt,name=include_meta,json=includeMeta,proto3" json:"include_meta,omitempty"`
	Explain         *ExplainOptions         `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
	EncodingOptions *FeatureEncodingOptions `protobuf:"bytes,3,opt,name=encoding_options,json=encodingOptions,proto3" json:"encoding_options,omitempty"`
	// Customer-provided metadata that gets returned in the response
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryResponseOptions) Reset() {
	*x = OnlineQueryResponseOptions{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryResponseOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryResponseOptions) ProtoMessage() {}

func (x *OnlineQueryResponseOptions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryResponseOptions.ProtoReflect.Descriptor instead.
func (*OnlineQueryResponseOptions) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineQueryResponseOptions) GetIncludeMeta() bool {
	if x != nil {
		return x.IncludeMeta
	}
	return false
}

func (x *OnlineQueryResponseOptions) GetExplain() *ExplainOptions {
	if x != nil {
		return x.Explain
	}
	return nil
}

func (x *OnlineQueryResponseOptions) GetEncodingOptions() *FeatureEncodingOptions {
	if x != nil {
		return x.EncodingOptions
	}
	return nil
}

func (x *OnlineQueryResponseOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ExplainOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplainOptions) Reset() {
	*x = ExplainOptions{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainOptions) ProtoMessage() {}

func (x *ExplainOptions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainOptions.ProtoReflect.Descriptor instead.
func (*ExplainOptions) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{8}
}

type FeatureEncodingOptions struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	EncodeStructsAsObjects bool                   `protobuf:"varint,1,opt,name=encode_structs_as_objects,json=encodeStructsAsObjects,proto3" json:"encode_structs_as_objects,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FeatureEncodingOptions) Reset() {
	*x = FeatureEncodingOptions{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureEncodingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureEncodingOptions) ProtoMessage() {}

func (x *FeatureEncodingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureEncodingOptions.ProtoReflect.Descriptor instead.
func (*FeatureEncodingOptions) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{9}
}

func (x *FeatureEncodingOptions) GetEncodeStructsAsObjects() bool {
	if x != nil {
		return x.EncodeStructsAsObjects
	}
	return false
}

type OnlineQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *OnlineQueryResult     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors        []*ChalkError          `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	ResponseMeta  *OnlineQueryMetadata   `protobuf:"bytes,3,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryResponse) Reset() {
	*x = OnlineQueryResponse{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryResponse) ProtoMessage() {}

func (x *OnlineQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryResponse.ProtoReflect.Descriptor instead.
func (*OnlineQueryResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{10}
}

func (x *OnlineQueryResponse) GetData() *OnlineQueryResult {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OnlineQueryResponse) GetErrors() []*ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *OnlineQueryResponse) GetResponseMeta() *OnlineQueryMetadata {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

type OnlineQueryBulkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScalarsData   []byte                 `protobuf:"bytes,1,opt,name=scalars_data,json=scalarsData,proto3" json:"scalars_data,omitempty"`
	GroupsData    map[string][]byte      `protobuf:"bytes,2,rep,name=groups_data,json=groupsData,proto3" json:"groups_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Errors        []*ChalkError          `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	ResponseMeta  *OnlineQueryMetadata   `protobuf:"bytes,4,opt,name=response_meta,json=responseMeta,proto3" json:"response_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryBulkResponse) Reset() {
	*x = OnlineQueryBulkResponse{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryBulkResponse) ProtoMessage() {}

func (x *OnlineQueryBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryBulkResponse.ProtoReflect.Descriptor instead.
func (*OnlineQueryBulkResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{11}
}

func (x *OnlineQueryBulkResponse) GetScalarsData() []byte {
	if x != nil {
		return x.ScalarsData
	}
	return nil
}

func (x *OnlineQueryBulkResponse) GetGroupsData() map[string][]byte {
	if x != nil {
		return x.GroupsData
	}
	return nil
}

func (x *OnlineQueryBulkResponse) GetErrors() []*ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *OnlineQueryBulkResponse) GetResponseMeta() *OnlineQueryMetadata {
	if x != nil {
		return x.ResponseMeta
	}
	return nil
}

type GenericSingleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Query:
	//
	//	*GenericSingleResponse_SingleResponse
	//	*GenericSingleResponse_BulkResponse
	Query         isGenericSingleResponse_Query `protobuf_oneof:"query"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericSingleResponse) Reset() {
	*x = GenericSingleResponse{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericSingleResponse) ProtoMessage() {}

func (x *GenericSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericSingleResponse.ProtoReflect.Descriptor instead.
func (*GenericSingleResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{12}
}

func (x *GenericSingleResponse) GetQuery() isGenericSingleResponse_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GenericSingleResponse) GetSingleResponse() *OnlineQueryResponse {
	if x != nil {
		if x, ok := x.Query.(*GenericSingleResponse_SingleResponse); ok {
			return x.SingleResponse
		}
	}
	return nil
}

func (x *GenericSingleResponse) GetBulkResponse() *OnlineQueryBulkResponse {
	if x != nil {
		if x, ok := x.Query.(*GenericSingleResponse_BulkResponse); ok {
			return x.BulkResponse
		}
	}
	return nil
}

type isGenericSingleResponse_Query interface {
	isGenericSingleResponse_Query()
}

type GenericSingleResponse_SingleResponse struct {
	SingleResponse *OnlineQueryResponse `protobuf:"bytes,1,opt,name=single_response,json=singleResponse,proto3,oneof"`
}

type GenericSingleResponse_BulkResponse struct {
	BulkResponse *OnlineQueryBulkResponse `protobuf:"bytes,2,opt,name=bulk_response,json=bulkResponse,proto3,oneof"`
}

func (*GenericSingleResponse_SingleResponse) isGenericSingleResponse_Query() {}

func (*GenericSingleResponse_BulkResponse) isGenericSingleResponse_Query() {}

type OnlineQueryMultiResponse struct {
	state     protoimpl.MessageState   `protogen:"open.v1"`
	Responses []*GenericSingleResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	// Internal errors not tied to a specific request. Most errors should be stored in the individual response objects.
	Errors        []*ChalkError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryMultiResponse) Reset() {
	*x = OnlineQueryMultiResponse{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryMultiResponse) ProtoMessage() {}

func (x *OnlineQueryMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryMultiResponse.ProtoReflect.Descriptor instead.
func (*OnlineQueryMultiResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{13}
}

func (x *OnlineQueryMultiResponse) GetResponses() []*GenericSingleResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *OnlineQueryMultiResponse) GetErrors() []*ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type OnlineQueryResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*FeatureResult       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineQueryResult) Reset() {
	*x = OnlineQueryResult{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryResult) ProtoMessage() {}

func (x *OnlineQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryResult.ProtoReflect.Descriptor instead.
func (*OnlineQueryResult) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{14}
}

func (x *OnlineQueryResult) GetResults() []*FeatureResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type FeatureResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Pkey          *structpb.Value        `protobuf:"bytes,6,opt,name=pkey,proto3" json:"pkey,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error         *ChalkError            `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Ts            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts,proto3,oneof" json:"ts,omitempty"`
	Meta          *FeatureMeta           `protobuf:"bytes,5,opt,name=meta,proto3,oneof" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeatureResult) Reset() {
	*x = FeatureResult{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureResult) ProtoMessage() {}

func (x *FeatureResult) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureResult.ProtoReflect.Descriptor instead.
func (*FeatureResult) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{15}
}

func (x *FeatureResult) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FeatureResult) GetPkey() *structpb.Value {
	if x != nil {
		return x.Pkey
	}
	return nil
}

func (x *FeatureResult) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FeatureResult) GetError() *ChalkError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FeatureResult) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *FeatureResult) GetMeta() *FeatureMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FeatureMeta struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ChosenResolverFqn string                 `protobuf:"bytes,1,opt,name=chosen_resolver_fqn,json=chosenResolverFqn,proto3" json:"chosen_resolver_fqn,omitempty"`
	CacheHit          bool                   `protobuf:"varint,2,opt,name=cache_hit,json=cacheHit,proto3" json:"cache_hit,omitempty"`
	PrimitiveType     string                 `protobuf:"bytes,3,opt,name=primitive_type,json=primitiveType,proto3" json:"primitive_type,omitempty"`
	Version           int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FeatureMeta) Reset() {
	*x = FeatureMeta{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureMeta) ProtoMessage() {}

func (x *FeatureMeta) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureMeta.ProtoReflect.Descriptor instead.
func (*FeatureMeta) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{16}
}

func (x *FeatureMeta) GetChosenResolverFqn() string {
	if x != nil {
		return x.ChosenResolverFqn
	}
	return ""
}

func (x *FeatureMeta) GetCacheHit() bool {
	if x != nil {
		return x.CacheHit
	}
	return false
}

func (x *FeatureMeta) GetPrimitiveType() string {
	if x != nil {
		return x.PrimitiveType
	}
	return ""
}

func (x *FeatureMeta) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type OnlineQueryMetadata struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ExecutionDuration *durationpb.Duration   `protobuf:"bytes,1,opt,name=execution_duration,json=executionDuration,proto3" json:"execution_duration,omitempty"`
	DeploymentId      string                 `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	EnvironmentId     string                 `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	EnvironmentName   string                 `protobuf:"bytes,4,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	QueryId           string                 `protobuf:"bytes,5,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	QueryTimestamp    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=query_timestamp,json=queryTimestamp,proto3" json:"query_timestamp,omitempty"`
	QueryHash         string                 `protobuf:"bytes,7,opt,name=query_hash,json=queryHash,proto3" json:"query_hash,omitempty"`
	ExplainOutput     *QueryExplainInfo      `protobuf:"bytes,8,opt,name=explain_output,json=explainOutput,proto3" json:"explain_output,omitempty"`
	// Same customer-provided metadata that was provided in the request.
	Metadata           map[string]string          `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AdditionalMetadata map[string]*structpb.Value `protobuf:"bytes,10,rep,name=additional_metadata,json=additionalMetadata,proto3" json:"additional_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OnlineQueryMetadata) Reset() {
	*x = OnlineQueryMetadata{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineQueryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineQueryMetadata) ProtoMessage() {}

func (x *OnlineQueryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineQueryMetadata.ProtoReflect.Descriptor instead.
func (*OnlineQueryMetadata) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{17}
}

func (x *OnlineQueryMetadata) GetExecutionDuration() *durationpb.Duration {
	if x != nil {
		return x.ExecutionDuration
	}
	return nil
}

func (x *OnlineQueryMetadata) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *OnlineQueryMetadata) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *OnlineQueryMetadata) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *OnlineQueryMetadata) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *OnlineQueryMetadata) GetQueryTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.QueryTimestamp
	}
	return nil
}

func (x *OnlineQueryMetadata) GetQueryHash() string {
	if x != nil {
		return x.QueryHash
	}
	return ""
}

func (x *OnlineQueryMetadata) GetExplainOutput() *QueryExplainInfo {
	if x != nil {
		return x.ExplainOutput
	}
	return nil
}

func (x *OnlineQueryMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OnlineQueryMetadata) GetAdditionalMetadata() map[string]*structpb.Value {
	if x != nil {
		return x.AdditionalMetadata
	}
	return nil
}

type QueryExplainInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unstructured string representation of the plan
	PlanString    *string `protobuf:"bytes,1,opt,name=plan_string,json=planString,proto3,oneof" json:"plan_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExplainInfo) Reset() {
	*x = QueryExplainInfo{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExplainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExplainInfo) ProtoMessage() {}

func (x *QueryExplainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExplainInfo.ProtoReflect.Descriptor instead.
func (*QueryExplainInfo) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{18}
}

func (x *QueryExplainInfo) GetPlanString() string {
	if x != nil && x.PlanString != nil {
		return *x.PlanString
	}
	return ""
}

// UPLOAD FEATURES
type UploadFeaturesBulkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InputsFeather []byte                 `protobuf:"bytes,1,opt,name=inputs_feather,json=inputsFeather,proto3" json:"inputs_feather,omitempty"`
	BodyType      FeatherBodyType        `protobuf:"varint,7,opt,name=body_type,json=bodyType,proto3,enum=chalk.common.v1.FeatherBodyType" json:"body_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFeaturesBulkRequest) Reset() {
	*x = UploadFeaturesBulkRequest{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFeaturesBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFeaturesBulkRequest) ProtoMessage() {}

func (x *UploadFeaturesBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFeaturesBulkRequest.ProtoReflect.Descriptor instead.
func (*UploadFeaturesBulkRequest) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{19}
}

func (x *UploadFeaturesBulkRequest) GetInputsFeather() []byte {
	if x != nil {
		return x.InputsFeather
	}
	return nil
}

func (x *UploadFeaturesBulkRequest) GetBodyType() FeatherBodyType {
	if x != nil {
		return x.BodyType
	}
	return FeatherBodyType_FEATHER_BODY_TYPE_UNSPECIFIED
}

type UploadFeaturesBulkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Errors        []*ChalkError          `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFeaturesBulkResponse) Reset() {
	*x = UploadFeaturesBulkResponse{}
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFeaturesBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFeaturesBulkResponse) ProtoMessage() {}

func (x *UploadFeaturesBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_online_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFeaturesBulkResponse.ProtoReflect.Descriptor instead.
func (*UploadFeaturesBulkResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_online_query_proto_rawDescGZIP(), []int{20}
}

func (x *UploadFeaturesBulkResponse) GetErrors() []*ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_chalk_common_v1_online_query_proto protoreflect.FileDescriptor

const file_chalk_common_v1_online_query_proto_rawDesc = "" +
	"\n" +
	"\"chalk/common/v1/online_query.proto\x12\x0fchalk.common.v1\x1a!chalk/common/v1/chalk_error.proto\x1a$chalk/expression/v1/expression.proto\x1a\x1achalk/graph/v1/graph.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc9\x04\n" +
	"\x12OnlineQueryRequest\x12G\n" +
	"\x06inputs\x18\x01 \x03(\v2/.chalk.common.v1.OnlineQueryRequest.InputsEntryR\x06inputs\x125\n" +
	"\aoutputs\x18\x02 \x03(\v2\x1b.chalk.common.v1.OutputExprR\aoutputs\x121\n" +
	"\x03now\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x03now\x88\x01\x01\x12P\n" +
	"\tstaleness\x18\x04 \x03(\v22.chalk.common.v1.OnlineQueryRequest.StalenessEntryR\tstaleness\x12=\n" +
	"\acontext\x18\x05 \x01(\v2#.chalk.common.v1.OnlineQueryContextR\acontext\x12V\n" +
	"\x10response_options\x18\x06 \x01(\v2+.chalk.common.v1.OnlineQueryResponseOptionsR\x0fresponseOptions\x1aQ\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1a<\n" +
	"\x0eStalenessEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x06\n" +
	"\x04_now\"\x8e\x04\n" +
	"\x16OnlineQueryBulkRequest\x12%\n" +
	"\x0einputs_feather\x18\x01 \x01(\fR\rinputsFeather\x125\n" +
	"\aoutputs\x18\x02 \x03(\v2\x1b.chalk.common.v1.OutputExprR\aoutputs\x12,\n" +
	"\x03now\x18\x03 \x03(\v2\x1a.google.protobuf.TimestampR\x03now\x12T\n" +
	"\tstaleness\x18\x04 \x03(\v26.chalk.common.v1.OnlineQueryBulkRequest.StalenessEntryR\tstaleness\x12=\n" +
	"\acontext\x18\x05 \x01(\v2#.chalk.common.v1.OnlineQueryContextR\acontext\x12V\n" +
	"\x10response_options\x18\x06 \x01(\v2+.chalk.common.v1.OnlineQueryResponseOptionsR\x0fresponseOptions\x12=\n" +
	"\tbody_type\x18\a \x01(\x0e2 .chalk.common.v1.FeatherBodyTypeR\bbodyType\x1a<\n" +
	"\x0eStalenessEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x01\n" +
	"\x12GenericSingleQuery\x12L\n" +
	"\x0esingle_request\x18\x01 \x01(\v2#.chalk.common.v1.OnlineQueryRequestH\x00R\rsingleRequest\x12L\n" +
	"\fbulk_request\x18\x02 \x01(\v2'.chalk.common.v1.OnlineQueryBulkRequestH\x00R\vbulkRequestB\a\n" +
	"\x05query\"X\n" +
	"\x17OnlineQueryMultiRequest\x12=\n" +
	"\aqueries\x18\x01 \x03(\v2#.chalk.common.v1.GenericSingleQueryR\aqueries\"\x99\x01\n" +
	"\x11FeatureExpression\x12,\n" +
	"\x12output_column_name\x18\x01 \x01(\tR\x10outputColumnName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x128\n" +
	"\x04expr\x18\x02 \x01(\v2$.chalk.expression.v1.LogicalExprNodeR\x04expr\"\x8c\x01\n" +
	"\n" +
	"OutputExpr\x12!\n" +
	"\vfeature_fqn\x18\x01 \x01(\tH\x00R\n" +
	"featureFqn\x12S\n" +
	"\x12feature_expression\x18\x02 \x01(\v2\".chalk.common.v1.FeatureExpressionH\x00R\x11featureExpressionB\x06\n" +
	"\x04expr\"\xc2\a\n" +
	"\x12OnlineQueryContext\x12$\n" +
	"\venvironment\x18\x01 \x01(\tB\x02\x18\x01R\venvironment\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x124\n" +
	"\x16required_resolver_tags\x18\x03 \x03(\tR\x14requiredResolverTags\x12,\n" +
	"\rdeployment_id\x18\x04 \x01(\tB\x02\x18\x01H\x00R\fdeploymentId\x88\x01\x01\x12$\n" +
	"\tbranch_id\x18\x05 \x01(\tB\x02\x18\x01H\x01R\bbranchId\x88\x01\x01\x12*\n" +
	"\x0ecorrelation_id\x18\x06 \x01(\tH\x02R\rcorrelationId\x88\x01\x01\x12\"\n" +
	"\n" +
	"query_name\x18\a \x01(\tH\x03R\tqueryName\x88\x01\x01\x121\n" +
	"\x12query_name_version\x18\b \x01(\tH\x04R\x10queryNameVersion\x88\x01\x01\x12J\n" +
	"\aoptions\x18\t \x03(\v20.chalk.common.v1.OnlineQueryContext.OptionsEntryR\aoptions\x12]\n" +
	"\x1dvalue_metrics_tag_by_features\x18\n" +
	" \x03(\v2\x1b.chalk.common.v1.OutputExprR\x19valueMetricsTagByFeatures\x12Z\n" +
	"\rquery_context\x18\v \x03(\v25.chalk.common.v1.OnlineQueryContext.QueryContextEntryR\fqueryContext\x12F\n" +
	"\roverlay_graph\x18\f \x01(\v2\x1c.chalk.graph.v1.OverlayGraphH\x05R\foverlayGraph\x88\x01\x01\x1aR\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1aW\n" +
	"\x11QueryContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B\x10\n" +
	"\x0e_deployment_idB\f\n" +
	"\n" +
	"_branch_idB\x11\n" +
	"\x0f_correlation_idB\r\n" +
	"\v_query_nameB\x15\n" +
	"\x13_query_name_versionB\x10\n" +
	"\x0e_overlay_graph\"\xe2\x02\n" +
	"\x1aOnlineQueryResponseOptions\x12!\n" +
	"\finclude_meta\x18\x01 \x01(\bR\vincludeMeta\x129\n" +
	"\aexplain\x18\x02 \x01(\v2\x1f.chalk.common.v1.ExplainOptionsR\aexplain\x12R\n" +
	"\x10encoding_options\x18\x03 \x01(\v2'.chalk.common.v1.FeatureEncodingOptionsR\x0fencodingOptions\x12U\n" +
	"\bmetadata\x18\x04 \x03(\v29.chalk.common.v1.OnlineQueryResponseOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x10\n" +
	"\x0eExplainOptions\"S\n" +
	"\x16FeatureEncodingOptions\x129\n" +
	"\x19encode_structs_as_objects\x18\x01 \x01(\bR\x16encodeStructsAsObjects\"\xcd\x01\n" +
	"\x13OnlineQueryResponse\x126\n" +
	"\x04data\x18\x01 \x01(\v2\".chalk.common.v1.OnlineQueryResultR\x04data\x123\n" +
	"\x06errors\x18\x02 \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors\x12I\n" +
	"\rresponse_meta\x18\x03 \x01(\v2$.chalk.common.v1.OnlineQueryMetadataR\fresponseMeta\"\xd6\x02\n" +
	"\x17OnlineQueryBulkResponse\x12!\n" +
	"\fscalars_data\x18\x01 \x01(\fR\vscalarsData\x12Y\n" +
	"\vgroups_data\x18\x02 \x03(\v28.chalk.common.v1.OnlineQueryBulkResponse.GroupsDataEntryR\n" +
	"groupsData\x123\n" +
	"\x06errors\x18\x03 \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors\x12I\n" +
	"\rresponse_meta\x18\x04 \x01(\v2$.chalk.common.v1.OnlineQueryMetadataR\fresponseMeta\x1a=\n" +
	"\x0fGroupsDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xc2\x01\n" +
	"\x15GenericSingleResponse\x12O\n" +
	"\x0fsingle_response\x18\x01 \x01(\v2$.chalk.common.v1.OnlineQueryResponseH\x00R\x0esingleResponse\x12O\n" +
	"\rbulk_response\x18\x02 \x01(\v2(.chalk.common.v1.OnlineQueryBulkResponseH\x00R\fbulkResponseB\a\n" +
	"\x05query\"\x95\x01\n" +
	"\x18OnlineQueryMultiResponse\x12D\n" +
	"\tresponses\x18\x01 \x03(\v2&.chalk.common.v1.GenericSingleResponseR\tresponses\x123\n" +
	"\x06errors\x18\x02 \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors\"M\n" +
	"\x11OnlineQueryResult\x128\n" +
	"\aresults\x18\x01 \x03(\v2\x1e.chalk.common.v1.FeatureResultR\aresults\"\xb9\x02\n" +
	"\rFeatureResult\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12*\n" +
	"\x04pkey\x18\x06 \x01(\v2\x16.google.protobuf.ValueR\x04pkey\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value\x126\n" +
	"\x05error\x18\x03 \x01(\v2\x1b.chalk.common.v1.ChalkErrorH\x00R\x05error\x88\x01\x01\x12/\n" +
	"\x02ts\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x02ts\x88\x01\x01\x125\n" +
	"\x04meta\x18\x05 \x01(\v2\x1c.chalk.common.v1.FeatureMetaH\x02R\x04meta\x88\x01\x01B\b\n" +
	"\x06_errorB\x05\n" +
	"\x03_tsB\a\n" +
	"\x05_meta\"\x9b\x01\n" +
	"\vFeatureMeta\x12.\n" +
	"\x13chosen_resolver_fqn\x18\x01 \x01(\tR\x11chosenResolverFqn\x12\x1b\n" +
	"\tcache_hit\x18\x02 \x01(\bR\bcacheHit\x12%\n" +
	"\x0eprimitive_type\x18\x03 \x01(\tR\rprimitiveType\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\"\xfa\x05\n" +
	"\x13OnlineQueryMetadata\x12H\n" +
	"\x12execution_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x11executionDuration\x12#\n" +
	"\rdeployment_id\x18\x02 \x01(\tR\fdeploymentId\x12%\n" +
	"\x0eenvironment_id\x18\x03 \x01(\tR\renvironmentId\x12)\n" +
	"\x10environment_name\x18\x04 \x01(\tR\x0fenvironmentName\x12\x19\n" +
	"\bquery_id\x18\x05 \x01(\tR\aqueryId\x12C\n" +
	"\x0fquery_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0equeryTimestamp\x12\x1d\n" +
	"\n" +
	"query_hash\x18\a \x01(\tR\tqueryHash\x12H\n" +
	"\x0eexplain_output\x18\b \x01(\v2!.chalk.common.v1.QueryExplainInfoR\rexplainOutput\x12N\n" +
	"\bmetadata\x18\t \x03(\v22.chalk.common.v1.OnlineQueryMetadata.MetadataEntryR\bmetadata\x12m\n" +
	"\x13additional_metadata\x18\n" +
	" \x03(\v2<.chalk.common.v1.OnlineQueryMetadata.AdditionalMetadataEntryR\x12additionalMetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a]\n" +
	"\x17AdditionalMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"H\n" +
	"\x10QueryExplainInfo\x12$\n" +
	"\vplan_string\x18\x01 \x01(\tH\x00R\n" +
	"planString\x88\x01\x01B\x0e\n" +
	"\f_plan_string\"\x81\x01\n" +
	"\x19UploadFeaturesBulkRequest\x12%\n" +
	"\x0einputs_feather\x18\x01 \x01(\fR\rinputsFeather\x12=\n" +
	"\tbody_type\x18\a \x01(\x0e2 .chalk.common.v1.FeatherBodyTypeR\bbodyType\"Q\n" +
	"\x1aUploadFeaturesBulkResponse\x123\n" +
	"\x06errors\x18\x01 \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors*w\n" +
	"\x0fFeatherBodyType\x12!\n" +
	"\x1dFEATHER_BODY_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17FEATHER_BODY_TYPE_TABLE\x10\x01\x12$\n" +
	" FEATHER_BODY_TYPE_RECORD_BATCHES\x10\x02B\xc0\x01\n" +
	"\x13com.chalk.common.v1B\x10OnlineQueryProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/common/v1;commonv1\xa2\x02\x03CCX\xaa\x02\x0fChalk.Common.V1\xca\x02\x0fChalk\\Common\\V1\xe2\x02\x1bChalk\\Common\\V1\\GPBMetadata\xea\x02\x11Chalk::Common::V1b\x06proto3"

var (
	file_chalk_common_v1_online_query_proto_rawDescOnce sync.Once
	file_chalk_common_v1_online_query_proto_rawDescData []byte
)

func file_chalk_common_v1_online_query_proto_rawDescGZIP() []byte {
	file_chalk_common_v1_online_query_proto_rawDescOnce.Do(func() {
		file_chalk_common_v1_online_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_common_v1_online_query_proto_rawDesc), len(file_chalk_common_v1_online_query_proto_rawDesc)))
	})
	return file_chalk_common_v1_online_query_proto_rawDescData
}

var file_chalk_common_v1_online_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chalk_common_v1_online_query_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_chalk_common_v1_online_query_proto_goTypes = []any{
	(FeatherBodyType)(0),               // 0: chalk.common.v1.FeatherBodyType
	(*OnlineQueryRequest)(nil),         // 1: chalk.common.v1.OnlineQueryRequest
	(*OnlineQueryBulkRequest)(nil),     // 2: chalk.common.v1.OnlineQueryBulkRequest
	(*GenericSingleQuery)(nil),         // 3: chalk.common.v1.GenericSingleQuery
	(*OnlineQueryMultiRequest)(nil),    // 4: chalk.common.v1.OnlineQueryMultiRequest
	(*FeatureExpression)(nil),          // 5: chalk.common.v1.FeatureExpression
	(*OutputExpr)(nil),                 // 6: chalk.common.v1.OutputExpr
	(*OnlineQueryContext)(nil),         // 7: chalk.common.v1.OnlineQueryContext
	(*OnlineQueryResponseOptions)(nil), // 8: chalk.common.v1.OnlineQueryResponseOptions
	(*ExplainOptions)(nil),             // 9: chalk.common.v1.ExplainOptions
	(*FeatureEncodingOptions)(nil),     // 10: chalk.common.v1.FeatureEncodingOptions
	(*OnlineQueryResponse)(nil),        // 11: chalk.common.v1.OnlineQueryResponse
	(*OnlineQueryBulkResponse)(nil),    // 12: chalk.common.v1.OnlineQueryBulkResponse
	(*GenericSingleResponse)(nil),      // 13: chalk.common.v1.GenericSingleResponse
	(*OnlineQueryMultiResponse)(nil),   // 14: chalk.common.v1.OnlineQueryMultiResponse
	(*OnlineQueryResult)(nil),          // 15: chalk.common.v1.OnlineQueryResult
	(*FeatureResult)(nil),              // 16: chalk.common.v1.FeatureResult
	(*FeatureMeta)(nil),                // 17: chalk.common.v1.FeatureMeta
	(*OnlineQueryMetadata)(nil),        // 18: chalk.common.v1.OnlineQueryMetadata
	(*QueryExplainInfo)(nil),           // 19: chalk.common.v1.QueryExplainInfo
	(*UploadFeaturesBulkRequest)(nil),  // 20: chalk.common.v1.UploadFeaturesBulkRequest
	(*UploadFeaturesBulkResponse)(nil), // 21: chalk.common.v1.UploadFeaturesBulkResponse
	nil,                                // 22: chalk.common.v1.OnlineQueryRequest.InputsEntry
	nil,                                // 23: chalk.common.v1.OnlineQueryRequest.StalenessEntry
	nil,                                // 24: chalk.common.v1.OnlineQueryBulkRequest.StalenessEntry
	nil,                                // 25: chalk.common.v1.OnlineQueryContext.OptionsEntry
	nil,                                // 26: chalk.common.v1.OnlineQueryContext.QueryContextEntry
	nil,                                // 27: chalk.common.v1.OnlineQueryResponseOptions.MetadataEntry
	nil,                                // 28: chalk.common.v1.OnlineQueryBulkResponse.GroupsDataEntry
	nil,                                // 29: chalk.common.v1.OnlineQueryMetadata.MetadataEntry
	nil,                                // 30: chalk.common.v1.OnlineQueryMetadata.AdditionalMetadataEntry
	(*timestamppb.Timestamp)(nil),      // 31: google.protobuf.Timestamp
	(*v1.LogicalExprNode)(nil),         // 32: chalk.expression.v1.LogicalExprNode
	(*v11.OverlayGraph)(nil),           // 33: chalk.graph.v1.OverlayGraph
	(*ChalkError)(nil),                 // 34: chalk.common.v1.ChalkError
	(*structpb.Value)(nil),             // 35: google.protobuf.Value
	(*durationpb.Duration)(nil),        // 36: google.protobuf.Duration
}
var file_chalk_common_v1_online_query_proto_depIdxs = []int32{
	22, // 0: chalk.common.v1.OnlineQueryRequest.inputs:type_name -> chalk.common.v1.OnlineQueryRequest.InputsEntry
	6,  // 1: chalk.common.v1.OnlineQueryRequest.outputs:type_name -> chalk.common.v1.OutputExpr
	31, // 2: chalk.common.v1.OnlineQueryRequest.now:type_name -> google.protobuf.Timestamp
	23, // 3: chalk.common.v1.OnlineQueryRequest.staleness:type_name -> chalk.common.v1.OnlineQueryRequest.StalenessEntry
	7,  // 4: chalk.common.v1.OnlineQueryRequest.context:type_name -> chalk.common.v1.OnlineQueryContext
	8,  // 5: chalk.common.v1.OnlineQueryRequest.response_options:type_name -> chalk.common.v1.OnlineQueryResponseOptions
	6,  // 6: chalk.common.v1.OnlineQueryBulkRequest.outputs:type_name -> chalk.common.v1.OutputExpr
	31, // 7: chalk.common.v1.OnlineQueryBulkRequest.now:type_name -> google.protobuf.Timestamp
	24, // 8: chalk.common.v1.OnlineQueryBulkRequest.staleness:type_name -> chalk.common.v1.OnlineQueryBulkRequest.StalenessEntry
	7,  // 9: chalk.common.v1.OnlineQueryBulkRequest.context:type_name -> chalk.common.v1.OnlineQueryContext
	8,  // 10: chalk.common.v1.OnlineQueryBulkRequest.response_options:type_name -> chalk.common.v1.OnlineQueryResponseOptions
	0,  // 11: chalk.common.v1.OnlineQueryBulkRequest.body_type:type_name -> chalk.common.v1.FeatherBodyType
	1,  // 12: chalk.common.v1.GenericSingleQuery.single_request:type_name -> chalk.common.v1.OnlineQueryRequest
	2,  // 13: chalk.common.v1.GenericSingleQuery.bulk_request:type_name -> chalk.common.v1.OnlineQueryBulkRequest
	3,  // 14: chalk.common.v1.OnlineQueryMultiRequest.queries:type_name -> chalk.common.v1.GenericSingleQuery
	32, // 15: chalk.common.v1.FeatureExpression.expr:type_name -> chalk.expression.v1.LogicalExprNode
	5,  // 16: chalk.common.v1.OutputExpr.feature_expression:type_name -> chalk.common.v1.FeatureExpression
	25, // 17: chalk.common.v1.OnlineQueryContext.options:type_name -> chalk.common.v1.OnlineQueryContext.OptionsEntry
	6,  // 18: chalk.common.v1.OnlineQueryContext.value_metrics_tag_by_features:type_name -> chalk.common.v1.OutputExpr
	26, // 19: chalk.common.v1.OnlineQueryContext.query_context:type_name -> chalk.common.v1.OnlineQueryContext.QueryContextEntry
	33, // 20: chalk.common.v1.OnlineQueryContext.overlay_graph:type_name -> chalk.graph.v1.OverlayGraph
	9,  // 21: chalk.common.v1.OnlineQueryResponseOptions.explain:type_name -> chalk.common.v1.ExplainOptions
	10, // 22: chalk.common.v1.OnlineQueryResponseOptions.encoding_options:type_name -> chalk.common.v1.FeatureEncodingOptions
	27, // 23: chalk.common.v1.OnlineQueryResponseOptions.metadata:type_name -> chalk.common.v1.OnlineQueryResponseOptions.MetadataEntry
	15, // 24: chalk.common.v1.OnlineQueryResponse.data:type_name -> chalk.common.v1.OnlineQueryResult
	34, // 25: chalk.common.v1.OnlineQueryResponse.errors:type_name -> chalk.common.v1.ChalkError
	18, // 26: chalk.common.v1.OnlineQueryResponse.response_meta:type_name -> chalk.common.v1.OnlineQueryMetadata
	28, // 27: chalk.common.v1.OnlineQueryBulkResponse.groups_data:type_name -> chalk.common.v1.OnlineQueryBulkResponse.GroupsDataEntry
	34, // 28: chalk.common.v1.OnlineQueryBulkResponse.errors:type_name -> chalk.common.v1.ChalkError
	18, // 29: chalk.common.v1.OnlineQueryBulkResponse.response_meta:type_name -> chalk.common.v1.OnlineQueryMetadata
	11, // 30: chalk.common.v1.GenericSingleResponse.single_response:type_name -> chalk.common.v1.OnlineQueryResponse
	12, // 31: chalk.common.v1.GenericSingleResponse.bulk_response:type_name -> chalk.common.v1.OnlineQueryBulkResponse
	13, // 32: chalk.common.v1.OnlineQueryMultiResponse.responses:type_name -> chalk.common.v1.GenericSingleResponse
	34, // 33: chalk.common.v1.OnlineQueryMultiResponse.errors:type_name -> chalk.common.v1.ChalkError
	16, // 34: chalk.common.v1.OnlineQueryResult.results:type_name -> chalk.common.v1.FeatureResult
	35, // 35: chalk.common.v1.FeatureResult.pkey:type_name -> google.protobuf.Value
	35, // 36: chalk.common.v1.FeatureResult.value:type_name -> google.protobuf.Value
	34, // 37: chalk.common.v1.FeatureResult.error:type_name -> chalk.common.v1.ChalkError
	31, // 38: chalk.common.v1.FeatureResult.ts:type_name -> google.protobuf.Timestamp
	17, // 39: chalk.common.v1.FeatureResult.meta:type_name -> chalk.common.v1.FeatureMeta
	36, // 40: chalk.common.v1.OnlineQueryMetadata.execution_duration:type_name -> google.protobuf.Duration
	31, // 41: chalk.common.v1.OnlineQueryMetadata.query_timestamp:type_name -> google.protobuf.Timestamp
	19, // 42: chalk.common.v1.OnlineQueryMetadata.explain_output:type_name -> chalk.common.v1.QueryExplainInfo
	29, // 43: chalk.common.v1.OnlineQueryMetadata.metadata:type_name -> chalk.common.v1.OnlineQueryMetadata.MetadataEntry
	30, // 44: chalk.common.v1.OnlineQueryMetadata.additional_metadata:type_name -> chalk.common.v1.OnlineQueryMetadata.AdditionalMetadataEntry
	0,  // 45: chalk.common.v1.UploadFeaturesBulkRequest.body_type:type_name -> chalk.common.v1.FeatherBodyType
	34, // 46: chalk.common.v1.UploadFeaturesBulkResponse.errors:type_name -> chalk.common.v1.ChalkError
	35, // 47: chalk.common.v1.OnlineQueryRequest.InputsEntry.value:type_name -> google.protobuf.Value
	35, // 48: chalk.common.v1.OnlineQueryContext.OptionsEntry.value:type_name -> google.protobuf.Value
	35, // 49: chalk.common.v1.OnlineQueryContext.QueryContextEntry.value:type_name -> google.protobuf.Value
	35, // 50: chalk.common.v1.OnlineQueryMetadata.AdditionalMetadataEntry.value:type_name -> google.protobuf.Value
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_chalk_common_v1_online_query_proto_init() }
func file_chalk_common_v1_online_query_proto_init() {
	if File_chalk_common_v1_online_query_proto != nil {
		return
	}
	file_chalk_common_v1_chalk_error_proto_init()
	file_chalk_common_v1_online_query_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_common_v1_online_query_proto_msgTypes[2].OneofWrappers = []any{
		(*GenericSingleQuery_SingleRequest)(nil),
		(*GenericSingleQuery_BulkRequest)(nil),
	}
	file_chalk_common_v1_online_query_proto_msgTypes[5].OneofWrappers = []any{
		(*OutputExpr_FeatureFqn)(nil),
		(*OutputExpr_FeatureExpression)(nil),
	}
	file_chalk_common_v1_online_query_proto_msgTypes[6].OneofWrappers = []any{}
	file_chalk_common_v1_online_query_proto_msgTypes[12].OneofWrappers = []any{
		(*GenericSingleResponse_SingleResponse)(nil),
		(*GenericSingleResponse_BulkResponse)(nil),
	}
	file_chalk_common_v1_online_query_proto_msgTypes[15].OneofWrappers = []any{}
	file_chalk_common_v1_online_query_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_common_v1_online_query_proto_rawDesc), len(file_chalk_common_v1_online_query_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_common_v1_online_query_proto_goTypes,
		DependencyIndexes: file_chalk_common_v1_online_query_proto_depIdxs,
		EnumInfos:         file_chalk_common_v1_online_query_proto_enumTypes,
		MessageInfos:      file_chalk_common_v1_online_query_proto_msgTypes,
	}.Build()
	File_chalk_common_v1_online_query_proto = out.File
	file_chalk_common_v1_online_query_proto_goTypes = nil
	file_chalk_common_v1_online_query_proto_depIdxs = nil
}
