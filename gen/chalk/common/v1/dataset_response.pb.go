// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: chalk/common/v1/dataset_response.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DatasetSampleFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LowerBound    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=lower_bound,json=lowerBound,proto3,oneof" json:"lower_bound,omitempty"`
	UpperBound    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=upper_bound,json=upperBound,proto3,oneof" json:"upper_bound,omitempty"`
	MaxSamples    *int32                 `protobuf:"varint,3,opt,name=max_samples,json=maxSamples,proto3,oneof" json:"max_samples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatasetSampleFilter) Reset() {
	*x = DatasetSampleFilter{}
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetSampleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetSampleFilter) ProtoMessage() {}

func (x *DatasetSampleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetSampleFilter.ProtoReflect.Descriptor instead.
func (*DatasetSampleFilter) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_dataset_response_proto_rawDescGZIP(), []int{0}
}

func (x *DatasetSampleFilter) GetLowerBound() *timestamppb.Timestamp {
	if x != nil {
		return x.LowerBound
	}
	return nil
}

func (x *DatasetSampleFilter) GetUpperBound() *timestamppb.Timestamp {
	if x != nil {
		return x.UpperBound
	}
	return nil
}

func (x *DatasetSampleFilter) GetMaxSamples() int32 {
	if x != nil && x.MaxSamples != nil {
		return *x.MaxSamples
	}
	return 0
}

type DatasetFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SampleFilters   *DatasetSampleFilter   `protobuf:"bytes,1,opt,name=sample_filters,json=sampleFilters,proto3" json:"sample_filters,omitempty"`
	MaxCacheAgeSecs *float32               `protobuf:"fixed32,2,opt,name=max_cache_age_secs,json=maxCacheAgeSecs,proto3,oneof" json:"max_cache_age_secs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DatasetFilter) Reset() {
	*x = DatasetFilter{}
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetFilter) ProtoMessage() {}

func (x *DatasetFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetFilter.ProtoReflect.Descriptor instead.
func (*DatasetFilter) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_dataset_response_proto_rawDescGZIP(), []int{1}
}

func (x *DatasetFilter) GetSampleFilters() *DatasetSampleFilter {
	if x != nil {
		return x.SampleFilters
	}
	return nil
}

func (x *DatasetFilter) GetMaxCacheAgeSecs() float32 {
	if x != nil && x.MaxCacheAgeSecs != nil {
		return *x.MaxCacheAgeSecs
	}
	return 0
}

type DatasetRevisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatasetName   *string                `protobuf:"bytes,1,opt,name=dataset_name,json=datasetName,proto3,oneof" json:"dataset_name,omitempty"`
	DatasetId     *string                `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3,oneof" json:"dataset_id,omitempty"`
	EnvironmentId *string                `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3,oneof" json:"environment_id,omitempty"`
	RevisionId    *string                `protobuf:"bytes,4,opt,name=revision_id,json=revisionId,proto3,oneof" json:"revision_id,omitempty"`
	CreatorId     string                 `protobuf:"bytes,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Outputs       []string               `protobuf:"bytes,6,rep,name=outputs,proto3" json:"outputs,omitempty"`
	GivensUri     *string                `protobuf:"bytes,7,opt,name=givens_uri,json=givensUri,proto3,oneof" json:"givens_uri,omitempty"`
	Status        QueryStatus            `protobuf:"varint,8,opt,name=status,proto3,enum=chalk.common.v1.QueryStatus" json:"status,omitempty"`
	Filters       *DatasetFilter         `protobuf:"bytes,9,opt,name=filters,proto3" json:"filters,omitempty"`
	NumPartitions int32                  `protobuf:"varint,10,opt,name=num_partitions,json=numPartitions,proto3" json:"num_partitions,omitempty"`
	NumBytes      *int32                 `protobuf:"varint,11,opt,name=num_bytes,json=numBytes,proto3,oneof" json:"num_bytes,omitempty"`
	OutputUris    string                 `protobuf:"bytes,12,opt,name=output_uris,json=outputUris,proto3" json:"output_uris,omitempty"`
	OutputVersion int32                  `protobuf:"varint,13,opt,name=output_version,json=outputVersion,proto3" json:"output_version,omitempty"`
	Branch        *string                `protobuf:"bytes,14,opt,name=branch,proto3,oneof" json:"branch,omitempty"`
	DashboardUrl  *string                `protobuf:"bytes,15,opt,name=dashboard_url,json=dashboardUrl,proto3,oneof" json:"dashboard_url,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	TerminatedAt  *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=terminated_at,json=terminatedAt,proto3,oneof" json:"terminated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatasetRevisionResponse) Reset() {
	*x = DatasetRevisionResponse{}
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetRevisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetRevisionResponse) ProtoMessage() {}

func (x *DatasetRevisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetRevisionResponse.ProtoReflect.Descriptor instead.
func (*DatasetRevisionResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_dataset_response_proto_rawDescGZIP(), []int{2}
}

func (x *DatasetRevisionResponse) GetDatasetName() string {
	if x != nil && x.DatasetName != nil {
		return *x.DatasetName
	}
	return ""
}

func (x *DatasetRevisionResponse) GetDatasetId() string {
	if x != nil && x.DatasetId != nil {
		return *x.DatasetId
	}
	return ""
}

func (x *DatasetRevisionResponse) GetEnvironmentId() string {
	if x != nil && x.EnvironmentId != nil {
		return *x.EnvironmentId
	}
	return ""
}

func (x *DatasetRevisionResponse) GetRevisionId() string {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return ""
}

func (x *DatasetRevisionResponse) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *DatasetRevisionResponse) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *DatasetRevisionResponse) GetGivensUri() string {
	if x != nil && x.GivensUri != nil {
		return *x.GivensUri
	}
	return ""
}

func (x *DatasetRevisionResponse) GetStatus() QueryStatus {
	if x != nil {
		return x.Status
	}
	return QueryStatus_QUERY_STATUS_UNSPECIFIED
}

func (x *DatasetRevisionResponse) GetFilters() *DatasetFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *DatasetRevisionResponse) GetNumPartitions() int32 {
	if x != nil {
		return x.NumPartitions
	}
	return 0
}

func (x *DatasetRevisionResponse) GetNumBytes() int32 {
	if x != nil && x.NumBytes != nil {
		return *x.NumBytes
	}
	return 0
}

func (x *DatasetRevisionResponse) GetOutputUris() string {
	if x != nil {
		return x.OutputUris
	}
	return ""
}

func (x *DatasetRevisionResponse) GetOutputVersion() int32 {
	if x != nil {
		return x.OutputVersion
	}
	return 0
}

func (x *DatasetRevisionResponse) GetBranch() string {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return ""
}

func (x *DatasetRevisionResponse) GetDashboardUrl() string {
	if x != nil && x.DashboardUrl != nil {
		return *x.DashboardUrl
	}
	return ""
}

func (x *DatasetRevisionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DatasetRevisionResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *DatasetRevisionResponse) GetTerminatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TerminatedAt
	}
	return nil
}

type DatasetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the export job is finished (it runs asynchronously)
	IsFinished bool `protobuf:"varint,1,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	// Version number representing the format of the data. The client uses this version number
	// to properly decode and load the query results into DataFrames.
	Version       int32                      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	EnvironmentId string                     `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	DatasetId     string                     `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	DatasetName   string                     `protobuf:"bytes,5,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	Errors        []*ChalkError              `protobuf:"bytes,101,rep,name=errors,proto3" json:"errors,omitempty"`
	Revisions     []*DatasetRevisionResponse `protobuf:"bytes,102,rep,name=revisions,proto3" json:"revisions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatasetResponse) Reset() {
	*x = DatasetResponse{}
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetResponse) ProtoMessage() {}

func (x *DatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_dataset_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetResponse.ProtoReflect.Descriptor instead.
func (*DatasetResponse) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_dataset_response_proto_rawDescGZIP(), []int{3}
}

func (x *DatasetResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *DatasetResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DatasetResponse) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *DatasetResponse) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *DatasetResponse) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *DatasetResponse) GetErrors() []*ChalkError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *DatasetResponse) GetRevisions() []*DatasetRevisionResponse {
	if x != nil {
		return x.Revisions
	}
	return nil
}

var File_chalk_common_v1_dataset_response_proto protoreflect.FileDescriptor

const file_chalk_common_v1_dataset_response_proto_rawDesc = "" +
	"\n" +
	"&chalk/common/v1/dataset_response.proto\x12\x0fchalk.common.v1\x1a!chalk/common/v1/chalk_error.proto\x1a\"chalk/common/v1/query_status.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xef\x01\n" +
	"\x13DatasetSampleFilter\x12@\n" +
	"\vlower_bound\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"lowerBound\x88\x01\x01\x12@\n" +
	"\vupper_bound\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"upperBound\x88\x01\x01\x12$\n" +
	"\vmax_samples\x18\x03 \x01(\x05H\x02R\n" +
	"maxSamples\x88\x01\x01B\x0e\n" +
	"\f_lower_boundB\x0e\n" +
	"\f_upper_boundB\x0e\n" +
	"\f_max_samples\"\xa5\x01\n" +
	"\rDatasetFilter\x12K\n" +
	"\x0esample_filters\x18\x01 \x01(\v2$.chalk.common.v1.DatasetSampleFilterR\rsampleFilters\x120\n" +
	"\x12max_cache_age_secs\x18\x02 \x01(\x02H\x00R\x0fmaxCacheAgeSecs\x88\x01\x01B\x15\n" +
	"\x13_max_cache_age_secs\"\xcf\a\n" +
	"\x17DatasetRevisionResponse\x12&\n" +
	"\fdataset_name\x18\x01 \x01(\tH\x00R\vdatasetName\x88\x01\x01\x12\"\n" +
	"\n" +
	"dataset_id\x18\x02 \x01(\tH\x01R\tdatasetId\x88\x01\x01\x12*\n" +
	"\x0eenvironment_id\x18\x03 \x01(\tH\x02R\renvironmentId\x88\x01\x01\x12$\n" +
	"\vrevision_id\x18\x04 \x01(\tH\x03R\n" +
	"revisionId\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x05 \x01(\tR\tcreatorId\x12\x18\n" +
	"\aoutputs\x18\x06 \x03(\tR\aoutputs\x12\"\n" +
	"\n" +
	"givens_uri\x18\a \x01(\tH\x04R\tgivensUri\x88\x01\x01\x124\n" +
	"\x06status\x18\b \x01(\x0e2\x1c.chalk.common.v1.QueryStatusR\x06status\x128\n" +
	"\afilters\x18\t \x01(\v2\x1e.chalk.common.v1.DatasetFilterR\afilters\x12%\n" +
	"\x0enum_partitions\x18\n" +
	" \x01(\x05R\rnumPartitions\x12 \n" +
	"\tnum_bytes\x18\v \x01(\x05H\x05R\bnumBytes\x88\x01\x01\x12\x1f\n" +
	"\voutput_uris\x18\f \x01(\tR\n" +
	"outputUris\x12%\n" +
	"\x0eoutput_version\x18\r \x01(\x05R\routputVersion\x12\x1b\n" +
	"\x06branch\x18\x0e \x01(\tH\x06R\x06branch\x88\x01\x01\x12(\n" +
	"\rdashboard_url\x18\x0f \x01(\tH\aR\fdashboardUrl\x88\x01\x01\x12>\n" +
	"\n" +
	"created_at\x18e \x01(\v2\x1a.google.protobuf.TimestampH\bR\tcreatedAt\x88\x01\x01\x12>\n" +
	"\n" +
	"started_at\x18f \x01(\v2\x1a.google.protobuf.TimestampH\tR\tstartedAt\x88\x01\x01\x12D\n" +
	"\rterminated_at\x18g \x01(\v2\x1a.google.protobuf.TimestampH\n" +
	"R\fterminatedAt\x88\x01\x01B\x0f\n" +
	"\r_dataset_nameB\r\n" +
	"\v_dataset_idB\x11\n" +
	"\x0f_environment_idB\x0e\n" +
	"\f_revision_idB\r\n" +
	"\v_givens_uriB\f\n" +
	"\n" +
	"_num_bytesB\t\n" +
	"\a_branchB\x10\n" +
	"\x0e_dashboard_urlB\r\n" +
	"\v_created_atB\r\n" +
	"\v_started_atB\x10\n" +
	"\x0e_terminated_at\"\xb2\x02\n" +
	"\x0fDatasetResponse\x12\x1f\n" +
	"\vis_finished\x18\x01 \x01(\bR\n" +
	"isFinished\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12%\n" +
	"\x0eenvironment_id\x18\x03 \x01(\tR\renvironmentId\x12\x1d\n" +
	"\n" +
	"dataset_id\x18\x04 \x01(\tR\tdatasetId\x12!\n" +
	"\fdataset_name\x18\x05 \x01(\tR\vdatasetName\x123\n" +
	"\x06errors\x18e \x03(\v2\x1b.chalk.common.v1.ChalkErrorR\x06errors\x12F\n" +
	"\trevisions\x18f \x03(\v2(.chalk.common.v1.DatasetRevisionResponseR\trevisionsB\xc4\x01\n" +
	"\x13com.chalk.common.v1B\x14DatasetResponseProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/common/v1;commonv1\xa2\x02\x03CCX\xaa\x02\x0fChalk.Common.V1\xca\x02\x0fChalk\\Common\\V1\xe2\x02\x1bChalk\\Common\\V1\\GPBMetadata\xea\x02\x11Chalk::Common::V1b\x06proto3"

var (
	file_chalk_common_v1_dataset_response_proto_rawDescOnce sync.Once
	file_chalk_common_v1_dataset_response_proto_rawDescData []byte
)

func file_chalk_common_v1_dataset_response_proto_rawDescGZIP() []byte {
	file_chalk_common_v1_dataset_response_proto_rawDescOnce.Do(func() {
		file_chalk_common_v1_dataset_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_common_v1_dataset_response_proto_rawDesc), len(file_chalk_common_v1_dataset_response_proto_rawDesc)))
	})
	return file_chalk_common_v1_dataset_response_proto_rawDescData
}

var file_chalk_common_v1_dataset_response_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chalk_common_v1_dataset_response_proto_goTypes = []any{
	(*DatasetSampleFilter)(nil),     // 0: chalk.common.v1.DatasetSampleFilter
	(*DatasetFilter)(nil),           // 1: chalk.common.v1.DatasetFilter
	(*DatasetRevisionResponse)(nil), // 2: chalk.common.v1.DatasetRevisionResponse
	(*DatasetResponse)(nil),         // 3: chalk.common.v1.DatasetResponse
	(*timestamppb.Timestamp)(nil),   // 4: google.protobuf.Timestamp
	(QueryStatus)(0),                // 5: chalk.common.v1.QueryStatus
	(*ChalkError)(nil),              // 6: chalk.common.v1.ChalkError
}
var file_chalk_common_v1_dataset_response_proto_depIdxs = []int32{
	4,  // 0: chalk.common.v1.DatasetSampleFilter.lower_bound:type_name -> google.protobuf.Timestamp
	4,  // 1: chalk.common.v1.DatasetSampleFilter.upper_bound:type_name -> google.protobuf.Timestamp
	0,  // 2: chalk.common.v1.DatasetFilter.sample_filters:type_name -> chalk.common.v1.DatasetSampleFilter
	5,  // 3: chalk.common.v1.DatasetRevisionResponse.status:type_name -> chalk.common.v1.QueryStatus
	1,  // 4: chalk.common.v1.DatasetRevisionResponse.filters:type_name -> chalk.common.v1.DatasetFilter
	4,  // 5: chalk.common.v1.DatasetRevisionResponse.created_at:type_name -> google.protobuf.Timestamp
	4,  // 6: chalk.common.v1.DatasetRevisionResponse.started_at:type_name -> google.protobuf.Timestamp
	4,  // 7: chalk.common.v1.DatasetRevisionResponse.terminated_at:type_name -> google.protobuf.Timestamp
	6,  // 8: chalk.common.v1.DatasetResponse.errors:type_name -> chalk.common.v1.ChalkError
	2,  // 9: chalk.common.v1.DatasetResponse.revisions:type_name -> chalk.common.v1.DatasetRevisionResponse
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chalk_common_v1_dataset_response_proto_init() }
func file_chalk_common_v1_dataset_response_proto_init() {
	if File_chalk_common_v1_dataset_response_proto != nil {
		return
	}
	file_chalk_common_v1_chalk_error_proto_init()
	file_chalk_common_v1_query_status_proto_init()
	file_chalk_common_v1_dataset_response_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_common_v1_dataset_response_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_common_v1_dataset_response_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_common_v1_dataset_response_proto_rawDesc), len(file_chalk_common_v1_dataset_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_common_v1_dataset_response_proto_goTypes,
		DependencyIndexes: file_chalk_common_v1_dataset_response_proto_depIdxs,
		MessageInfos:      file_chalk_common_v1_dataset_response_proto_msgTypes,
	}.Build()
	File_chalk_common_v1_dataset_response_proto = out.File
	file_chalk_common_v1_dataset_response_proto_goTypes = nil
	file_chalk_common_v1_dataset_response_proto_depIdxs = nil
}
