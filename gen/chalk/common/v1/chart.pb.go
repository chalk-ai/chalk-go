// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/common/v1/chart.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Marked as deprecated in chalk/common/v1/chart.proto.
type Series struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []float64              `protobuf:"fixed64,1,rep,packed,name=points,proto3" json:"points,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Units         string                 `protobuf:"bytes,3,opt,name=units,proto3" json:"units,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_chalk_common_v1_chart_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_chart_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_chart_proto_rawDescGZIP(), []int{0}
}

func (x *Series) GetPoints() []float64 {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *Series) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Series) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

// Deprecated: Marked as deprecated in chalk/common/v1/chart.proto.
type Chart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Series        []*Series              `protobuf:"bytes,2,rep,name=series,proto3" json:"series,omitempty"`
	XTimestampMs  []int64                `protobuf:"varint,4,rep,packed,name=x_timestamp_ms,json=xTimestampMs,proto3" json:"x_timestamp_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chart) Reset() {
	*x = Chart{}
	mi := &file_chalk_common_v1_chart_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart) ProtoMessage() {}

func (x *Chart) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_common_v1_chart_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chart.ProtoReflect.Descriptor instead.
func (*Chart) Descriptor() ([]byte, []int) {
	return file_chalk_common_v1_chart_proto_rawDescGZIP(), []int{1}
}

func (x *Chart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chart) GetSeries() []*Series {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Chart) GetXTimestampMs() []int64 {
	if x != nil {
		return x.XTimestampMs
	}
	return nil
}

var File_chalk_common_v1_chart_proto protoreflect.FileDescriptor

const file_chalk_common_v1_chart_proto_rawDesc = "" +
	"\n" +
	"\x1bchalk/common/v1/chart.proto\x12\x0fchalk.common.v1\"P\n" +
	"\x06Series\x12\x16\n" +
	"\x06points\x18\x01 \x03(\x01R\x06points\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x14\n" +
	"\x05units\x18\x03 \x01(\tR\x05units:\x02\x18\x01\"x\n" +
	"\x05Chart\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12/\n" +
	"\x06series\x18\x02 \x03(\v2\x17.chalk.common.v1.SeriesR\x06series\x12$\n" +
	"\x0ex_timestamp_ms\x18\x04 \x03(\x03R\fxTimestampMs:\x02\x18\x01B\xba\x01\n" +
	"\x13com.chalk.common.v1B\n" +
	"ChartProtoP\x01Z9github.com/chalk-ai/chalk-go/gen/chalk/common/v1;commonv1\xa2\x02\x03CCX\xaa\x02\x0fChalk.Common.V1\xca\x02\x0fChalk\\Common\\V1\xe2\x02\x1bChalk\\Common\\V1\\GPBMetadata\xea\x02\x11Chalk::Common::V1b\x06proto3"

var (
	file_chalk_common_v1_chart_proto_rawDescOnce sync.Once
	file_chalk_common_v1_chart_proto_rawDescData []byte
)

func file_chalk_common_v1_chart_proto_rawDescGZIP() []byte {
	file_chalk_common_v1_chart_proto_rawDescOnce.Do(func() {
		file_chalk_common_v1_chart_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_common_v1_chart_proto_rawDesc), len(file_chalk_common_v1_chart_proto_rawDesc)))
	})
	return file_chalk_common_v1_chart_proto_rawDescData
}

var file_chalk_common_v1_chart_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_common_v1_chart_proto_goTypes = []any{
	(*Series)(nil), // 0: chalk.common.v1.Series
	(*Chart)(nil),  // 1: chalk.common.v1.Chart
}
var file_chalk_common_v1_chart_proto_depIdxs = []int32{
	0, // 0: chalk.common.v1.Chart.series:type_name -> chalk.common.v1.Series
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chalk_common_v1_chart_proto_init() }
func file_chalk_common_v1_chart_proto_init() {
	if File_chalk_common_v1_chart_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_common_v1_chart_proto_rawDesc), len(file_chalk_common_v1_chart_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_common_v1_chart_proto_goTypes,
		DependencyIndexes: file_chalk_common_v1_chart_proto_depIdxs,
		MessageInfos:      file_chalk_common_v1_chart_proto_msgTypes,
	}.Build()
	File_chalk_common_v1_chart_proto = out.File
	file_chalk_common_v1_chart_proto_goTypes = nil
	file_chalk_common_v1_chart_proto_depIdxs = nil
}
