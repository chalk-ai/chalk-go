// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/enginestorage/v1/adhoc_query_service.proto

package enginestoragev1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAdhocQueriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of queries to return
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Pagination token for fetching the next page
	Cursor string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Optional filter by query name
	QueryName *string `protobuf:"bytes,3,opt,name=query_name,json=queryName,proto3,oneof" json:"query_name,omitempty"`
	// Optional filter by environment ID (if not provided, uses context)
	EnvironmentId *string `protobuf:"bytes,4,opt,name=environment_id,json=environmentId,proto3,oneof" json:"environment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAdhocQueriesRequest) Reset() {
	*x = ListAdhocQueriesRequest{}
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAdhocQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdhocQueriesRequest) ProtoMessage() {}

func (x *ListAdhocQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdhocQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListAdhocQueriesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListAdhocQueriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAdhocQueriesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAdhocQueriesRequest) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *ListAdhocQueriesRequest) GetEnvironmentId() string {
	if x != nil && x.EnvironmentId != nil {
		return *x.EnvironmentId
	}
	return ""
}

type ListAdhocQueriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of adhoc queries
	Queries []*AdhocQueryItem `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	// Pagination token for the next page
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Total number of queries (optional, for UI pagination)
	TotalCount    *int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3,oneof" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAdhocQueriesResponse) Reset() {
	*x = ListAdhocQueriesResponse{}
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAdhocQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdhocQueriesResponse) ProtoMessage() {}

func (x *ListAdhocQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdhocQueriesResponse.ProtoReflect.Descriptor instead.
func (*ListAdhocQueriesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListAdhocQueriesResponse) GetQueries() []*AdhocQueryItem {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *ListAdhocQueriesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListAdhocQueriesResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

type AdhocQueryItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the query
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The full query planning inputs
	PlanningInputs *AllPlanningInputsProto `protobuf:"bytes,2,opt,name=planning_inputs,json=planningInputs,proto3" json:"planning_inputs,omitempty"`
	// Timestamp when the query was created
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional: Timestamp when the query was last executed
	LastExecutedAt *string `protobuf:"bytes,4,opt,name=last_executed_at,json=lastExecutedAt,proto3,oneof" json:"last_executed_at,omitempty"`
	// Optional: Query status (e.g., "pending", "running", "completed", "failed")
	Status *string `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	// Optional: Environment ID where this query belongs
	EnvironmentId *string `protobuf:"bytes,6,opt,name=environment_id,json=environmentId,proto3,oneof" json:"environment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdhocQueryItem) Reset() {
	*x = AdhocQueryItem{}
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdhocQueryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdhocQueryItem) ProtoMessage() {}

func (x *AdhocQueryItem) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdhocQueryItem.ProtoReflect.Descriptor instead.
func (*AdhocQueryItem) Descriptor() ([]byte, []int) {
	return file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescGZIP(), []int{2}
}

func (x *AdhocQueryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdhocQueryItem) GetPlanningInputs() *AllPlanningInputsProto {
	if x != nil {
		return x.PlanningInputs
	}
	return nil
}

func (x *AdhocQueryItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AdhocQueryItem) GetLastExecutedAt() string {
	if x != nil && x.LastExecutedAt != nil {
		return *x.LastExecutedAt
	}
	return ""
}

func (x *AdhocQueryItem) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *AdhocQueryItem) GetEnvironmentId() string {
	if x != nil && x.EnvironmentId != nil {
		return *x.EnvironmentId
	}
	return ""
}

var File_chalk_enginestorage_v1_adhoc_query_service_proto protoreflect.FileDescriptor

const file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDesc = "" +
	"\n" +
	"0chalk/enginestorage/v1/adhoc_query_service.proto\x12\x16chalk.enginestorage.v1\x1a\x1fchalk/auth/v1/permissions.proto\x1a(chalk/enginestorage/v1/adhoc_query.proto\"\xb9\x01\n" +
	"\x17ListAdhocQueriesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x12\"\n" +
	"\n" +
	"query_name\x18\x03 \x01(\tH\x00R\tqueryName\x88\x01\x01\x12*\n" +
	"\x0eenvironment_id\x18\x04 \x01(\tH\x01R\renvironmentId\x88\x01\x01B\r\n" +
	"\v_query_nameB\x11\n" +
	"\x0f_environment_id\"\xb3\x01\n" +
	"\x18ListAdhocQueriesResponse\x12@\n" +
	"\aqueries\x18\x01 \x03(\v2&.chalk.enginestorage.v1.AdhocQueryItemR\aqueries\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12$\n" +
	"\vtotal_count\x18\x03 \x01(\x05H\x00R\n" +
	"totalCount\x88\x01\x01B\x0e\n" +
	"\f_total_count\"\xc3\x02\n" +
	"\x0eAdhocQueryItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12W\n" +
	"\x0fplanning_inputs\x18\x02 \x01(\v2..chalk.enginestorage.v1.AllPlanningInputsProtoR\x0eplanningInputs\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\tR\tcreatedAt\x12-\n" +
	"\x10last_executed_at\x18\x04 \x01(\tH\x00R\x0elastExecutedAt\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x05 \x01(\tH\x01R\x06status\x88\x01\x01\x12*\n" +
	"\x0eenvironment_id\x18\x06 \x01(\tH\x02R\renvironmentId\x88\x01\x01B\x13\n" +
	"\x11_last_executed_atB\t\n" +
	"\a_statusB\x11\n" +
	"\x0f_environment_id2\x8f\x01\n" +
	"\x11AdhocQueryService\x12z\n" +
	"\x10ListAdhocQueries\x12/.chalk.enginestorage.v1.ListAdhocQueriesRequest\x1a0.chalk.enginestorage.v1.ListAdhocQueriesResponse\"\x03\x80}\x03B\xf7\x01\n" +
	"\x1acom.chalk.enginestorage.v1B\x16AdhocQueryServiceProtoP\x01ZGgithub.com/chalk-ai/chalk-go/gen/chalk/enginestorage/v1;enginestoragev1\xa2\x02\x03CEX\xaa\x02\x16Chalk.Enginestorage.V1\xca\x02\x16Chalk\\Enginestorage\\V1\xe2\x02\"Chalk\\Enginestorage\\V1\\GPBMetadata\xea\x02\x18Chalk::Enginestorage::V1b\x06proto3"

var (
	file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescOnce sync.Once
	file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescData []byte
)

func file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescGZIP() []byte {
	file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescOnce.Do(func() {
		file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDesc), len(file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDesc)))
	})
	return file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDescData
}

var file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chalk_enginestorage_v1_adhoc_query_service_proto_goTypes = []any{
	(*ListAdhocQueriesRequest)(nil),  // 0: chalk.enginestorage.v1.ListAdhocQueriesRequest
	(*ListAdhocQueriesResponse)(nil), // 1: chalk.enginestorage.v1.ListAdhocQueriesResponse
	(*AdhocQueryItem)(nil),           // 2: chalk.enginestorage.v1.AdhocQueryItem
	(*AllPlanningInputsProto)(nil),   // 3: chalk.enginestorage.v1.AllPlanningInputsProto
}
var file_chalk_enginestorage_v1_adhoc_query_service_proto_depIdxs = []int32{
	2, // 0: chalk.enginestorage.v1.ListAdhocQueriesResponse.queries:type_name -> chalk.enginestorage.v1.AdhocQueryItem
	3, // 1: chalk.enginestorage.v1.AdhocQueryItem.planning_inputs:type_name -> chalk.enginestorage.v1.AllPlanningInputsProto
	0, // 2: chalk.enginestorage.v1.AdhocQueryService.ListAdhocQueries:input_type -> chalk.enginestorage.v1.ListAdhocQueriesRequest
	1, // 3: chalk.enginestorage.v1.AdhocQueryService.ListAdhocQueries:output_type -> chalk.enginestorage.v1.ListAdhocQueriesResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chalk_enginestorage_v1_adhoc_query_service_proto_init() }
func file_chalk_enginestorage_v1_adhoc_query_service_proto_init() {
	if File_chalk_enginestorage_v1_adhoc_query_service_proto != nil {
		return
	}
	file_chalk_enginestorage_v1_adhoc_query_proto_init()
	file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[1].OneofWrappers = []any{}
	file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDesc), len(file_chalk_enginestorage_v1_adhoc_query_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_enginestorage_v1_adhoc_query_service_proto_goTypes,
		DependencyIndexes: file_chalk_enginestorage_v1_adhoc_query_service_proto_depIdxs,
		MessageInfos:      file_chalk_enginestorage_v1_adhoc_query_service_proto_msgTypes,
	}.Build()
	File_chalk_enginestorage_v1_adhoc_query_service_proto = out.File
	file_chalk_enginestorage_v1_adhoc_query_service_proto_goTypes = nil
	file_chalk_enginestorage_v1_adhoc_query_service_proto_depIdxs = nil
}
