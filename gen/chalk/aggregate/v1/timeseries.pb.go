// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/aggregate/v1/timeseries.proto

package aggregatev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AggregateTimeSeriesRule struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Aggregation    string                 `protobuf:"bytes,1,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	BucketDuration *durationpb.Duration   `protobuf:"bytes,2,opt,name=bucket_duration,json=bucketDuration,proto3" json:"bucket_duration,omitempty"`
	// The features which depend on this rule.
	DependentFeatures []string             `protobuf:"bytes,3,rep,name=dependent_features,json=dependentFeatures,proto3" json:"dependent_features,omitempty"`
	Retention         *durationpb.Duration `protobuf:"bytes,4,opt,name=retention,proto3" json:"retention,omitempty"`
	DatetimeFeature   string               `protobuf:"bytes,5,opt,name=datetime_feature,json=datetimeFeature,proto3" json:"datetime_feature,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AggregateTimeSeriesRule) Reset() {
	*x = AggregateTimeSeriesRule{}
	mi := &file_chalk_aggregate_v1_timeseries_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateTimeSeriesRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateTimeSeriesRule) ProtoMessage() {}

func (x *AggregateTimeSeriesRule) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_timeseries_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateTimeSeriesRule.ProtoReflect.Descriptor instead.
func (*AggregateTimeSeriesRule) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_timeseries_proto_rawDescGZIP(), []int{0}
}

func (x *AggregateTimeSeriesRule) GetAggregation() string {
	if x != nil {
		return x.Aggregation
	}
	return ""
}

func (x *AggregateTimeSeriesRule) GetBucketDuration() *durationpb.Duration {
	if x != nil {
		return x.BucketDuration
	}
	return nil
}

func (x *AggregateTimeSeriesRule) GetDependentFeatures() []string {
	if x != nil {
		return x.DependentFeatures
	}
	return nil
}

func (x *AggregateTimeSeriesRule) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *AggregateTimeSeriesRule) GetDatetimeFeature() string {
	if x != nil {
		return x.DatetimeFeature
	}
	return ""
}

type AggregateTimeSeries struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	Namespace          string                     `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AggregateOn        string                     `protobuf:"bytes,2,opt,name=aggregate_on,json=aggregateOn,proto3" json:"aggregate_on,omitempty"`
	GroupBy            []string                   `protobuf:"bytes,3,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Rules              []*AggregateTimeSeriesRule `protobuf:"bytes,5,rep,name=rules,proto3" json:"rules,omitempty"`
	FiltersDescription string                     `protobuf:"bytes,6,opt,name=filters_description,json=filtersDescription,proto3" json:"filters_description,omitempty"`
	BucketFeature      string                     `protobuf:"bytes,7,opt,name=bucket_feature,json=bucketFeature,proto3" json:"bucket_feature,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AggregateTimeSeries) Reset() {
	*x = AggregateTimeSeries{}
	mi := &file_chalk_aggregate_v1_timeseries_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateTimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateTimeSeries) ProtoMessage() {}

func (x *AggregateTimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_timeseries_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateTimeSeries.ProtoReflect.Descriptor instead.
func (*AggregateTimeSeries) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_timeseries_proto_rawDescGZIP(), []int{1}
}

func (x *AggregateTimeSeries) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AggregateTimeSeries) GetAggregateOn() string {
	if x != nil {
		return x.AggregateOn
	}
	return ""
}

func (x *AggregateTimeSeries) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *AggregateTimeSeries) GetRules() []*AggregateTimeSeriesRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *AggregateTimeSeries) GetFiltersDescription() string {
	if x != nil {
		return x.FiltersDescription
	}
	return ""
}

func (x *AggregateTimeSeries) GetBucketFeature() string {
	if x != nil {
		return x.BucketFeature
	}
	return ""
}

var File_chalk_aggregate_v1_timeseries_proto protoreflect.FileDescriptor

const file_chalk_aggregate_v1_timeseries_proto_rawDesc = "" +
	"\n" +
	"#chalk/aggregate/v1/timeseries.proto\x12\x12chalk.aggregate.v1\x1a\x1egoogle/protobuf/duration.proto\"\x92\x02\n" +
	"\x17AggregateTimeSeriesRule\x12 \n" +
	"\vaggregation\x18\x01 \x01(\tR\vaggregation\x12B\n" +
	"\x0fbucket_duration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0ebucketDuration\x12-\n" +
	"\x12dependent_features\x18\x03 \x03(\tR\x11dependentFeatures\x127\n" +
	"\tretention\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\tretention\x12)\n" +
	"\x10datetime_feature\x18\x05 \x01(\tR\x0fdatetimeFeature\"\x8c\x02\n" +
	"\x13AggregateTimeSeries\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\faggregate_on\x18\x02 \x01(\tR\vaggregateOn\x12\x19\n" +
	"\bgroup_by\x18\x03 \x03(\tR\agroupBy\x12A\n" +
	"\x05rules\x18\x05 \x03(\v2+.chalk.aggregate.v1.AggregateTimeSeriesRuleR\x05rules\x12/\n" +
	"\x13filters_description\x18\x06 \x01(\tR\x12filtersDescription\x12%\n" +
	"\x0ebucket_feature\x18\a \x01(\tR\rbucketFeatureB\xd4\x01\n" +
	"\x16com.chalk.aggregate.v1B\x0fTimeseriesProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/aggregate/v1;aggregatev1\xa2\x02\x03CAX\xaa\x02\x12Chalk.Aggregate.V1\xca\x02\x12Chalk\\Aggregate\\V1\xe2\x02\x1eChalk\\Aggregate\\V1\\GPBMetadata\xea\x02\x14Chalk::Aggregate::V1b\x06proto3"

var (
	file_chalk_aggregate_v1_timeseries_proto_rawDescOnce sync.Once
	file_chalk_aggregate_v1_timeseries_proto_rawDescData []byte
)

func file_chalk_aggregate_v1_timeseries_proto_rawDescGZIP() []byte {
	file_chalk_aggregate_v1_timeseries_proto_rawDescOnce.Do(func() {
		file_chalk_aggregate_v1_timeseries_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_aggregate_v1_timeseries_proto_rawDesc), len(file_chalk_aggregate_v1_timeseries_proto_rawDesc)))
	})
	return file_chalk_aggregate_v1_timeseries_proto_rawDescData
}

var file_chalk_aggregate_v1_timeseries_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chalk_aggregate_v1_timeseries_proto_goTypes = []any{
	(*AggregateTimeSeriesRule)(nil), // 0: chalk.aggregate.v1.AggregateTimeSeriesRule
	(*AggregateTimeSeries)(nil),     // 1: chalk.aggregate.v1.AggregateTimeSeries
	(*durationpb.Duration)(nil),     // 2: google.protobuf.Duration
}
var file_chalk_aggregate_v1_timeseries_proto_depIdxs = []int32{
	2, // 0: chalk.aggregate.v1.AggregateTimeSeriesRule.bucket_duration:type_name -> google.protobuf.Duration
	2, // 1: chalk.aggregate.v1.AggregateTimeSeriesRule.retention:type_name -> google.protobuf.Duration
	0, // 2: chalk.aggregate.v1.AggregateTimeSeries.rules:type_name -> chalk.aggregate.v1.AggregateTimeSeriesRule
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chalk_aggregate_v1_timeseries_proto_init() }
func file_chalk_aggregate_v1_timeseries_proto_init() {
	if File_chalk_aggregate_v1_timeseries_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_aggregate_v1_timeseries_proto_rawDesc), len(file_chalk_aggregate_v1_timeseries_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_aggregate_v1_timeseries_proto_goTypes,
		DependencyIndexes: file_chalk_aggregate_v1_timeseries_proto_depIdxs,
		MessageInfos:      file_chalk_aggregate_v1_timeseries_proto_msgTypes,
	}.Build()
	File_chalk_aggregate_v1_timeseries_proto = out.File
	file_chalk_aggregate_v1_timeseries_proto_goTypes = nil
	file_chalk_aggregate_v1_timeseries_proto_depIdxs = nil
}
