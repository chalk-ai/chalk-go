// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: chalk/aggregate/v1/service.proto

package aggregatev1

import (
	_ "github.com/chalk-ai/chalk-go/gen/chalk/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanAggregateBackfillRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Params        *AggregateBackfillUserParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanAggregateBackfillRequest) Reset() {
	*x = PlanAggregateBackfillRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanAggregateBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanAggregateBackfillRequest) ProtoMessage() {}

func (x *PlanAggregateBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanAggregateBackfillRequest.ProtoReflect.Descriptor instead.
func (*PlanAggregateBackfillRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *PlanAggregateBackfillRequest) GetParams() *AggregateBackfillUserParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PlanAggregateBackfillResponse struct {
	state               protoimpl.MessageState               `protogen:"open.v1"`
	Estimate            *AggregateBackfillCostEstimate       `protobuf:"bytes,2,opt,name=estimate,proto3" json:"estimate,omitempty"`
	Errors              []string                             `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	Backfills           []*AggregateBackfillWithCostEstimate `protobuf:"bytes,6,rep,name=backfills,proto3" json:"backfills,omitempty"`
	AggregateBackfillId string                               `protobuf:"bytes,7,opt,name=aggregate_backfill_id,json=aggregateBackfillId,proto3" json:"aggregate_backfill_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PlanAggregateBackfillResponse) Reset() {
	*x = PlanAggregateBackfillResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanAggregateBackfillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanAggregateBackfillResponse) ProtoMessage() {}

func (x *PlanAggregateBackfillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanAggregateBackfillResponse.ProtoReflect.Descriptor instead.
func (*PlanAggregateBackfillResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *PlanAggregateBackfillResponse) GetEstimate() *AggregateBackfillCostEstimate {
	if x != nil {
		return x.Estimate
	}
	return nil
}

func (x *PlanAggregateBackfillResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *PlanAggregateBackfillResponse) GetBackfills() []*AggregateBackfillWithCostEstimate {
	if x != nil {
		return x.Backfills
	}
	return nil
}

func (x *PlanAggregateBackfillResponse) GetAggregateBackfillId() string {
	if x != nil {
		return x.AggregateBackfillId
	}
	return ""
}

type GetAggregatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ForFeatures   []string               `protobuf:"bytes,1,rep,name=for_features,json=forFeatures,proto3" json:"for_features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAggregatesRequest) Reset() {
	*x = GetAggregatesRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatesRequest) ProtoMessage() {}

func (x *GetAggregatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatesRequest.ProtoReflect.Descriptor instead.
func (*GetAggregatesRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAggregatesRequest) GetForFeatures() []string {
	if x != nil {
		return x.ForFeatures
	}
	return nil
}

type GetAggregatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Series        []*AggregateTimeSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAggregatesResponse) Reset() {
	*x = GetAggregatesResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatesResponse) ProtoMessage() {}

func (x *GetAggregatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatesResponse.ProtoReflect.Descriptor instead.
func (*GetAggregatesResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAggregatesResponse) GetSeries() []*AggregateTimeSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *GetAggregatesResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetAggregateBackfillJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	PlanHash      *string                `protobuf:"bytes,3,opt,name=plan_hash,json=planHash,proto3,oneof" json:"plan_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAggregateBackfillJobsRequest) Reset() {
	*x = GetAggregateBackfillJobsRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregateBackfillJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateBackfillJobsRequest) ProtoMessage() {}

func (x *GetAggregateBackfillJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateBackfillJobsRequest.ProtoReflect.Descriptor instead.
func (*GetAggregateBackfillJobsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAggregateBackfillJobsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAggregateBackfillJobsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetAggregateBackfillJobsRequest) GetPlanHash() string {
	if x != nil && x.PlanHash != nil {
		return *x.PlanHash
	}
	return ""
}

type GetAggregateBackfillJobsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Jobs          []*AggregateBackfillJob `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Cursor        string                  `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAggregateBackfillJobsResponse) Reset() {
	*x = GetAggregateBackfillJobsResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregateBackfillJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateBackfillJobsResponse) ProtoMessage() {}

func (x *GetAggregateBackfillJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateBackfillJobsResponse.ProtoReflect.Descriptor instead.
func (*GetAggregateBackfillJobsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAggregateBackfillJobsResponse) GetJobs() []*AggregateBackfillJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GetAggregateBackfillJobsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type GetAggregateBackfillJobRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AggregateBackfillId string                 `protobuf:"bytes,1,opt,name=aggregate_backfill_id,json=aggregateBackfillId,proto3" json:"aggregate_backfill_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetAggregateBackfillJobRequest) Reset() {
	*x = GetAggregateBackfillJobRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregateBackfillJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateBackfillJobRequest) ProtoMessage() {}

func (x *GetAggregateBackfillJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateBackfillJobRequest.ProtoReflect.Descriptor instead.
func (*GetAggregateBackfillJobRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAggregateBackfillJobRequest) GetAggregateBackfillId() string {
	if x != nil {
		return x.AggregateBackfillId
	}
	return ""
}

type GetAggregateBackfillJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *AggregateBackfillJob  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAggregateBackfillJobResponse) Reset() {
	*x = GetAggregateBackfillJobResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAggregateBackfillJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateBackfillJobResponse) ProtoMessage() {}

func (x *GetAggregateBackfillJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateBackfillJobResponse.ProtoReflect.Descriptor instead.
func (*GetAggregateBackfillJobResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetAggregateBackfillJobResponse) GetJob() *AggregateBackfillJob {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetCronAggregateBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in chalk/aggregate/v1/service.proto.
	CronAggregateBackfillId string `protobuf:"bytes,1,opt,name=cron_aggregate_backfill_id,json=cronAggregateBackfillId,proto3" json:"cron_aggregate_backfill_id,omitempty"`
	PlanHash                string `protobuf:"bytes,2,opt,name=plan_hash,json=planHash,proto3" json:"plan_hash,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetCronAggregateBackfillRequest) Reset() {
	*x = GetCronAggregateBackfillRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCronAggregateBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCronAggregateBackfillRequest) ProtoMessage() {}

func (x *GetCronAggregateBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCronAggregateBackfillRequest.ProtoReflect.Descriptor instead.
func (*GetCronAggregateBackfillRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Marked as deprecated in chalk/aggregate/v1/service.proto.
func (x *GetCronAggregateBackfillRequest) GetCronAggregateBackfillId() string {
	if x != nil {
		return x.CronAggregateBackfillId
	}
	return ""
}

func (x *GetCronAggregateBackfillRequest) GetPlanHash() string {
	if x != nil {
		return x.PlanHash
	}
	return ""
}

type GetCronAggregateBackfillResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CronAggregateBackfill *CronAggregateBackfill `protobuf:"bytes,1,opt,name=cron_aggregate_backfill,json=cronAggregateBackfill,proto3" json:"cron_aggregate_backfill,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetCronAggregateBackfillResponse) Reset() {
	*x = GetCronAggregateBackfillResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCronAggregateBackfillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCronAggregateBackfillResponse) ProtoMessage() {}

func (x *GetCronAggregateBackfillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCronAggregateBackfillResponse.ProtoReflect.Descriptor instead.
func (*GetCronAggregateBackfillResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetCronAggregateBackfillResponse) GetCronAggregateBackfill() *CronAggregateBackfill {
	if x != nil {
		return x.CronAggregateBackfill
	}
	return nil
}

type GetActiveCronAggregateBackfillsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveCronAggregateBackfillsRequest) Reset() {
	*x = GetActiveCronAggregateBackfillsRequest{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveCronAggregateBackfillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveCronAggregateBackfillsRequest) ProtoMessage() {}

func (x *GetActiveCronAggregateBackfillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveCronAggregateBackfillsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveCronAggregateBackfillsRequest) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{10}
}

type CronAggregateBackfillWithLatestRun struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CronAggregateBackfill *CronAggregateBackfill `protobuf:"bytes,1,opt,name=cron_aggregate_backfill,json=cronAggregateBackfill,proto3" json:"cron_aggregate_backfill,omitempty"`
	LatestJob             *AggregateBackfillJob  `protobuf:"bytes,2,opt,name=latest_job,json=latestJob,proto3" json:"latest_job,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CronAggregateBackfillWithLatestRun) Reset() {
	*x = CronAggregateBackfillWithLatestRun{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronAggregateBackfillWithLatestRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronAggregateBackfillWithLatestRun) ProtoMessage() {}

func (x *CronAggregateBackfillWithLatestRun) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronAggregateBackfillWithLatestRun.ProtoReflect.Descriptor instead.
func (*CronAggregateBackfillWithLatestRun) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *CronAggregateBackfillWithLatestRun) GetCronAggregateBackfill() *CronAggregateBackfill {
	if x != nil {
		return x.CronAggregateBackfill
	}
	return nil
}

func (x *CronAggregateBackfillWithLatestRun) GetLatestJob() *AggregateBackfillJob {
	if x != nil {
		return x.LatestJob
	}
	return nil
}

type GetActiveCronAggregateBackfillsResponse struct {
	state                  protoimpl.MessageState                `protogen:"open.v1"`
	CronAggregateBackfills []*CronAggregateBackfillWithLatestRun `protobuf:"bytes,1,rep,name=cron_aggregate_backfills,json=cronAggregateBackfills,proto3" json:"cron_aggregate_backfills,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetActiveCronAggregateBackfillsResponse) Reset() {
	*x = GetActiveCronAggregateBackfillsResponse{}
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveCronAggregateBackfillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveCronAggregateBackfillsResponse) ProtoMessage() {}

func (x *GetActiveCronAggregateBackfillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_aggregate_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveCronAggregateBackfillsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveCronAggregateBackfillsResponse) Descriptor() ([]byte, []int) {
	return file_chalk_aggregate_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetActiveCronAggregateBackfillsResponse) GetCronAggregateBackfills() []*CronAggregateBackfillWithLatestRun {
	if x != nil {
		return x.CronAggregateBackfills
	}
	return nil
}

var File_chalk_aggregate_v1_service_proto protoreflect.FileDescriptor

const file_chalk_aggregate_v1_service_proto_rawDesc = "" +
	"\n" +
	" chalk/aggregate/v1/service.proto\x12\x12chalk.aggregate.v1\x1a!chalk/aggregate/v1/backfill.proto\x1a#chalk/aggregate/v1/timeseries.proto\x1a\x19chalk/auth/v1/audit.proto\x1a\x1fchalk/auth/v1/permissions.proto\"g\n" +
	"\x1cPlanAggregateBackfillRequest\x12G\n" +
	"\x06params\x18\x01 \x01(\v2/.chalk.aggregate.v1.AggregateBackfillUserParamsR\x06params\"\x8f\x02\n" +
	"\x1dPlanAggregateBackfillResponse\x12M\n" +
	"\bestimate\x18\x02 \x01(\v21.chalk.aggregate.v1.AggregateBackfillCostEstimateR\bestimate\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors\x12S\n" +
	"\tbackfills\x18\x06 \x03(\v25.chalk.aggregate.v1.AggregateBackfillWithCostEstimateR\tbackfills\x122\n" +
	"\x15aggregate_backfill_id\x18\a \x01(\tR\x13aggregateBackfillId\"9\n" +
	"\x14GetAggregatesRequest\x12!\n" +
	"\ffor_features\x18\x01 \x03(\tR\vforFeatures\"p\n" +
	"\x15GetAggregatesResponse\x12?\n" +
	"\x06series\x18\x01 \x03(\v2'.chalk.aggregate.v1.AggregateTimeSeriesR\x06series\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"\x7f\n" +
	"\x1fGetAggregateBackfillJobsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x12 \n" +
	"\tplan_hash\x18\x03 \x01(\tH\x00R\bplanHash\x88\x01\x01B\f\n" +
	"\n" +
	"_plan_hash\"x\n" +
	" GetAggregateBackfillJobsResponse\x12<\n" +
	"\x04jobs\x18\x01 \x03(\v2(.chalk.aggregate.v1.AggregateBackfillJobR\x04jobs\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"T\n" +
	"\x1eGetAggregateBackfillJobRequest\x122\n" +
	"\x15aggregate_backfill_id\x18\x01 \x01(\tR\x13aggregateBackfillId\"]\n" +
	"\x1fGetAggregateBackfillJobResponse\x12:\n" +
	"\x03job\x18\x01 \x01(\v2(.chalk.aggregate.v1.AggregateBackfillJobR\x03job\"\x7f\n" +
	"\x1fGetCronAggregateBackfillRequest\x12?\n" +
	"\x1acron_aggregate_backfill_id\x18\x01 \x01(\tB\x02\x18\x01R\x17cronAggregateBackfillId\x12\x1b\n" +
	"\tplan_hash\x18\x02 \x01(\tR\bplanHash\"\x85\x01\n" +
	" GetCronAggregateBackfillResponse\x12a\n" +
	"\x17cron_aggregate_backfill\x18\x01 \x01(\v2).chalk.aggregate.v1.CronAggregateBackfillR\x15cronAggregateBackfill\"(\n" +
	"&GetActiveCronAggregateBackfillsRequest\"\xd0\x01\n" +
	"\"CronAggregateBackfillWithLatestRun\x12a\n" +
	"\x17cron_aggregate_backfill\x18\x01 \x01(\v2).chalk.aggregate.v1.CronAggregateBackfillR\x15cronAggregateBackfill\x12G\n" +
	"\n" +
	"latest_job\x18\x02 \x01(\v2(.chalk.aggregate.v1.AggregateBackfillJobR\tlatestJob\"\x9b\x01\n" +
	"'GetActiveCronAggregateBackfillsResponse\x12p\n" +
	"\x18cron_aggregate_backfills\x18\x01 \x03(\v26.chalk.aggregate.v1.CronAggregateBackfillWithLatestRunR\x16cronAggregateBackfills2\xe5\x06\n" +
	"\x10AggregateService\x12\x8a\x01\n" +
	"\x15PlanAggregateBackfill\x120.chalk.aggregate.v1.PlanAggregateBackfillRequest\x1a1.chalk.aggregate.v1.PlanAggregateBackfillResponse\"\f\x80}\f\x8a\xd3\x0e\x02\b\x02\x90\x02\x01\x12r\n" +
	"\rGetAggregates\x12(.chalk.aggregate.v1.GetAggregatesRequest\x1a).chalk.aggregate.v1.GetAggregatesResponse\"\f\x80}\v\x8a\xd3\x0e\x02\b\x02\x90\x02\x01\x12\x8d\x01\n" +
	"\x18GetAggregateBackfillJobs\x123.chalk.aggregate.v1.GetAggregateBackfillJobsRequest\x1a4.chalk.aggregate.v1.GetAggregateBackfillJobsResponse\"\x06\x80}\v\x90\x02\x01\x12\x8a\x01\n" +
	"\x17GetAggregateBackfillJob\x122.chalk.aggregate.v1.GetAggregateBackfillJobRequest\x1a3.chalk.aggregate.v1.GetAggregateBackfillJobResponse\"\x06\x80}\v\x90\x02\x01\x12\x8d\x01\n" +
	"\x18GetCronAggregateBackfill\x123.chalk.aggregate.v1.GetCronAggregateBackfillRequest\x1a4.chalk.aggregate.v1.GetCronAggregateBackfillResponse\"\x06\x80}\v\x90\x02\x01\x12\xa2\x01\n" +
	"\x1fGetActiveCronAggregateBackfills\x12:.chalk.aggregate.v1.GetActiveCronAggregateBackfillsRequest\x1a;.chalk.aggregate.v1.GetActiveCronAggregateBackfillsResponse\"\x06\x80}\v\x90\x02\x01B\xd1\x01\n" +
	"\x16com.chalk.aggregate.v1B\fServiceProtoP\x01Z?github.com/chalk-ai/chalk-go/gen/chalk/aggregate/v1;aggregatev1\xa2\x02\x03CAX\xaa\x02\x12Chalk.Aggregate.V1\xca\x02\x12Chalk\\Aggregate\\V1\xe2\x02\x1eChalk\\Aggregate\\V1\\GPBMetadata\xea\x02\x14Chalk::Aggregate::V1b\x06proto3"

var (
	file_chalk_aggregate_v1_service_proto_rawDescOnce sync.Once
	file_chalk_aggregate_v1_service_proto_rawDescData []byte
)

func file_chalk_aggregate_v1_service_proto_rawDescGZIP() []byte {
	file_chalk_aggregate_v1_service_proto_rawDescOnce.Do(func() {
		file_chalk_aggregate_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chalk_aggregate_v1_service_proto_rawDesc), len(file_chalk_aggregate_v1_service_proto_rawDesc)))
	})
	return file_chalk_aggregate_v1_service_proto_rawDescData
}

var file_chalk_aggregate_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_chalk_aggregate_v1_service_proto_goTypes = []any{
	(*PlanAggregateBackfillRequest)(nil),            // 0: chalk.aggregate.v1.PlanAggregateBackfillRequest
	(*PlanAggregateBackfillResponse)(nil),           // 1: chalk.aggregate.v1.PlanAggregateBackfillResponse
	(*GetAggregatesRequest)(nil),                    // 2: chalk.aggregate.v1.GetAggregatesRequest
	(*GetAggregatesResponse)(nil),                   // 3: chalk.aggregate.v1.GetAggregatesResponse
	(*GetAggregateBackfillJobsRequest)(nil),         // 4: chalk.aggregate.v1.GetAggregateBackfillJobsRequest
	(*GetAggregateBackfillJobsResponse)(nil),        // 5: chalk.aggregate.v1.GetAggregateBackfillJobsResponse
	(*GetAggregateBackfillJobRequest)(nil),          // 6: chalk.aggregate.v1.GetAggregateBackfillJobRequest
	(*GetAggregateBackfillJobResponse)(nil),         // 7: chalk.aggregate.v1.GetAggregateBackfillJobResponse
	(*GetCronAggregateBackfillRequest)(nil),         // 8: chalk.aggregate.v1.GetCronAggregateBackfillRequest
	(*GetCronAggregateBackfillResponse)(nil),        // 9: chalk.aggregate.v1.GetCronAggregateBackfillResponse
	(*GetActiveCronAggregateBackfillsRequest)(nil),  // 10: chalk.aggregate.v1.GetActiveCronAggregateBackfillsRequest
	(*CronAggregateBackfillWithLatestRun)(nil),      // 11: chalk.aggregate.v1.CronAggregateBackfillWithLatestRun
	(*GetActiveCronAggregateBackfillsResponse)(nil), // 12: chalk.aggregate.v1.GetActiveCronAggregateBackfillsResponse
	(*AggregateBackfillUserParams)(nil),             // 13: chalk.aggregate.v1.AggregateBackfillUserParams
	(*AggregateBackfillCostEstimate)(nil),           // 14: chalk.aggregate.v1.AggregateBackfillCostEstimate
	(*AggregateBackfillWithCostEstimate)(nil),       // 15: chalk.aggregate.v1.AggregateBackfillWithCostEstimate
	(*AggregateTimeSeries)(nil),                     // 16: chalk.aggregate.v1.AggregateTimeSeries
	(*AggregateBackfillJob)(nil),                    // 17: chalk.aggregate.v1.AggregateBackfillJob
	(*CronAggregateBackfill)(nil),                   // 18: chalk.aggregate.v1.CronAggregateBackfill
}
var file_chalk_aggregate_v1_service_proto_depIdxs = []int32{
	13, // 0: chalk.aggregate.v1.PlanAggregateBackfillRequest.params:type_name -> chalk.aggregate.v1.AggregateBackfillUserParams
	14, // 1: chalk.aggregate.v1.PlanAggregateBackfillResponse.estimate:type_name -> chalk.aggregate.v1.AggregateBackfillCostEstimate
	15, // 2: chalk.aggregate.v1.PlanAggregateBackfillResponse.backfills:type_name -> chalk.aggregate.v1.AggregateBackfillWithCostEstimate
	16, // 3: chalk.aggregate.v1.GetAggregatesResponse.series:type_name -> chalk.aggregate.v1.AggregateTimeSeries
	17, // 4: chalk.aggregate.v1.GetAggregateBackfillJobsResponse.jobs:type_name -> chalk.aggregate.v1.AggregateBackfillJob
	17, // 5: chalk.aggregate.v1.GetAggregateBackfillJobResponse.job:type_name -> chalk.aggregate.v1.AggregateBackfillJob
	18, // 6: chalk.aggregate.v1.GetCronAggregateBackfillResponse.cron_aggregate_backfill:type_name -> chalk.aggregate.v1.CronAggregateBackfill
	18, // 7: chalk.aggregate.v1.CronAggregateBackfillWithLatestRun.cron_aggregate_backfill:type_name -> chalk.aggregate.v1.CronAggregateBackfill
	17, // 8: chalk.aggregate.v1.CronAggregateBackfillWithLatestRun.latest_job:type_name -> chalk.aggregate.v1.AggregateBackfillJob
	11, // 9: chalk.aggregate.v1.GetActiveCronAggregateBackfillsResponse.cron_aggregate_backfills:type_name -> chalk.aggregate.v1.CronAggregateBackfillWithLatestRun
	0,  // 10: chalk.aggregate.v1.AggregateService.PlanAggregateBackfill:input_type -> chalk.aggregate.v1.PlanAggregateBackfillRequest
	2,  // 11: chalk.aggregate.v1.AggregateService.GetAggregates:input_type -> chalk.aggregate.v1.GetAggregatesRequest
	4,  // 12: chalk.aggregate.v1.AggregateService.GetAggregateBackfillJobs:input_type -> chalk.aggregate.v1.GetAggregateBackfillJobsRequest
	6,  // 13: chalk.aggregate.v1.AggregateService.GetAggregateBackfillJob:input_type -> chalk.aggregate.v1.GetAggregateBackfillJobRequest
	8,  // 14: chalk.aggregate.v1.AggregateService.GetCronAggregateBackfill:input_type -> chalk.aggregate.v1.GetCronAggregateBackfillRequest
	10, // 15: chalk.aggregate.v1.AggregateService.GetActiveCronAggregateBackfills:input_type -> chalk.aggregate.v1.GetActiveCronAggregateBackfillsRequest
	1,  // 16: chalk.aggregate.v1.AggregateService.PlanAggregateBackfill:output_type -> chalk.aggregate.v1.PlanAggregateBackfillResponse
	3,  // 17: chalk.aggregate.v1.AggregateService.GetAggregates:output_type -> chalk.aggregate.v1.GetAggregatesResponse
	5,  // 18: chalk.aggregate.v1.AggregateService.GetAggregateBackfillJobs:output_type -> chalk.aggregate.v1.GetAggregateBackfillJobsResponse
	7,  // 19: chalk.aggregate.v1.AggregateService.GetAggregateBackfillJob:output_type -> chalk.aggregate.v1.GetAggregateBackfillJobResponse
	9,  // 20: chalk.aggregate.v1.AggregateService.GetCronAggregateBackfill:output_type -> chalk.aggregate.v1.GetCronAggregateBackfillResponse
	12, // 21: chalk.aggregate.v1.AggregateService.GetActiveCronAggregateBackfills:output_type -> chalk.aggregate.v1.GetActiveCronAggregateBackfillsResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chalk_aggregate_v1_service_proto_init() }
func file_chalk_aggregate_v1_service_proto_init() {
	if File_chalk_aggregate_v1_service_proto != nil {
		return
	}
	file_chalk_aggregate_v1_backfill_proto_init()
	file_chalk_aggregate_v1_timeseries_proto_init()
	file_chalk_aggregate_v1_service_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chalk_aggregate_v1_service_proto_rawDesc), len(file_chalk_aggregate_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chalk_aggregate_v1_service_proto_goTypes,
		DependencyIndexes: file_chalk_aggregate_v1_service_proto_depIdxs,
		MessageInfos:      file_chalk_aggregate_v1_service_proto_msgTypes,
	}.Build()
	File_chalk_aggregate_v1_service_proto = out.File
	file_chalk_aggregate_v1_service_proto_goTypes = nil
	file_chalk_aggregate_v1_service_proto_depIdxs = nil
}
