// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: chalk/onlinestore/v1/online_store_config.proto

package onlinestorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreOnline     *bool                `protobuf:"varint,1,opt,name=store_online,json=storeOnline,proto3,oneof" json:"store_online,omitempty"` // optional to avoid 'false by default'
	MaxStaleness    *durationpb.Duration `protobuf:"bytes,2,opt,name=max_staleness,json=maxStaleness,proto3" json:"max_staleness,omitempty"`
	InternalVersion string               `protobuf:"bytes,3,opt,name=internal_version,json=internalVersion,proto3" json:"internal_version,omitempty"`
}

func (x *FeatureInfo) Reset() {
	*x = FeatureInfo{}
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureInfo) ProtoMessage() {}

func (x *FeatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureInfo.ProtoReflect.Descriptor instead.
func (*FeatureInfo) Descriptor() ([]byte, []int) {
	return file_chalk_onlinestore_v1_online_store_config_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureInfo) GetStoreOnline() bool {
	if x != nil && x.StoreOnline != nil {
		return *x.StoreOnline
	}
	return false
}

func (x *FeatureInfo) GetMaxStaleness() *durationpb.Duration {
	if x != nil {
		return x.MaxStaleness
	}
	return nil
}

func (x *FeatureInfo) GetInternalVersion() string {
	if x != nil {
		return x.InternalVersion
	}
	return ""
}

// For each namespace, store every feature we expect to be there & its staleness
type ScalarsForNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys are persistence keys, i.e. they include internal version
	Scalars map[string]*FeatureInfo `protobuf:"bytes,1,rep,name=scalars,proto3" json:"scalars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ScalarsForNamespace) Reset() {
	*x = ScalarsForNamespace{}
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalarsForNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarsForNamespace) ProtoMessage() {}

func (x *ScalarsForNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarsForNamespace.ProtoReflect.Descriptor instead.
func (*ScalarsForNamespace) Descriptor() ([]byte, []int) {
	return file_chalk_onlinestore_v1_online_store_config_proto_rawDescGZIP(), []int{1}
}

func (x *ScalarsForNamespace) GetScalars() map[string]*FeatureInfo {
	if x != nil {
		return x.Scalars
	}
	return nil
}

type OnlineStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String keys here are the namespaces
	ScalarInfo map[string]*ScalarsForNamespace `protobuf:"bytes,1,rep,name=scalar_info,json=scalarInfo,proto3" json:"scalar_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of join persistence key --> staleness for the has-many index
	HasManyInfo map[string]*FeatureInfo `protobuf:"bytes,2,rep,name=has_many_info,json=hasManyInfo,proto3" json:"has_many_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OnlineStoreInfo) Reset() {
	*x = OnlineStoreInfo{}
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineStoreInfo) ProtoMessage() {}

func (x *OnlineStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineStoreInfo.ProtoReflect.Descriptor instead.
func (*OnlineStoreInfo) Descriptor() ([]byte, []int) {
	return file_chalk_onlinestore_v1_online_store_config_proto_rawDescGZIP(), []int{2}
}

func (x *OnlineStoreInfo) GetScalarInfo() map[string]*ScalarsForNamespace {
	if x != nil {
		return x.ScalarInfo
	}
	return nil
}

func (x *OnlineStoreInfo) GetHasManyInfo() map[string]*FeatureInfo {
	if x != nil {
		return x.HasManyInfo
	}
	return nil
}

var File_chalk_onlinestore_v1_online_store_config_proto protoreflect.FileDescriptor

var file_chalk_onlinestore_v1_online_store_config_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x13, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x73, 0x46, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x73, 0x1a, 0x5d, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x92, 0x03, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63,
	0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x5a, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x61,
	0x73, 0x4d, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x68, 0x0a, 0x0f, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0xe9, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c,
	0x6b, 0x2d, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6b, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x4f, 0x58, 0xaa, 0x02, 0x14, 0x43, 0x68, 0x61,
	0x6c, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x14, 0x43, 0x68, 0x61, 0x6c, 0x6b, 0x5c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x43, 0x68, 0x61, 0x6c, 0x6b,
	0x5c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x43, 0x68,
	0x61, 0x6c, 0x6b, 0x3a, 0x3a, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chalk_onlinestore_v1_online_store_config_proto_rawDescOnce sync.Once
	file_chalk_onlinestore_v1_online_store_config_proto_rawDescData = file_chalk_onlinestore_v1_online_store_config_proto_rawDesc
)

func file_chalk_onlinestore_v1_online_store_config_proto_rawDescGZIP() []byte {
	file_chalk_onlinestore_v1_online_store_config_proto_rawDescOnce.Do(func() {
		file_chalk_onlinestore_v1_online_store_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_chalk_onlinestore_v1_online_store_config_proto_rawDescData)
	})
	return file_chalk_onlinestore_v1_online_store_config_proto_rawDescData
}

var file_chalk_onlinestore_v1_online_store_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_chalk_onlinestore_v1_online_store_config_proto_goTypes = []any{
	(*FeatureInfo)(nil),         // 0: chalk.onlinestore.v1.FeatureInfo
	(*ScalarsForNamespace)(nil), // 1: chalk.onlinestore.v1.ScalarsForNamespace
	(*OnlineStoreInfo)(nil),     // 2: chalk.onlinestore.v1.OnlineStoreInfo
	nil,                         // 3: chalk.onlinestore.v1.ScalarsForNamespace.ScalarsEntry
	nil,                         // 4: chalk.onlinestore.v1.OnlineStoreInfo.ScalarInfoEntry
	nil,                         // 5: chalk.onlinestore.v1.OnlineStoreInfo.HasManyInfoEntry
	(*durationpb.Duration)(nil), // 6: google.protobuf.Duration
}
var file_chalk_onlinestore_v1_online_store_config_proto_depIdxs = []int32{
	6, // 0: chalk.onlinestore.v1.FeatureInfo.max_staleness:type_name -> google.protobuf.Duration
	3, // 1: chalk.onlinestore.v1.ScalarsForNamespace.scalars:type_name -> chalk.onlinestore.v1.ScalarsForNamespace.ScalarsEntry
	4, // 2: chalk.onlinestore.v1.OnlineStoreInfo.scalar_info:type_name -> chalk.onlinestore.v1.OnlineStoreInfo.ScalarInfoEntry
	5, // 3: chalk.onlinestore.v1.OnlineStoreInfo.has_many_info:type_name -> chalk.onlinestore.v1.OnlineStoreInfo.HasManyInfoEntry
	0, // 4: chalk.onlinestore.v1.ScalarsForNamespace.ScalarsEntry.value:type_name -> chalk.onlinestore.v1.FeatureInfo
	1, // 5: chalk.onlinestore.v1.OnlineStoreInfo.ScalarInfoEntry.value:type_name -> chalk.onlinestore.v1.ScalarsForNamespace
	0, // 6: chalk.onlinestore.v1.OnlineStoreInfo.HasManyInfoEntry.value:type_name -> chalk.onlinestore.v1.FeatureInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_chalk_onlinestore_v1_online_store_config_proto_init() }
func file_chalk_onlinestore_v1_online_store_config_proto_init() {
	if File_chalk_onlinestore_v1_online_store_config_proto != nil {
		return
	}
	file_chalk_onlinestore_v1_online_store_config_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chalk_onlinestore_v1_online_store_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chalk_onlinestore_v1_online_store_config_proto_goTypes,
		DependencyIndexes: file_chalk_onlinestore_v1_online_store_config_proto_depIdxs,
		MessageInfos:      file_chalk_onlinestore_v1_online_store_config_proto_msgTypes,
	}.Build()
	File_chalk_onlinestore_v1_online_store_config_proto = out.File
	file_chalk_onlinestore_v1_online_store_config_proto_rawDesc = nil
	file_chalk_onlinestore_v1_online_store_config_proto_goTypes = nil
	file_chalk_onlinestore_v1_online_store_config_proto_depIdxs = nil
}
