// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: gen_bq_schema/bq_table.proto

package gen_bq_schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BigQueryMessageOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies a name of table in BigQuery for the message.
	//
	// If not blank, indicates the message is a type of record to be stored into BigQuery.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// If true, BigQuery field names will default to a field's JSON name,
	// not its original/proto field name.
	UseJsonNames bool `protobuf:"varint,2,opt,name=use_json_names,json=useJsonNames,proto3" json:"use_json_names,omitempty"`
	// If set, adds defined extra fields to a JSON representation of the message.
	// Value format: "<field name>:<BigQuery field type>" for basic types
	// or "<field name>:RECORD:<protobuf type>" for message types.
	// "NULLABLE" by default, different mode may be set via optional suffix ":<mode>"
	ExtraFields   []string `protobuf:"bytes,3,rep,name=extra_fields,json=extraFields,proto3" json:"extra_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigQueryMessageOptions) Reset() {
	*x = BigQueryMessageOptions{}
	mi := &file_gen_bq_schema_bq_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigQueryMessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigQueryMessageOptions) ProtoMessage() {}

func (x *BigQueryMessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gen_bq_schema_bq_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigQueryMessageOptions.ProtoReflect.Descriptor instead.
func (*BigQueryMessageOptions) Descriptor() ([]byte, []int) {
	return file_gen_bq_schema_bq_table_proto_rawDescGZIP(), []int{0}
}

func (x *BigQueryMessageOptions) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *BigQueryMessageOptions) GetUseJsonNames() bool {
	if x != nil {
		return x.UseJsonNames
	}
	return false
}

func (x *BigQueryMessageOptions) GetExtraFields() []string {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

var file_gen_bq_schema_bq_table_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*BigQueryMessageOptions)(nil),
		Field:         1021,
		Name:          "gen_bq_schema.bigquery_opts",
		Tag:           "bytes,1021,opt,name=bigquery_opts",
		Filename:      "gen_bq_schema/bq_table.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// BigQuery message schema generation options.
	//
	// The field number is a globally unique id for this option, assigned by
	// protobuf-global-extension-registry@google.com
	//
	// optional gen_bq_schema.BigQueryMessageOptions bigquery_opts = 1021;
	E_BigqueryOpts = &file_gen_bq_schema_bq_table_proto_extTypes[0]
)

var File_gen_bq_schema_bq_table_proto protoreflect.FileDescriptor

const file_gen_bq_schema_bq_table_proto_rawDesc = "" +
	"\n" +
	"\x1cgen_bq_schema/bq_table.proto\x12\rgen_bq_schema\x1a google/protobuf/descriptor.proto\"\x80\x01\n" +
	"\x16BigQueryMessageOptions\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12$\n" +
	"\x0euse_json_names\x18\x02 \x01(\bR\fuseJsonNames\x12!\n" +
	"\fextra_fields\x18\x03 \x03(\tR\vextraFields:l\n" +
	"\rbigquery_opts\x12\x1f.google.protobuf.MessageOptions\x18\xfd\a \x01(\v2%.gen_bq_schema.BigQueryMessageOptionsR\fbigqueryOptsB\x9d\x01\n" +
	"\x11com.gen_bq_schemaB\fBqTableProtoP\x01Z.github.com/chalk-ai/chalk-go/gen/gen_bq_schema\xa2\x02\x03GXX\xaa\x02\vGenBqSchema\xca\x02\vGenBqSchema\xe2\x02\x17GenBqSchema\\GPBMetadata\xea\x02\vGenBqSchemab\x06proto3"

var (
	file_gen_bq_schema_bq_table_proto_rawDescOnce sync.Once
	file_gen_bq_schema_bq_table_proto_rawDescData []byte
)

func file_gen_bq_schema_bq_table_proto_rawDescGZIP() []byte {
	file_gen_bq_schema_bq_table_proto_rawDescOnce.Do(func() {
		file_gen_bq_schema_bq_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gen_bq_schema_bq_table_proto_rawDesc), len(file_gen_bq_schema_bq_table_proto_rawDesc)))
	})
	return file_gen_bq_schema_bq_table_proto_rawDescData
}

var file_gen_bq_schema_bq_table_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gen_bq_schema_bq_table_proto_goTypes = []any{
	(*BigQueryMessageOptions)(nil),      // 0: gen_bq_schema.BigQueryMessageOptions
	(*descriptorpb.MessageOptions)(nil), // 1: google.protobuf.MessageOptions
}
var file_gen_bq_schema_bq_table_proto_depIdxs = []int32{
	1, // 0: gen_bq_schema.bigquery_opts:extendee -> google.protobuf.MessageOptions
	0, // 1: gen_bq_schema.bigquery_opts:type_name -> gen_bq_schema.BigQueryMessageOptions
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	1, // [1:2] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gen_bq_schema_bq_table_proto_init() }
func file_gen_bq_schema_bq_table_proto_init() {
	if File_gen_bq_schema_bq_table_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gen_bq_schema_bq_table_proto_rawDesc), len(file_gen_bq_schema_bq_table_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_gen_bq_schema_bq_table_proto_goTypes,
		DependencyIndexes: file_gen_bq_schema_bq_table_proto_depIdxs,
		MessageInfos:      file_gen_bq_schema_bq_table_proto_msgTypes,
		ExtensionInfos:    file_gen_bq_schema_bq_table_proto_extTypes,
	}.Build()
	File_gen_bq_schema_bq_table_proto = out.File
	file_gen_bq_schema_bq_table_proto_goTypes = nil
	file_gen_bq_schema_bq_table_proto_depIdxs = nil
}
